{"version":3,"sources":["./src/app/command/device-core-command/device-associated-core-command-list/device-associated-core-command-list.component.ts","./src/app/command/device-core-command/device-associated-core-command-list/device-associated-core-command-list.component.html","./src/app/services/command.service.ts","./src/app/command/device-core-command/device-core-command-combo-list/device-core-command-combo-list.component.ts","./src/app/command/device-core-command/device-core-command-combo-list/device-core-command-combo-list.component.html","./src/app/command/command-routing.module.ts","./src/app/command/device-core-command/device-core-command-list/device-core-command-list.component.ts","./src/app/command/device-core-command/device-core-command-list/device-core-command-list.component.html","./src/app/command/command.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;iFAciF;AAEF;;;;;;;IC2BvC,4EACA;IAD2I,wXAAwB,+SAA+B,KAAK,KAApC;IAAnK,4DACA;;;;;;IAD0D,yGAAsB;IAA2D,sFAAwB;;;IAF3K,0EACI;IAAA,2EACI;IAAA,qJACA;IAAA,4EAAqE;IAAA,8DAAG;IAAA,4DAAQ;IACpF,4DAAO;IACX,4DAAM;;;;;;IAHsG,0DAAyB;IAAzB,+FAAyB;IAChF,0DAAuB;IAAvB,0GAAuB;;;;IAKpE,4EACA;IAD2I,2XAAwB,kTAA+B,KAAK,KAApC;IAAnK,4DACA;;;;;;IAD0D,yGAAsB;IAA2D,uFAAwB;;;IAF3K,0EACI;IAAA,2EACI;IAAA,qJACA;IAAA,4EAAqE;IAAA,8DAAG;IAAA,4DAAQ;IACpF,4DAAO;IACX,4DAAM;;;;;;IAHsG,0DAAyB;IAAzB,+FAAyB;IAChF,0DAAuB;IAAvB,0GAAuB;;;;IAdxF,qEACI;IAAA,qEAAI;IAAA,4EAAsG;IAAhC,gYAA+B;IAArG,4DAAsG;IAAA,4DAAK;IAC/G,yEAA4B;IAAA,uDAAY;IAAA,4DAAK;IAC7C,qEACI;IAAA,sEACI;IAAA,2IAKM;IACN,2IAKM;IACV,4DAAM;IAEV,4DAAK;IACL,qEAAI;IAAA,wDAAW;IAAA,4DAAK;IACpB,sEAAI;IAAA,wDAAY;IAAA,4DAAK;IACzB,4DAAK;;;;IAtBiE,wGAA0C;IAClE,0DAA+B;IAA/B,kGAA+B;IAC7C,0DAAY;IAAZ,4EAAY;IAG1B,0DAAa;IAAb,4EAAa;IAMb,0DAAa;IAAb,4EAAa;IASvB,0DAAW;IAAX,2EAAW;IACX,0DAAY;IAAZ,4EAAY;;AD9BjC,MAAM,wCAAwC;IAUnD,YAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QANhC,+BAA0B,GAAG,IAAI,0DAAY,EAAe,CAAC;QACvE,qCAAgC,GAAkB,EAAE,CAAC;QAE3C,uBAAkB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAChD,oBAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;IAEV,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,MAAM;aACV,wCAAwC,CAAC,IAAI,CAAC,UAAoB,CAAC;aACnE,SAAS,CAAC,CAAC,IAA+B,EAAC,EAAE;YAC5C,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;QAC9E,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAU,EAAE,UAAkB;QAC1C,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;QACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,CAAC,IAAY;;QACpB,OAAO,WAAI,CAAC,eAAe,0CAAE,IAAI,MAAK,IAAI,CAAC;IAC7C,CAAC;IAED,cAAc,CAAC,OAAiB;QAC9B,IAAI,OAAO,EAAE;YACX,OAAO,OAAO,CAAC;SAChB;QACD,OAAO,KAAK;IACd,CAAC;IAED,SAAS,CAAC,KAAU,EAAE,OAAoB;QACxC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;QAC9B,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,EAAiB,CAAC;SAC1C;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;;gIApDU,wCAAwC;wHAAxC,wCAAwC;QCTrD,yEACI;QAAA,yEACI;QAAA,kEAA2C;QAC3C,uEAAO;QAAA,0EAAwB;QAAA,uDAAc;QAAA,4DAAO;QAAC,oFAAwB;QAAA,4DAAO;QACxF,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,4EACI;QAAA,sEACE;QAAA,yEAAgB;QAAA,6DAAC;QAAA,4DAAK;QACtB,yEAAgB;QAAA,gEAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,+DAAG;QAAA,4DAAK;QACxB,yEAAgB;QAAA,gEAAI;QAAA,4DAAK;QAC3B,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,qIAsBK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA1CiC,0DAAc;QAAd,+EAAc;QAeb,2DAAoC;QAApC,yGAAoC;;6FDT/D,wCAAwC;cALpD,uDAAS;eAAC;gBACT,QAAQ,EAAE,yCAAyC;gBACnD,WAAW,EAAE,sDAAsD;gBACnE,SAAS,EAAE,CAAC,qDAAqD,CAAC;aACnE;wHAGU,UAAU;kBAAlB,mDAAK;YACG,eAAe;kBAAvB,mDAAK;YACI,0BAA0B;kBAAnC,oDAAM;YAEE,UAAU;kBAAlB,mDAAK;YACI,kBAAkB;kBAA3B,oDAAM;YACG,eAAe;kBAAxB,oDAAM;;;;;;;;;;;;;;AEnCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;iFAciF;AAEC;AACvC;AAEM;;;;AAU1C,MAAM,cAAc;IAuBzB,YAAoB,IAAgB,EAAU,QAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAc;QArBpE,aAAQ,GAAW,UAAU,CAAC;QAC9B,YAAO,GAAW,SAAS,CAAC;QAC5B,cAAS,GAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAEtD,sBAAiB,GAAW,OAAO,CAAC;QACpC,eAAU,GAAW,UAAU,CAAC;QAEhC,cAAS,GAAW,SAAS,CAAC;QAE9B,6BAAwB,GAAW,GAAG,IAAI,CAAC,SAAS,aAAa,CAAC;QAClE,0BAAqB,GAAW,GAAG,IAAI,CAAC,SAAS,UAAU,CAAC,CAAC,YAAY;QACzE,4BAAuB,GAAW,GAAG,IAAI,CAAC,SAAS,eAAe,CAAC,CAAC,YAAY;QAChF,sCAAiC,GAAW,GAAG,IAAI,CAAC,SAAS,eAAe,CAAC;QAE7E,6BAAwB,GAAG;YACzB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,EAAE;aACpB,CAAC;SACH,CAAC;IAEsE,CAAC;IAEzE,SAAS;QACP,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,YAAY;IACZ,sBAAsB,CAAC,QAAgB;QACrC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,qBAAqB,GAAG,QAAQ,EAAE,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,+BAA+B,CAAC,MAAc,EAAE,KAAa;QAC3D,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,wBAAwB,WAAW,MAAM,UAAU,KAAK,EAAE,CAAC;QAC7E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkC,GAAG,CAAC,CAAC,IAAI,CAC7D,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,wCAAwC,CAAC,IAAY;QACnD,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,uBAAuB,GAAG,IAAI,EAAE,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA4B,GAAG,CAAC,CAAC,IAAI,CACvD,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,YAAY;IACZ,qBAAqB;QACnB,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,SAAS,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAC5B,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,SAAiB;QACnD,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,qBAAqB,GAAG,QAAQ,YAAY,SAAS,EAAE,CAAC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE;YACnC,YAAY,EAAE,aAAa;SAC5B,CAAC,CAAC,IAAI,CACL,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,WAAW,CAAC,UAAkB,EAAE,WAAmB;QACjD,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,iCAAiC,GAAG,UAAU,IAAI,WAAW,EAAE,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,CAAC,CAAC,IAAI,CAC3C,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;IAED,YAAY;IACZ,sEAAsE;IACtE,gGAAgG;IAChG,oCAAoC;IACpC,4DAA4D;IAC5D,MAAM;IACN,IAAI;IAEJ,WAAW,CAAC,UAAkB,EAAE,WAAmB,EAAE,MAAY;QAC/D,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,iCAAiC,GAAG,UAAU,IAAI,WAAW,EAAE,CAAC;QAClF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAChG,iEAAU,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CACtD;IACH,CAAC;;4EA3FU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;iFAciF;AAEF;;;;;;;;ICoBnE,0EACI;IAAA,0EACI;IAAA,yEACE;IAAA,yEAAyC;IAAA,wEAAyD;IAAtD,2VAAuC;IAAe,gFAAqB;IAAA,4DAAI;IAAA,4DAAK;IAChI,yEAAuD;IAAA,uDAAc;IAAA,4DAAK;IAC5E,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAH2D,0DAAc;IAAd,kFAAc;;;;IAK3E,sEACI;IAAA,mGAG+D;IAD/D,uYAAwC;IACuB,4DAA+B;IAClG,4DAAM;;;IAHF,0DAAiD;IAAjD,+GAAiD;;;;IAIrD,sEACI;IAAA,8GAMyD;IAJzD,gaAAkD;IAIO,4DAA0C;IACvG,4DAAM;;;IANF,0DAAmC;IAAnC,mGAAmC;;;IAnBnD,yEACI;IAAA,yEACI;IAAA,sIAOM;IACN,0EACI;IAAA,sIAKM;IACN,sIAQM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA1BQ,0DAA+B;IAA/B,kGAA+B;IAS3B,0DAA8B;IAA9B,iGAA8B;IAM9B,0DAA+B;IAA/B,kGAA+B;;AD1B9C,MAAM,mCAAmC;IAa9C;QAXA,YAAO,GAAY,KAAK,CAAC;QAChB,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QAGvB,yBAAoB,GAAG,IAAI,0DAAY,EAAe,CAAC;QAEvD,mBAAc,GAAG,IAAI,0DAAY,EAAU,CAAC;QACtD,6BAAwB,GAAY,IAAI,CAAC;QACzC,eAAU,GAAY,KAAK,CAAC;QAG1B,IAAI,CAAC,eAAe,GAAG,EAAiB,CAAC;IAC3C,CAAC;IAED,QAAQ,KAAW,CAAC;IAEpB,YAAY,CAAC,UAAmB;QAC7B,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAiB,CAAC,KAAK,EAAE,CAAC;QAC9D,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,uBAAuB,CAAC,aAAgC;QACtD,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,CAAC,qBAAqB,GAAG,aAAa,CAAC;YAC3C,OAAM;SACP;QACD,IAAI,CAAC,qBAAqB,GAAG,aAAa,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;QACxD,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;IACxC,CAAC;IAED,mBAAmB,CAAC,MAAc;QAChC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,iBAAiB,CAAC,GAAgB;QAChC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACvD,CAAC;IAED,2BAA2B;QACzB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,KAAU;QACf,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAM;SACP;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,KAAU;QACd,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;;sHAjEU,mCAAmC;mHAAnC,mCAAmC;QCNhD,yEACI;QADiC,4JAAQ,iBAAa,IAAC;QACvD,yEACI;QADoC,sKAAa,kBAAc,IAAC;QAChE,2EAKA;QAHA,qNAAkC;QAFlC,4DAKA;QAAA,yEACI;QAAA,0EAA6C;QAAA,kEAAkC;QAAA,4DAAO;QAC1F,4DAAM;QACN,yEACI;QAAA,wEAAO;QAAA,sGAA2C;QAAA,4DAAQ;QAC9D,4DAAM;QACV,4DAAM;QAEN,+HA4BM;QACT,4DAAM;;QAvCC,0DAAuE;QAAvE,uIAAuE;QADvE,6FAAkC;QAWhC,0DAAa;QAAb,6EAAa;;6FDTV,mCAAmC;cAL/C,uDAAS;eAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,WAAW,EAAE,iDAAiD;gBAC9D,SAAS,EAAE,CAAC,gDAAgD,CAAC;aAC9D;sCAIU,QAAQ;kBAAhB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YAEG,eAAe;kBAAvB,mDAAK;YACI,oBAAoB;kBAA7B,oDAAM;YAEG,cAAc;kBAAvB,oDAAM;;;;;;;;;;;;;;AElCT;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;6FAEX,oBAAoB;cAJhC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;iFAciF;AAEF;;;;;;;ICkB3D,qEACI;IAAA,qEACI;IAAA,0EACI;IAAA,4EACJ;IADuG,uYAAyC;IAA5I,4DACJ;IAAA,4DAAM;IACV,4DAAK;IACL,yEAA4B;IAAA,uDAA4B;IAAA,4DAAK;IAC7D,yEAA4B;IAAA,uDAA6B;IAAA,4DAAK;IAC9D,qEACI;IAAA,2EAAkF;IAAlC,uXAAiC;IAAC,wEAAY;IAAA,4DAAO;IACzG,4DAAK;IACT,4DAAK;;;;IAX+C,6GAA+C;IAGzB,0DAAoC;IAApC,uGAAoC;IAG9E,0DAA4B;IAA5B,4FAA4B;IAC5B,0DAA6B;IAA7B,6FAA6B;;ADd1E,MAAM,8BAA8B;IAUzC,YAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QAR1C,sBAAiB,GAAwB,EAAE,CAAC;QAElC,+BAA0B,GAAG,IAAI,0DAAY,EAAqB,CAAC;QACnE,oBAAe,GAAG,IAAI,0DAAY,EAAW,CAAC;QACxD,eAAU,GAAW,CAAC,CAAC;QACvB,cAAS,GAAW,CAAC,CAAC;QACtB,eAAU,GAAW,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IAEd,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED,+BAA+B;QAC7B,IAAI,CAAC,MAAM;aACV,+BAA+B,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC;aAChE,SAAS,CAAC,CAAC,IAAqC,EAAC,EAAE;YAClD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,SAAS,CAAC,GAAsB;;QAC9B,OAAO,WAAI,CAAC,qBAAqB,0CAAE,UAAU,MAAK,GAAG,CAAC,UAAU,CAAC;IACnE,CAAC;IAED,SAAS,CAAC,KAAU,EAAE,GAAsB;QAC1C,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;QAC9B,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,qBAAqB,GAAG,SAAS,CAAC;SACxC;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACnE,CAAC;IAED,QAAQ,CAAC,GAAsB;QAC7B,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACnE,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED,aAAa,CAAC,CAAU;QACtB,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;SACtB;aAAM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YACnB,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IAC3D,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;;4GA9EU,8BAA8B;8GAA9B,8BAA8B;QCT1C,yEACI;QAAA,yEACG;QAAA,kEAAsC;QAAC,qFAC1C;QAAA,4DAAM;QACN,yEACG;QAAA,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,qEACE;QAAA,wEAAgB;QAAA,6DAAC;QAAA,4DAAK;QACtB,yEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,yEAAa;QAAA,4DAAK;QAClC,yEAAgB;QAAA,8EAAkB;QAAA,4DAAK;QACzC,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,2HAWK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACT,4DAAM;QACN,0EACG;QAAA,2EACI;QAAA,0EACI;QAAA,0EACI;QAAA,4EAA2B;QAAA,0EAAc;QAAA,4DAAO;QACpD,4DAAK;QACL,0EACI;QAAA,8EACI;QADyD,uMAAuB,uGAAc,gBAAY,IAA1B,+GAA6C,oBAAgB,IAA7D;QAChF,8EAAkB;QAAA,6DAAC;QAAA,4DAAS;QAC5B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAClC,4DAAS;QACb,4DAAK;QACL,0EACI;QAAA,8EAAiF;QAAnD,uJAAS,aAAS,IAAC;QAAgC,oEAAuC;QAAC,qEAAQ;QAAA,4DAAS;QAC9I,4DAAK;QACL,0EACI;QAAA,8EAA0G;QAA5E,uJAAS,cAAU,IAAC;QAAwD,iEAAK;QAAA,oEAAwC;QAAA,4DAAS;QACpK,4DAAK;QACT,4DAAK;QACT,4DAAM;QACT,4DAAM;QACV,4DAAM;;QAtC2C,2DAAoB;QAApB,0FAAoB;QAuBW,0DAAuB;QAAvB,kFAAuB;QAOlC,0DAA6B;QAA7B,0FAA6B;QAG5B,0DAAsD;QAAtD,kHAAsD;;6FDxChH,8BAA8B;cAL1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,WAAW,EAAE,2CAA2C;gBACxD,SAAS,EAAE,CAAC,0CAA0C,CAAC;aACxD;wHAIU,qBAAqB;kBAA7B,mDAAK;YACI,0BAA0B;kBAAnC,oDAAM;YACG,eAAe;kBAAxB,oDAAM;;;;;;;;;;;;;;AEhCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACF;AAEmB;AACoF;AACe;AAChC;;AAc5H,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBATf;YACP,4DAAY;YACZ,0DAAW;YACX,4EAAoB;SACrB;mIAKU,aAAa,mBAVT,gKAAmC,EAAE,+KAAwC,EAAE,+IAA8B,aAE1H,4DAAY;QACZ,0DAAW;QACX,4EAAoB,aAGpB,gKAAmC,EAAE,+KAAwC,EAAE,+IAA8B;6FAGpG,aAAa;cAXzB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,gKAAmC,EAAE,+KAAwC,EAAE,+IAA8B,CAAC;gBAC7H,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,4EAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,gKAAmC,EAAE,+KAAwC,EAAE,+IAA8B;iBAC9G;aACF","file":"default~rule-engine-rule-engine-module~scheduler-scheduler-module.js","sourcesContent":["/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CommandService } from '../../../services/command.service';\nimport { DeviceCoreCommandResponse } from '../../../contracts/v2/responses/device-core-command-response';\nimport { DeviceCoreCommand, CoreCommand } from '../../../contracts/v2/core-command';\n\n@Component({\n  selector: 'app-device-associated-core-command-list',\n  templateUrl: './device-associated-core-command-list.component.html',\n  styleUrls: ['./device-associated-core-command-list.component.css']\n})\nexport class DeviceAssociatedCoreCommandListComponent implements OnInit {\n\n  @Input() deviceName?: string;\n  @Input() coreCmdSelected?: CoreCommand;\n  @Output() singleCoreCmdSelectedEvent = new EventEmitter<CoreCommand>();\n  deviceAssociatedCoreCommandsList: CoreCommand[] = [];\n  @Input() httpMethod?: string;\n  @Output() coreCmdMethodEvent = new EventEmitter<string>();\n  @Output() delegationEvent = new EventEmitter<boolean>();\n\n  constructor(private cmdSvc: CommandService) { }\n\n  ngOnInit(): void {\n    this.cmdSvc\n    .findDeviceAssociatedCommnadsByDeviceName(this.deviceName as string)\n    .subscribe((resp: DeviceCoreCommandResponse)=>{\n      this.deviceAssociatedCoreCommandsList = resp.deviceCoreCommand.coreCommands;\n    })\n  }\n\n  methodChecked(event: any, httpMethod: string) {\n    const radio = event.target;\n    if (radio.checked) {\n      this.httpMethod = httpMethod;\n    } else {\n      this.httpMethod = '';\n    }\n    this.coreCmdMethodEvent.emit(this.httpMethod);\n    this.delegationEvent.emit(true);\n  }\n\n  isChecked(name: string): boolean {\n    return this.coreCmdSelected?.name === name;\n  }\n\n  radioUnchecked(checked?: boolean): boolean {\n    if (checked) {\n      return checked;\n    }\n    return false\n  }\n\n  selectOne(event: any, coreCmd: CoreCommand) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.coreCmdSelected = coreCmd;\n    } else {\n      this.coreCmdSelected = {} as CoreCommand;\n    }\n    this.delegationEvent.emit(true);\n    this.singleCoreCmdSelectedEvent.emit(this.coreCmdSelected);\n    this.coreCmdMethodEvent.emit(undefined);\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card border-0\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger mr-2\"></i>\n        <span> <span class=\"text-info\">{{deviceName}}</span> Associated Commands List</span>\n    </div>\n    <div class=\"card-body p-0\">\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Method</th>\n                      <th scope=\"col\">URL</th>\n                      <th scope=\"col\">Path</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let cmd of deviceAssociatedCoreCommandsList;let i=index;\" [class.table-active]=\"isChecked(cmd.name)\">\n                        <td><input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(cmd.name)\" (click)=\"selectOne($event,cmd)\"></td>\n                        <td class=\"user-select-all\">{{cmd.name}}</td>\n                        <td>\n                            <div>\n                                <div *ngIf=\"cmd.get\" class=\"form-check form-check-inline\">\n                                    <span class=\"badge\">\n                                        <input class=\"form-check-input align-middle\" type=\"radio\" id=\"get-{{cmd}}-{{i}}\" name=\"cmdMethod\"  *ngIf=\"isChecked(cmd.name)\" value=\"GET\" [(ngModel)]=\"httpMethod\" (click)=\"methodChecked($event,'GET')\">\n                                        <label class=\"form-check-label align-middle\" for=\"get-{{cmd}}-{{i}}\">get</label>\n                                    </span>\n                                </div>\n                                <div *ngIf=\"cmd.set\" class=\"form-check form-check-inline\">\n                                    <span class=\"badge\">\n                                        <input class=\"form-check-input align-middle\" type=\"radio\" id=\"set-{{cmd}}-{{i}}\" name=\"cmdMethod\"  *ngIf=\"isChecked(cmd.name)\" value=\"PUT\" [(ngModel)]=\"httpMethod\" (click)=\"methodChecked($event,'PUT')\">\n                                        <label class=\"form-check-label align-middle\" for=\"set-{{cmd}}-{{i}}\">set</label>\n                                    </span>\n                                </div>\n                            </div>\n                            \n                        </td>\n                        <td>{{cmd.url}}</td>\n                        <td>{{cmd.path}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\nimport { DeviceCoreCommandResponse, MultiDeviceCoreCommandsResponse } from '../contracts/v2/responses/device-core-command-response';\nimport { EventResponse } from '../contracts/v2/responses/event-response';\nimport { BaseResponse } from '../contracts/v2/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandService {\n\n  endpoint: string = \"/command\";\n  version: string = \"/api/v2\";\n  urlPrefix: string = `${this.endpoint}${this.version}`;\n\n  endpointHealthUrl: string = \"/ping\";\n  versionUrl: string = \"/version\";\n\n  configUrl: string = \"/config\";\n\n  deviceCoreCommandListUrl: string = `${this.urlPrefix}/device/all`;\n  commandsByDeviceIdUrl: string = `${this.urlPrefix}/device/`; //deprecated\n  commandsByDeviceNameUrl: string = `${this.urlPrefix}/device/name/`; //deprecated\n  issueCmdByDeviceNameAndCmdNameUrl: string = `${this.urlPrefix}/device/name/`;\n\n  httpPostOrPutJSONOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json',\n      'Authorization': ''\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  getConfig(): Observable<any> {\n    let url = `${this.urlPrefix}${this.configUrl}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findCommnadsByDeviceId(deviceId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDeviceCoreCommandsPagination(offset: number, limit: number): Observable<MultiDeviceCoreCommandsResponse> {\n    let url = `${this.deviceCoreCommandListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceCoreCommandsResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDeviceAssociatedCommnadsByDeviceName(name: string): Observable<DeviceCoreCommandResponse> {\n    let url = `${this.commandsByDeviceNameUrl}${name}`;\n    return this.http.get<DeviceCoreCommandResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findAllDeviceCommnads(): Observable<any> {\n    let url = `${this.urlPrefix}/device`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetBinaryCmd(deviceId: string, commandId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n    return this.http.request('GET', url, {\n      responseType: 'arraybuffer'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetCmd(deviceName: string, commandName: string): Observable<EventResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.get<EventResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  // issueGetCmd(deviceId: string, commandId: string): Observable<any> {\n  //   let url = `${this.urlPrefix}${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n  //   return this.http.get(url).pipe(\n  //     catchError(error => this.errorSvc.handleError(error))\n  //   )\n  // }\n\n  issueSetCmd(deviceName: string, commandName: string, params?: any): Observable<BaseResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.put<BaseResponse>(url, JSON.stringify(params),this.httpPostOrPutJSONOptions).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  // issueSetCmd(deviceId: string, commandId: string, params?: any): Observable<any> {\n  //   let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n  //   return this.http.request('PUT', url, {\n  //     body: JSON.stringify(params),\n  //     responseType: 'text'\n  //   }).pipe(\n  //     catchError(error => this.errorSvc.handleError(error))\n  //   )\n  // }\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { CoreCommand, DeviceCoreCommand } from '../../../contracts/v2/core-command';\n\n@Component({\n  selector: 'app-device-core-command-combo-list',\n  templateUrl: './device-core-command-combo-list.component.html',\n  styleUrls: ['./device-core-command-combo-list.component.css']\n})\nexport class DeviceCoreCommandComboListComponent implements OnInit {\n\n  visible: boolean = false;\n  @Input() validate: boolean = false;\n  @Input() deviceName: string = \"\";\n  deviceCoreCmdSelected?: DeviceCoreCommand;\n  @Input() coreCmdSelected: CoreCommand;\n  @Output() commandSelectedEvent = new EventEmitter<CoreCommand>();\n  httpMethod?: string;\n  @Output() cmdMethodEvent = new EventEmitter<string>();\n  deviceCoreCmdListVisible: boolean = true;\n  delegation: boolean = false;\n\n  constructor() { \n    this.coreCmdSelected = {} as CoreCommand;\n  }\n\n  ngOnInit(): void { }\n\n  ondelegation(delegation :boolean) {\n    (document.getElementById(\"cmd-combo\") as HTMLElement).focus();\n    this.delegation = delegation;\n  }\n\n  onDeviceCoreCmdSelected(deviceCoreCmd: DeviceCoreCommand) {\n    if (!deviceCoreCmd) {\n      this.deviceCoreCmdSelected = deviceCoreCmd;\n      return\n    }\n    this.deviceCoreCmdSelected = deviceCoreCmd;\n    this.deviceName = this.deviceCoreCmdSelected.deviceName;\n    this.deviceCoreCmdListVisible = false;\n  }\n\n  onCmdMethodSelected(method: string) {\n    this.httpMethod = method;\n    this.cmdMethodEvent.emit(this.httpMethod);\n  }\n\n  onCoreCmdSelected(cmd: CoreCommand) {\n    this.coreCmdSelected = cmd;\n    this.commandSelectedEvent.emit(this.coreCmdSelected);\n  }\n\n  backtoDeviceCoreCommandList() {\n    this.deviceCoreCmdListVisible = true;\n  }\n\n  toggle(event: any) {\n    event.stopImmediatePropagation();\n    if (this.visible) {\n      this.visible = false;\n      return\n    }\n    this.visible = true;\n  }\n\n  close(event: any) {\n    setTimeout(() => {\n      if (this.delegation) {\n        this.delegation = false;        \n      } else {\n        this.visible = false;\n      }\n    }, 130);\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<!-- <div class=\"cmd-combo-shielder\" *ngIf=\"visible\" (click)=\"close($event)\"></div> -->\n<div class=\"cmd-combo\" tabindex=\"-1\" (blur)=\"close($event)\" id=\"cmd-combo\">\n    <div class=\"input-group has-validation\" (mousedown)=\"toggle($event)\">\n        <input type=\"text\" class=\"form-control\" \n        name=\"coreCmdSelected\" disabled  maxlength=\"0\" \n        [(ngModel)]=\"coreCmdSelected.path\" \n        [class.is-invalid]=\"(!coreCmdSelected.path || !httpMethod) && validate\" \n        [class.is-valid]=\"coreCmdSelected.path && httpMethod && validate\"  required>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\" role=\"button\"><i class=\"fa fa-chevron-down\"></i></span>\n        </div> \n        <div id=\"validationCoreCmdPathFeedback\" class=\"invalid-feedback\">\n            <small>the command name and method can't be empty!</small> \n        </div>\n    </div>\n    \n    <div *ngIf=\"visible\" class=\"cmd-combo-body shadow rounded\">\n        <div class=\"card\">\n            <div *ngIf=\"!deviceCoreCmdListVisible\" class=\"card-header\">\n                <nav class=\"m-0 p-0\" aria-label=\"breadcrumb\">\n                    <ol class=\"breadcrumb p-0 m-0 bg-light\">\n                      <li class=\"breadcrumb-item text-primary\"><a (click)=\"backtoDeviceCoreCommandList()\" role=\"button\">DeviceCoreCommandList</a></li>\n                      <li class=\"breadcrumb-item active\" aria-current=\"page\">{{deviceName}}</li>\n                    </ol>\n                </nav>\n            </div>\n            <div class=\"card-body p-0\">\n                <div *ngIf=\"deviceCoreCmdListVisible\">\n                    <app-device-core-command-list \n                    [deviceCoreCmdSelected] = \"deviceCoreCmdSelected\"\n                    (delegationEvent)=\"ondelegation($event)\"\n                    (deviceCoreCmdSelectedEvent)=\"onDeviceCoreCmdSelected($event)\"></app-device-core-command-list>\n                </div>\n                <div *ngIf=\"!deviceCoreCmdListVisible\">\n                    <app-device-associated-core-command-list \n                    [coreCmdSelected]=\"coreCmdSelected\"\n                    (coreCmdMethodEvent)=\"onCmdMethodSelected($event)\"\n                    (delegationEvent)=\"ondelegation($event)\"\n                    [deviceName]=\"deviceName\" \n                    [httpMethod]=\"httpMethod\"\n                    (singleCoreCmdSelectedEvent)=\"onCoreCmdSelected($event)\"></app-device-associated-core-command-list>\n                </div>\n            </div>\n        </div>\n    </div>\n </div>\n ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommandRoutingModule { }\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { DeviceCoreCommand } from '../../../contracts/v2/core-command';\nimport { CommandService } from '../../../services/command.service';\nimport { MultiDeviceCoreCommandsResponse } from '../../../contracts/v2/responses/device-core-command-response';\n\n@Component({\n  selector: 'app-device-core-command-list',\n  templateUrl: './device-core-command-list.component.html',\n  styleUrls: ['./device-core-command-list.component.css']\n})\nexport class DeviceCoreCommandListComponent implements OnInit {\n\n  deviceCoreCmdList: DeviceCoreCommand[] = [];\n  @Input() deviceCoreCmdSelected?: DeviceCoreCommand;\n  @Output() deviceCoreCmdSelectedEvent = new EventEmitter<DeviceCoreCommand>();\n  @Output() delegationEvent = new EventEmitter<boolean>();\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private cmdSvc: CommandService) { }\n\n  ngOnInit(): void {\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  findAllDeviceCoreCmdsPagination() {\n    this.cmdSvc\n    .allDeviceCoreCommandsPagination(this.pageOffset, this.pageLimit)\n    .subscribe((resp: MultiDeviceCoreCommandsResponse)=>{\n      this.deviceCoreCmdList = resp.deviceCoreCommands;\n    })\n  }\n\n  delegation() {\n    this.delegationEvent.emit(true);\n  }\n\n  isChecked(cmd: DeviceCoreCommand): boolean {\n    return this.deviceCoreCmdSelected?.deviceName === cmd.deviceName;\n  }\n\n  selectOne(event: any, cmd: DeviceCoreCommand) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.deviceCoreCmdSelected = cmd;\n    } else {\n      this.deviceCoreCmdSelected = undefined;\n    }\n    this.delegation();\n    this.deviceCoreCmdSelectedEvent.emit(this.deviceCoreCmdSelected);\n  }\n\n  checkOne(cmd: DeviceCoreCommand) {\n    this.deviceCoreCmdSelected = cmd;\n    this.deviceCoreCmdSelectedEvent.emit(this.deviceCoreCmdSelected);\n  }\n\n  onPageSelected() {\n    this.delegation();\n    this.resetPagination();\n    this.setPagination();\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  prePage() {\n    this.delegation();\n    this.setPagination(-1);\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  nextPage() {\n    this.delegation();\n    this.setPagination(1);\n    this.findAllDeviceCoreCmdsPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n     <div class=\"card-header\">\n        <i class=\"fa fa-list text-danger\"></i> Device Core Command List\n     </div>\n     <div class=\"card-body p-0\">\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Device</th>\n                      <th scope=\"col\">DeviceProfile</th>\n                      <th scope=\"col\">AssociatedCommands</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let deviceCoreCmd of deviceCoreCmdList\" [class.table-active]=\"isChecked(deviceCoreCmd)\">\n                        <td> \n                            <div class=\"form-group form-check\">\n                                <input type=\"checkbox\" role=\"button\" class=\"form-check-input\" [checked]=\"isChecked(deviceCoreCmd)\" (click)=\"selectOne($event,deviceCoreCmd)\">\n                            </div>\n                        </td>\n                        <td class=\"user-select-all\">{{deviceCoreCmd.deviceName}}</td>\n                        <td class=\"user-select-all\">{{deviceCoreCmd.profileName}}</td>\n                        <td>\n                            <span class=\"badge badge-primary\" role=\"button\" (click)=\"checkOne(deviceCoreCmd)\">coreCommands</span>\n                        </td>                        \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n     </div>\n     <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\">items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"form-control\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (mousedown)=\"delegation()\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\"> <i class=\"fa fa-angle-double-left\"></i> Previous</button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceCoreCmdList.length\">Next <i class=\"fa fa-angle-double-right\"></i></button>\n                </li>\n            </ul>\n        </nav>\n     </div>\n </div>\n \n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CommandRoutingModule } from './command-routing.module';\nimport { DeviceCoreCommandComboListComponent } from './device-core-command/device-core-command-combo-list/device-core-command-combo-list.component';\nimport { DeviceAssociatedCoreCommandListComponent } from './device-core-command/device-associated-core-command-list/device-associated-core-command-list.component';\nimport { DeviceCoreCommandListComponent } from './device-core-command/device-core-command-list/device-core-command-list.component';\n\n\n@NgModule({\n  declarations: [DeviceCoreCommandComboListComponent, DeviceAssociatedCoreCommandListComponent, DeviceCoreCommandListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CommandRoutingModule\n  ],\n  exports: [\n    DeviceCoreCommandComboListComponent, DeviceAssociatedCoreCommandListComponent, DeviceCoreCommandListComponent\n  ]\n})\nexport class CommandModule { }\n"],"sourceRoot":"webpack:///"}