{"version":3,"sources":["./src/app/services/rule-engine.service.ts","./src/app/services/error.service.ts","./src/app/rule-engine/rules/add-rules/add-rules.component.ts","./src/app/rule-engine/rules/add-rules/add-rules.component.html","./src/app/rule-engine/stream/stream-center/stream-center.component.ts","./src/app/rule-engine/stream/stream-center/stream-center.component.html","./src/app/rule-engine/stream/add-stream/add-stream.component.ts","./src/app/rule-engine/stream/add-stream/add-stream.component.html","./src/app/rule-engine/rule-engine-routing.module.ts","./src/app/rule-engine/stream/edit-stream/edit-stream.component.ts","./src/app/rule-engine/stream/edit-stream/edit-stream.component.html","./src/app/rule-engine/rules/rules-list/rules-list.component.ts","./src/app/rule-engine/rules/rules-list/rules-list.component.html","./src/app/rule-engine/rules/edit-rules/edit-rules.component.ts","./src/app/rule-engine/rules/edit-rules/edit-rules.component.html","./src/app/rule-engine/rule-engine.component.ts","./src/app/rule-engine/rule-engine.component.html","./src/app/rule-engine/rules/rules-center/rules-center.component.ts","./src/app/rule-engine/rules/rules-center/rules-center.component.html","./src/app/rule-engine/stream/stream-list/stream-list.component.ts","./src/app/rule-engine/stream/stream-list/stream-list.component.html","./src/app/rule-engine/rule-engine.module.ts"],"names":[],"mappings":"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","file":"rule-engine-rule-engine-module.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\nimport { Stream } from '../contracts/kuiper/stream';\nimport { Rule } from '../contracts/kuiper/rule';\nimport { BaseResponse } from '../contracts/v2/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RuleEngineService {\n\n  endpoint: string = \"/ruleengine\";\n  version: string = \"\";\n\n  streamUrl: string = `${this.endpoint}${this.version}/streams`;\n\n  ruleUrl: string = `${this.endpoint}${this.version}/rules`;\n\n  httpPostOrPutJSONOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json',\n      'Authorization': ''\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  addStream(sql:string): Observable<string> {\n    let url = `${this.streamUrl}`;\n    return this.http.request('POST', url, {\n      body: sql,\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  deleteOneStreamById(id: string): Observable<BaseResponse> {\n    let url = `${this.streamUrl}/${id}`;\n    return this.http.delete<BaseResponse>(url).pipe()\n  }\n\n  updateStream(sql: string): Observable<any> {\n    let url = `${this.streamUrl}`;\n    return this.http.request('PUT', url, {\n      body: sql,\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findStreamByName(name: string): Observable<Stream> {\n    let url = `${this.streamUrl}/${name}`;\n    return this.http.get<Stream>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allStreams(): Observable<Stream[]> {\n    let url = `${this.streamUrl}`;\n    return this.http.get<Stream[]>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  addRule(rule: any): Observable<string> {\n    let url = `${this.ruleUrl}`;\n    return this.http.request('POST', url, {\n      body: JSON.stringify(rule),\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  deleteOneRuleById(id: string): Observable<BaseResponse> {\n    let url = `${this.ruleUrl}/${id}`;\n    return this.http.delete<BaseResponse>(url).pipe()\n  }\n\n  updateRule(rule: any): Observable<string> {\n    let url = `${this.ruleUrl}`;\n    return this.http.request('PUT', url, {\n      body: JSON.stringify(rule),\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findRuleById(id: string): Observable<Rule> {\n    let url = `${this.ruleUrl}/${id}`;\n    return this.http.get<Rule>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allRules(): Observable<Rule[]> {\n    let url = `${this.ruleUrl}`;\n    return this.http.get<Rule[]>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  getRuleStatusById(id: string): Observable<any> {\n    let url = `${this.ruleUrl}/${id}/status`;\n    return this.http.get<any>(url);\n  }\n\n  getRuleTopoById(id: string): Observable<Rule> {\n    let url = `${this.ruleUrl}/${id}/topo`;\n    return this.http.get<Rule>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  startRule(id: string): Observable<string> {\n    let url = `${this.ruleUrl}/${id}/start`;\n    return this.http.request('POST', url, {\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  stopRule(id: string): Observable<string> {\n    let url = `${this.ruleUrl}/${id}/stop`;\n    return this.http.request('POST', url, {\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  restartRule(id: string): Observable<string> {\n    let url = `${this.ruleUrl}/${id}/restart`;\n    return this.http.request('POST', url, {\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\nimport { MessageService } from '../message/message.service';\nimport { BaseWithIdResponse, BaseResponse } from '../contracts/v2/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor(private msgSvc: MessageService) { }\n\n  handleErrorForV2API(data: any): boolean {\n    let t = Object.prototype.toString.call(data);\n    if (t === '[object Array]') {\n      if (!(data as any)[0].statusCode.toString().startsWith('20')){\n        this.msgSvc.errors(`code: ${(data as any)[0].statusCode}, message: ${(data as any)[0].message}`);\n        return true\n      }\n    } else if (t === '[object Object]') {\n      if (!(data as any).statusCode.toString().startsWith('20')){\n        this.msgSvc.errors(`code: ${(data as any).statusCode}, message: ${(data as any).message}`);\n        return true\n      }\n    }\n    return false\n  }\n\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.msgSvc.errors(`'An error occurred:', ${error.error.message}`);\n    } else {\n      if (Object.prototype.toString.call(error.error) === '[object Object]') {\n        this.msgSvc.errors(`code: ${(error.error as any).statusCode} , message: ${(error.error as any).message}`);\n      } else {\n        this.msgSvc.errors(`code: ${error.status} , message: ${error.message}`);\n      }\n    }\n    return throwError(\n      `Backend returned code ${(error.error as any).statusCode}, ` +\n      `body was: ${(error.error as any).message}`);\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { Rule } from 'src/app/contracts/kuiper/rule';\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\nimport { MessageService } from '../../../message/message.service';\nimport { CoreCommand } from '../../../contracts/v2/core-command';\n\n@Component({\n  selector: 'app-add-rules',\n  templateUrl: './add-rules.component.html',\n  styleUrls: ['./add-rules.component.css']\n})\n\nexport class AddRulesComponent implements OnInit {\n  currentStep = 0;\n  ruleName: string = '';\n  ruleSql: string = '';\n  ruleAction: any[] = [];\n\n  restModelList: any[] = [];\n  mqttModelList: any[] = [];\n  edgexModelList: any[] = [];\n  showRestTabs:boolean = false;\n  showMqttTabs:boolean = false;\n  showEdgexTabs:boolean = false;\n  chooseActionLog:boolean = false;\n  targetActionConfigs: any[] = [];\n\n  templateSelected: string = \"custom\";\n\n  selectedClass = \"text-white rounded px-2 bg-success  font-weight-bold\";\n  noSelectedClass = \"text-white rounded px-2 bg-secondary  font-weight-bold\";\n  constructor(private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private el:ElementRef\n  ) { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  templateToggle(template: string,index:number) {\n    this.templateSelected = template;\n    switch (this.templateSelected) {\n      case 'coredata':\n        this.restModelList[index].method = 'DELETE';\n        this.restModelList[index].host = 'edgex-core-data';\n        this.restModelList[index].port = 48080;\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300);\n        break;\n      case 'command':\n        this.restModelList[index].method = '';\n        this.restModelList[index].host = 'edgex-core-command';\n        this.restModelList[index].port = 48082;\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300); \n        break;\n      case 'custom':\n        this.restModelList[index].method = 'GET';\n        this.restModelList[index].retained = false;\n    }\n  }\n\n  onCmdMethodSelected(method: string,index:number) {\n    this.restModelList[index].method = method;\n  }\n\n  onCommandSelected(cmd: CoreCommand,index:number) {\n    this.restModelList[index].path = cmd.path;\n  }\n\n  isPureIntegerType(value: any): boolean {\n    if (!isNaN(value) && (parseFloat(value) === parseInt(value))) {\n      return true\n    }\n    return false\n  }\n\n  stepStateLock(): boolean {\n    switch (this.currentStep) {\n      case 0:\n        return this.ruleName === '' || this.ruleSql === ''\n      case 1:\n        if(this.el.nativeElement.querySelector(\"#restCheckbox\").checked || \n        this.el.nativeElement.querySelector(\"#mqttCheckbox\").checked ||\n        this.el.nativeElement.querySelector(\"#edgexCheckbox\").checked ||\n        this.el.nativeElement.querySelector(\"#logCheckbox\").checked){\n          return false;\n        }else{\n          return true;\n        }\n      default:\n        return false\n    }\n  }\n\n  next() {\n    this.currentStep += 1;\n  }\n\n  previous() {\n    this.currentStep = this.currentStep - 1;\n  }\n\n  changeStep() {\n    this.currentStep += 1;\n  }\n\n  done() {\n\t\t\tif(this.el.nativeElement.querySelector(\"#restCheckbox\").checked){\n        this.restModelList.forEach((event) => {\n          let rest:any = {};\n\t\t\t\t\tif(event.retryInterval != null && event.retryInterval != \"\"){\n\t\t\t\t\t\trest.retryInterval = event.retryInterval;\n\t\t\t\t\t}\n\t\t\t\t\tif(event.sendSingle != null && event.sendSingle != \"\"){\n\t\t\t\t\t\t//rest.sendSingle = eval(event.sendSingle.toLowerCase());\n            rest.sendSingle = event.sendSingle;\n\t\t\t\t\t}\n\t\t\t\t\tif( event.host != null && event.host != \"\" && event.port != null && event.port != \"\" && event.path != null && event.path != \"\"){\n\t\t\t\t\t\trest.url= \"http://\"+ event.host + \":\" + event.port + event.path;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.msgSvc.errors(\"Url cannot be empty.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(event.method != null && event.method != \"\"){\n\t\t\t\t\t\trest.method = event.method;\n\t\t\t\t\t}\n\t\t\t\t\tif(event.method == \"PUT\"){\n\t\t\t\t\t\tif(event.dataTemplate != null && event.dataTemplate != \"\"){\n\t\t\t\t\t\t\tlet param = event.dataTemplate.replace(/\\\"/g, '\\\\\\\"');\n\t\t\t\t\t\t\trest.dataTemplate = param;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n          this.ruleAction.push({rest})\n        });\n\t\t\t}\n      \n\t\t\tif(this.el.nativeElement.querySelector(\"#mqttCheckbox\").checked){\n\t\t\t\tthis.mqttModelList.forEach((mqtt) => {\n          this.ruleAction.push({mqtt})\n        });\n\t\t\t}\n\n\t\t\tif(this.el.nativeElement.querySelector(\"#edgexCheckbox\").checked){\n\t\t\t\tthis.edgexModelList.forEach((edgex) => {\n          this.ruleAction.push({edgex})\n        });\n\t\t\t}\n\n\t\t\tif(this.el.nativeElement.querySelector(\"#logCheckbox\").checked){\n\t\t\t\tlet log = {log:{}};\n\t\t\t\tthis.ruleAction.push({log})\n\t\t\t}\n    let rule: Rule = {\n      id:this.ruleName,\n      sql:this.ruleSql,\n      actions:this.ruleAction\n    } as Rule\n    this.ruleSvc.addRule(rule).subscribe(() => {\n      this.msgSvc.success('Add rule success');\n      this.router.navigate(['../rules-list'], { relativeTo: this.route })\n    })\n  }\n\n  chooseRest(check:any){\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    if(check.checked){\n      if(this.restModelList.length == 0){\n        this.addRestTab();\n      }\n      this.showRestTabs = true;\n    }else{\n      this.showRestTabs = false;\n    }\n  }\n\n  chooseMqtt(check:any){\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    if(check.checked){\n      if(this.mqttModelList.length == 0){\n        this.addMqttTab();\n      }\n      this.showMqttTabs = true;\n    }else{\n      this.showMqttTabs = false;\n    }\n  }\n\n  chooseEdgex(check:any){\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    if(check.checked){\n      if(this.edgexModelList.length == 0){\n        this.addEdgeXTab();\n      }\n      this.showEdgexTabs = true;\n    }else{\n      this.showEdgexTabs = false;\n    }\n  }\n\n  chooseLog(check:any){\n    if(check.checked){\n      this.chooseActionLog = true;\n    }else{\n      this.chooseActionLog = false;\n    }\n    \n  }\n\n  addRestTab() {\n    let rest:any = {\n      retryInterval: -1,\n      sendSingle: 'true',\n      method: '',\n      host: '',\n      port: '',\n      path: '',\n      dataTemplate: ''\n    };\n    this.restModelList.push(rest);\n\n  }\n  trackByFn(index:any) {\n    return index;\n  }\n\n  addMqttTab() {\n    let mqtt:any = {\n      server: '',\n      topic: '',\n      clientId: '',\n      protocolVersion: '',\n      username: '',\n      password: '',\n      certificationPath: '',\n      privateKeyPath: '',\n      insecureSkipVerify: 'false',\n      retained: 'false',\n      qos: ''\n    };\n    this.mqttModelList.push(mqtt);\n  }\n\n  addEdgeXTab() {\n    let edgex:any = {\n      protocol: '',\n      host: '',\n      port: '',\n      topic: '',\n      contentType: '',\n      metadata: '',\n      deviceName: '',\n      type: '',\n      optional: ''\n    };\n    this.edgexModelList.push(edgex);\n  }\n\n  removeRestTab(index: any) {\n    let arrindex = $.inArray(parseInt(index), this.restModelList);\n    this.restModelList.splice(arrindex, 1);\n  }\n\n  removeMqttTab(index: any) {\n    let arrindex = $.inArray(parseInt(index), this.mqttModelList);\n    this.mqttModelList.splice(arrindex, 1);\n  }\n\n  removeEdgeXTab(index: any) {\n    let arrindex = $.inArray(parseInt(index), this.edgexModelList);\n    this.edgexModelList.splice(arrindex, 1);\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-lightbulb-o fa-lg mr-2 text-danger\"></span>\n            <span class=\"text-secondary\">Add Rule Wizard</span>\n        </span>\n    </div>\n    <div class=\"card-header bg-light\">\n        <nav aria-label=\"breadcrumb\" class=\"mb-0 p-0\">\n            <ol class=\"breadcrumb p-1 mb-0 bg-light\">\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 0? selectedClass:noSelectedClass\">RulePrimary <i\n                            *ngIf=\"currentStep >= 1\" class=\"fa fa-check\"></i></span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 1? selectedClass:noSelectedClass\">CreateRuleActions <i\n                            *ngIf=\"currentStep >= 2\" class=\"fa fa-check\"></i></span>\n                </li>\n            </ol>\n        </nav>\n    </div>\n    <div class=\"card-header\">\n        <button *ngIf=\"currentStep\" class=\"btn btn-info btn-sm\" (click)=\"previous()\"><i\n                class=\"fa fa-long-arrow-left\"></i> Previous</button>\n        <button *ngIf=\"1 > currentStep; else stepDone\" class=\"btn btn-primary btn-sm float-right\" [disabled]=\"stepStateLock()\" (click)=\"next()\">Next\n            <i class=\"fa fa-long-arrow-right\"></i></button>\n        <ng-template #stepDone>\n            <button class=\"btn btn-success btn-sm ml-4 float-right\" [disabled]=\"stepStateLock()\" (click)=\"done()\"><i\n                    class=\"fa fa-save\"></i> Submit</button>\n        </ng-template>\n    </div>\n    <div class=\"card-body p-0\">\n        <div [ngSwitch]=\"currentStep\">\n            <ng-template [ngSwitchCase]=\"0\" #RulePrimary>\n                <form class=\"px-5 py-4\">\n                    <div class=\"form-group row has-validation\">\n                        <label for=\"ruleName\" class=\"col-md-2 col-form-label\">\n                            <span class=\"mr-2\">Name</span> \n                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                            data-content='The identification of the rule. The rule name cannot be duplicated in the same Kuiper instance.'></span>\n                        </label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" class=\"form-control\" id=\"ruleName\" [class.is-invalid]=\"!ruleName\"\n                                [class.is-valid]=\"ruleName\" name=\"ruleName\" [(ngModel)]=\"ruleName\">\n                            <div id=\"ruleName\" class=\"invalid-feedback\">\n                                <small>the rule name can't be empty!</small>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row has-validation\">\n                        <label for=\"ruleSql\" class=\"col-md-2 col-form-label\">\n                            <span class=\"mr-2\">ruleSql</span> \n                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                            data-content='The sql query to run for the rule.The Table name must be your stream name.For example \"SELECT EdgexStream.temperature, EdgexStream.temp FROM EdgexStream where EdgexStream.temperature > EdgexStream.temp \".'></span>\n                        </label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" class=\"form-control\" id=\"ruleSql\" [class.is-invalid]=\"!ruleSql\"\n                                [class.is-valid]=\"ruleSql\" name=\"ruleSql\" [(ngModel)]=\"ruleSql\">\n                            <div id=\"ruleSql\" class=\"invalid-feedback\">\n                                <small>the sql can't be empty!</small>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n\n            <ng-template [ngSwitchCase]=\"1\" #CreateRuleActions>\n                <form class=\"form-horizontal\">\n                    <div class=\"card border-0\">\n                        <div class=\"card-body\">\n                            <div class=\"row border border-secondary p-2 rounded-lg mx-1\">\n                                <div class=\"col-md-3 col-lg-3 border-right border-info\">\n                                    <div class=\"form-group\">\n                                        <label>\n                                            <div class=\"font-weight-bold\">\n                                                  Action Type\n                                            </div>\n                                        </label>\n                                        <div class=\"checkbox\">\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"restCheckbox\" name=\"rest\" (click) = \"chooseRest($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to a Rest HTTP server.\n                                            </label>\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"mqttCheckbox\" name=\"mqtt\" (click) = \"chooseMqtt($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to an MQTT broker.\n                                            </label>\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"edgexCheckbox\" name=\"edgex\" (click) = \"chooseEdgex($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to EdgeX message bus.\n                                            </label>\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"logCheckbox\" name=\"log\" (click) = \"chooseLog($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to log file.\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-9 col-lg-9\">\n                                    <div id=\"rest_action_tab\">\n                                        <div id=\"rest_tabs\" [hidden]=\"!showRestTabs\">\n                                            <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                            <div *ngFor=\"let rest of restModelList, let restindex = index\">\n                                                <div class=\"form-group row\" id=\"rest_{{restindex}}\">\n                                                    <div class=\"col-md-10\">\n                                                        <div class=\"card\">\n                                                            <div class=\"card-header\">\n                                                                Rest {{restindex+1}}\n                                                                <span class=\"badge mr-2 badge-danger\" role=\"button\" (click)=\"removeRestTab(restindex);\"><i\n                                                                    class=\"fa fa-trash-o\"\n                                                                    aria-hidden=\"true\"></i>&nbsp;Delete</span>\n                                                                    <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'command'\" [class.badge-primary]=\"templateSelected === 'command'\" (click)=\"templateToggle('command',restindex)\">CommandServiceTemplate</span>\n                                                                    <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'custom'\" [class.badge-primary]=\"templateSelected === 'custom'\" (click)=\"templateToggle('custom',restindex)\">CustomTemplate</span>\n                                                                    <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'coredata'\" [class.badge-primary]=\"templateSelected === 'coredata'\" (click)=\"templateToggle('coredata',restindex)\">CoreDataSeviceTemplate</span>\n                                                            </div>\n                                                            <div class=\"card-body\">\n                                                                <div [ngSwitch]=\"templateSelected\">\n                                                                    <ng-template [ngSwitchCase]=\"'custom'\" #customTemplate>\n                                                                        <form>\n                                                                            <div class=\"form-group row\">\n                                                                                <label class=\"col-md-2 col-form-label\">\n                                                                                    <span class=\"mr-2\">RetryInterval</span> \n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                                    data-content='The RetryInterval type is number,like -1'></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <input type=\"text\" class=\"form-control\"\n                                                                                        id=\"retryInterval_{{restindex}}\" name=\"retryInterval_{{restindex}}\"\n                                                                                        [(ngModel)]=\"rest.retryInterval\">\n                                                                                </div>\n                                                                                <label class=\"col-md-2 control-label\">SendSingle</label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <select class=\"form-control\"\n                                                                                        id=\"SendSingle_{{restindex}}\"\n                                                                                        name=\"sendSingle_{{restindex}}\" [(ngModel)]=\"rest.sendSingle\">\n                                                                                        <option value=\"true\">true</option>\n                                                                                        <option value=\"false\" selected=\"\">false</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>HttpMethod</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <select type=\"text\" id=\"restMethod_{{restindex}}\" class=\"form-control\" name=\"httpMethod_{{restindex}}\" [(ngModel)]=\"rest.method\">\n                                                                                        <option value=\"GET\">GET</option>\n                                                                                        <option value=\"POST\">POST</option>\n                                                                                        <option value=\"PUT\">PUT</option>\n                                                                                        <option value=\"DELETE\">DELETE</option>\n                                                                                        <option value=\"PATCH\">PATCH</option>\n                                                                                        <option value=\"HEAD\">HEAD</option>\n                                                                                        <option value=\"TRACE\">TRACE</option>\n                                                                                        <option value=\"CONNECT\">CONNECT</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>Host</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressHost_{{restindex}}\" [class.is-invalid]=\"!rest.host\" [class.is-valid]=\"rest.host\" name=\"addressHost_{{restindex}}\" [(ngModel)]=\"rest.host\" required>\n                                                                                    <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address host can't be empty!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPort_{{restindex}}\" [class.is-invalid]=\"!isPureIntegerType(rest.port)\" [class.is-valid]=\"isPureIntegerType(rest.port)\" name=\"addressPort_{{restindex}}\" [(ngModel)]=\"rest.port\" required>\n                                                                                    <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address port can't be empty and only pure integer is supported!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath_{{restindex}}\" name=\"addressPath_{{restindex}}\" [(ngModel)]=\"rest.path\">\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody_{{restindex}}\" name=\"requestBody_{{restindex}}\" [(ngModel)]=\"rest.dataTemplate\">\n                                                                                </div>\n                                                                            </div>\n                                                                        </form>\n                                                                    </ng-template>\n                                                                    <ng-template [ngSwitchCase]=\"'coredata'\" #coredataTemplate>\n                                                                        <form>\n                                                                            <div class=\"form-group row\">\n                                                                                <label class=\"col-md-2 col-form-label\">\n                                                                                    <span class=\"mr-2\">RetryInterval</span> \n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                                    data-content='The RetryInterval type is number,like -1'></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <input type=\"text\" class=\"form-control\"\n                                                                                        id=\"retryInterval_{{restindex}}\" name=\"retryInterval_{{restindex}}\"\n                                                                                        placeholder=\"-1\" [(ngModel)]=\"rest.retryInterval\">\n                                                                                </div>\n                                                                                <label class=\"col-md-2 control-label\">SendSingle</label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <select class=\"form-control\"\n                                                                                        id=\"SendSingle_{{restindex}}\"\n                                                                                        name=\"sendSingle_{{restindex}}\" [(ngModel)]=\"rest.sendSingle\">\n                                                                                        <option value=\"true\">true</option>\n                                                                                        <option value=\"false\" selected=\"\">false</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>HttpMethod</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <select type=\"text\" id=\"restMethod_{{restindex}}\" class=\"form-control\" name=\"httpMethod_{{restindex}}\" [(ngModel)]=\"rest.method\">\n                                                                                        <option value=\"DELETE\">DELETE</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>\n                                                                                    <span class=\"mr-2\">Host</span>\n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                                                        data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressHost_{{restindex}}\" [class.is-invalid]=\"!rest.host\" [class.is-valid]=\"rest.host\" name=\"addressHost_{{restindex}}\" [(ngModel)]=\"rest.host\" required>\n                                                                                    <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address host can't be empty!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPort_{{restindex}}\" [class.is-invalid]=\"!isPureIntegerType(rest.port)\" [class.is-valid]=\"isPureIntegerType(rest.port)\" name=\"addressPort_{{restindex}}\" [(ngModel)]=\"rest.port\" required>\n                                                                                    <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address port can't be empty and only pure integer is supported!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath_{{restindex}}\" name=\"addressPath_{{restindex}}\" [(ngModel)]=\"rest.path\">\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody_{{restindex}}\" name=\"requestBody_{{restindex}}\" [(ngModel)]=\"rest.dataTemplate\">\n                                                                                </div>\n                                                                            </div>\n                                                                        </form>\n                                                                    </ng-template>\n                                                                    <ng-template [ngSwitchCase]=\"'command'\" #commandTemplate>\n                                                                        <form>\n                                                                            <div class=\"form-group row\">\n                                                                                <label class=\"col-md-2 col-form-label\">\n                                                                                    <span class=\"mr-2\">RetryInterval</span> \n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                                    data-content='The RetryInterval type is number,like -1'></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <input type=\"text\" class=\"form-control\"\n                                                                                        id=\"retryInterval_{{restindex}}\" name=\"retryInterval_{{restindex}}\"\n                                                                                        placeholder=\"-1\" [(ngModel)]=\"rest.retryInterval\">\n                                                                                </div>\n                                                                                <label class=\"col-md-2 control-label\">SendSingle</label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <select class=\"form-control\"\n                                                                                        id=\"SendSingle_{{restindex}}\"\n                                                                                        name=\"sendSingle_{{restindex}}\" [(ngModel)]=\"rest.sendSingle\">\n                                                                                        <option value=\"true\">true</option>\n                                                                                        <option value=\"false\" selected=\"\">false</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>\n                                                                                        <span class=\"mr-2\">HttpMethod</span>\n                                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                                                        data-content=\"httpMethod field will be filled up automatically when the path field is selected! \"></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"httpMethod_{{restindex}}\" name=\"httpMethod_{{restindex}}\" disabled [(ngModel)]=\"rest.method\" required>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>\n                                                                                    <span class=\"mr-2\">Host</span>\n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                                                        data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressHost\" [class.is-invalid]=\"!rest.host\" [class.is-valid]=\"rest.host\" name=\"addressHost_{{restindex}}\" [(ngModel)]=\"rest.host\" required>\n                                                                                    <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address host can't be empty!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPort\" [class.is-invalid]=\"!isPureIntegerType(rest.port)\" [class.is-valid]=\"isPureIntegerType(rest.port)\" name=\"addressPort_{{restindex}}\" [(ngModel)]=\"rest.port\" required>\n                                                                                    <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address port can't be empty and only pure integer is supported!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <app-device-core-command-combo-list [validate]=\"true\" (cmdMethodEvent)=\"onCmdMethodSelected($event,restindex)\" (commandSelectedEvent)=\"onCommandSelected($event,restindex)\"></app-device-core-command-combo-list>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody_{{restindex}}\" name=\"requestBody_{{restindex}}\" [(ngModel)]=\"rest.dataTemplate\">\n                                                                                </div>\n                                                                            </div>\n                                                                        </form>\n                                                                    </ng-template>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <button type=\"button\" class=\"btn btn-success\" (click)=\"addRestTab()\">\n                                                <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add another Rest HTTP\n                                                Server\n                                            </button>\n                                        </div>\n                                    </div>\n\n                                    <div id=\"mqtt_action_tab\" [hidden]=\"!showMqttTabs\">\n                                        <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                        <div id=\"mqtt_tabs\">\n                                            <div *ngFor=\"let mqtt of mqttModelList, let mqttindex = index\">\n                                                <div id=\"mqtt_{{mqttindex}}\">\n                                                    <div class=\"col-md-10\">\n                                                        <div class=\"card\">\n                                                            <div class=\"card-header\">\n                                                                MQTT broker {{mqttindex+1}}\n                                                                <span class=\"badge mr-2 badge-danger\" role=\"button\" (click)=\"removeMqttTab(mqttindex);\"><i\n                                                                    class=\"fa fa-trash-o\"\n                                                                    aria-hidden=\"true\"></i>&nbsp;Delete</span>\n                                                            </div>\n                                                            <div class=\"card-body\">\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Server</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='The Server is mqtt server address, like tcp://127.0.0.1:1883'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"server_{{mqttindex}}\" name=\"server_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.server\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Topic</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"mqtttopic_{{mqttindex}}\" name=\"mqtt_topic_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.topic\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">ClientId</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"clientId_{{mqttindex}}\" name=\"clientId_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.clientId\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">ProtocoVersion</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='Default value is 3.1.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"protocolVersion_{{mqttindex}}\"\n                                                                            name=\"protocolVersion_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.protocolVersion\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">Username</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"username_{{mqttindex}}\" name=\"username_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.username\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Password</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"password_{{mqttindex}}\" name=\"password_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.password\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Cert Path</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='keys/***.pem'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"certificationPath_{{mqttindex}}\"\n                                                                            name=\"certificationPath_{{mqttindex}}\" [(ngModel)]=\"mqtt.certificationPath\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">privateKeyPath</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='keys/***.pem.key'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"privateKeyPath_{{mqttindex}}\" name=\"privateKeyPath_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.privateKeyPath\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">InsecureSkipVerify</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <select class=\"form-control\"\n                                                                            id=\"insecureSkipVerify_{{mqttindex}}\"\n                                                                            name=\"insecureSkipVerify_{{mqttindex}}\" [(ngModel)]=\"mqtt.insecureSkipVerify\">\n                                                                            <option value=\"true\">true</option>\n                                                                            <option value=\"false\" selected=\"\">false</option>\n                                                                        </select>\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">retained</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <select class=\"form-control\" id=\"retained_{{mqttindex}}\"\n                                                                            name=\"retained_{{mqttindex}}\" [(ngModel)]=\"mqtt.retained\">\n                                                                            <option value=\"true\">true</option>\n                                                                            <option value=\"false\" selected=\"\">false</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Qos</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='QoS for message delivery.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"qos_{{mqttindex}}\" name=\"qos_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.qos\">\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <h5 class=\"page-header\"></h5>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button type=\"button\" class=\"btn btn-success\" (click)=\"addMqttTab()\">\n                                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add another MQTT broker\n                                        </button>\n                                    </div>\n\n                                    <div id=\"edgex_action_tab\" [hidden]=\"!showEdgexTabs\">\n                                        <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                        <div id=\"edgex_tabs\">\n                                            <div *ngFor=\"let edgex of edgexModelList, let edgexindex = index\">\n                                                <div id=\"edgex_{{edgexindex}}\">\n                                                    <div class=\"col-md-10\">\n                                                        <div class=\"card\">\n                                                            <div class=\"card-header\">\n                                                                EdgeX message bus {{edgexindex+1}}\n                                                                <span class=\"badge mr-2 badge-danger\" role=\"button\" (click)=\"removeEdgeXTab(edgexindex);\"><i\n                                                                    class=\"fa fa-trash-o\"\n                                                                    aria-hidden=\"true\"></i>&nbsp;Delete</span>\n                                                            </div>\n                                                            <div class=\"card-body\">\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Protocol</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='Default value tcp.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"protocol_{{edgexindex}}\" name=\"protocol_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.protocol\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Host</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"host_{{edgexindex}}\" name=\"host_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.host\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">Port</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"port_{{edgexindex}}\" name=\"port_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.port\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Topic</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"edgextopic_{{edgexindex}}\" name=\"edgex_topic_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.topic\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">Content Type</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"contentType_{{edgexindex}}\" name=\"contentType_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.contentType\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Metadata</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='A field name that allows user to specify a field name of SQL select clause.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"metadata_{{edgexindex}}\" name=\"metadata_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.metadata\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Device Name</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='To specify the device name in the event structure that are sent from Kuiper.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"deviceName_{{edgexindex}}\" name=\"deviceName_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.deviceName\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Type</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='zero or mqtt, and zero is the default value.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"edgextype_{{edgexindex}}\" name=\"edgex_type_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.type\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Optional</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='If mqtt message bus type is specified, then some optional values can be specified. '></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-8\">\n                                                                        <textarea class=\"form-control\" rows=\"4\"\n                                                                            id=\"edgexParameters_{{edgexindex}}\"\n                                                                            name=\"edgexParameters_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.optional\"></textarea>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <h5 class=\"page-header\"></h5>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button type=\"button\" class=\"btn btn-success\" (click)=\"addEdgeXTab()\">\n                                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add another EdgeX message\n                                            bus\n                                        </button>\n                                    </div>\n                                    <div id=\"log_actions_tabs\" [hidden]=\"!chooseActionLog\">\n                                        <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                        <h5 class=\"text-info\"> <i class=\"fa fa-info-circle\"></i> this log in action doesn't need to set any parameters. </h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stream-center',\n  templateUrl: './stream-center.component.html',\n  styleUrls: ['./stream-center.component.css']\n})\nexport class StreamCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-add-stream',\n  templateUrl: './add-stream.component.html',\n  styleUrls: ['./add-stream.component.css']\n})\nexport class AddStreamComponent implements OnInit {\n  addStreamSimple:string = '';\n\n  constructor(private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.addStreamSimple = '{\"sql\":\"create stream EdgexStream () WITH ( FORMAT = \\\\\"JSON\\\\\", TYPE=\\\\\"edgex\\\\\")\"}';\n  }\n\n  submit() {\n    this.ruleSvc.addStream(this.addStreamSimple).subscribe(() => {\n      this.msgSvc.success('Add Stream Success!');\n      this.router.navigate(['../stream-list'], { relativeTo: this.route })\n    });\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i>\n                <span>Submit</span> \n            </button>\n        </span>\n        <span>\n            <span class=\"text-danger font-weight-bold fa fa-code mr-2\"></span>\n            <span class=\"mr-3 font-weight-bold\">Add Stream</span> \n            <textarea class=\"form-control\" id=\"deblock_udid\" name=\"deblock_udid\" rows=\"10\" style=\"min-width: 90%; margin-top: 1%;\" [(ngModel)]=\"addStreamSimple\"></textarea>\n        </span>\n    </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RuleEngineComponent } from './rule-engine.component';\nimport { AddRulesComponent } from './rules/add-rules/add-rules.component';\nimport { EditRulesComponent } from './rules/edit-rules/edit-rules.component';\nimport { RulesCenterComponent } from './rules/rules-center/rules-center.component';\nimport { RulesListComponent } from './rules/rules-list/rules-list.component';\nimport { AddStreamComponent } from './stream/add-stream/add-stream.component';\nimport { EditStreamComponent } from './stream/edit-stream/edit-stream.component';\nimport { StreamCenterComponent } from './stream/stream-center/stream-center.component';\nimport { StreamListComponent } from './stream/stream-list/stream-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RuleEngineComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'stream-center',\n        pathMatch: 'full',\n      },\n      {\n        path: 'stream-center',\n        component: StreamCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'stream-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'stream-list',\n            component: StreamListComponent,\n          },\n          {\n            path: 'add-stream',\n            component: AddStreamComponent,\n          },\n          {\n            path: 'edit-stream',\n            component: EditStreamComponent,\n          }\n        ]\n      },\n      {\n        path: 'rules-center',\n        component: RulesCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'rules-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'rules-list',\n            component: RulesListComponent,\n          },\n          {\n            path: 'add-rules',\n            component: AddRulesComponent,\n          },\n          {\n            path: 'edit-rules',\n            component: EditRulesComponent,\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RuleEngineRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Stream } from 'src/app/contracts/kuiper/stream';\nimport { MessageService } from 'src/app/message/message.service';\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\n@Component({\n  selector: 'app-edit-stream',\n  templateUrl: './edit-stream.component.html',\n  styleUrls: ['./edit-stream.component.css']\n})\nexport class EditStreamComponent implements OnInit {\n\n  streamTemp?: Stream;\n  editStreamSimple:string = '';\n  \n  constructor(\n    private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['streamName']) {\n        this.toEditStream(params['streamName']);\n      }\n    });\n  }\n\n  toEditStream(streamName:string){\n    \n    this.ruleSvc.findStreamByName(streamName).subscribe((data: Stream) => {\n      this.streamTemp = data;\n      let editStreamStr: string = '{\"sql\":\"create stream '+this.streamTemp.Name+' (';\n      let streamFieldTemp:string = '';\n      if(this.streamTemp.StreamFields != null){\n        for (let index in this.streamTemp.StreamFields) {\n          if(Number.parseInt(index)+1 != this.streamTemp.StreamFields.length){\n            streamFieldTemp += this.streamTemp.StreamFields[index].Name + \" \" + this.streamTemp.StreamFields[index].FieldType + \", \";\n          }else{\n            streamFieldTemp += this.streamTemp.StreamFields[index].Name + \" \" + this.streamTemp.StreamFields[index].FieldType;\n          }\n        }\n      }\n      editStreamStr += streamFieldTemp+') WITH ( ';\n      if(this.streamTemp.Options.DATASOURCE != undefined){\n        editStreamStr += 'DATASOURCE = \\\\\"'+this.streamTemp.Options.DATASOURCE+'\\\\\",'\n      }\n      if(this.streamTemp.Options.FORMAT != undefined){\n        editStreamStr += 'FORMAT = \\\\\"'+this.streamTemp.Options.FORMAT+'\\\\\",';\n      }\n      if(this.streamTemp.Options.KEY != undefined){\n        editStreamStr += 'KEY = \\\\\"'+this.streamTemp.Options.KEY+'\\\\\",';\n      }\n      if(this.streamTemp.Options.TYPE != undefined){\n        editStreamStr += 'TYPE=\\\\\"'+this.streamTemp.Options.TYPE+'\\\\\"';\n      }else{\n        editStreamStr = editStreamStr.substring(0,editStreamStr.length-1);\n      }\n      editStreamStr += ')\"}';\n      this.editStreamSimple = editStreamStr;\n    });\n  }\n\n  submit() {\n    this.ruleSvc.updateStream(this.editStreamSimple).subscribe(() => {\n      this.msgSvc.success('Update Stream Success!');\n      this.router.navigate(['../stream-list'], { relativeTo: this.route })\n    });\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i>\n                <span>Submit</span> \n            </button>\n        </span>\n        <span>\n            <span class=\"text-danger font-weight-bold fa fa-code mr-2\"></span>\n            <span class=\"mr-3 font-weight-bold\">Edit Stream</span> \n            <textarea class=\"form-control\" id=\"deblock_udid\" name=\"deblock_udid\" rows=\"10\" style=\"min-width: 90%; margin-top: 1%;\" [(ngModel)]=\"editStreamSimple\"></textarea>\n        </span>\n    </div>\n</div>\n\n","import { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Rule } from 'src/app/contracts/kuiper/rule';\nimport { RuleEngineService } from '../../../services/rule-engine.service';\nimport { MessageService } from '../../../message/message.service';\nimport { CommandService } from 'src/app/services/command.service';\n\n@Component({\n  selector: 'app-rules-list',\n  templateUrl: './rules-list.component.html',\n  styleUrls: ['./rules-list.component.css']\n})\n\nexport class RulesListComponent implements OnInit {\n\n  rulesList: Rule[] = [];\n  selectedRule: string[] = [];\n  isCheckedAll: boolean = false;\n  ruleTemp: any;\n  ruleModelTitle:string = '';\n\n  constructor(\n    private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private commandSvc: CommandService,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n        this.getRulesList()\n    });\n  }\n\n  getRulesList() {\n    this.ruleSvc.allRules().subscribe((data: Rule[]) => { this.rulesList = data ;});\n  }\n\n  refresh() {\n    this.ruleSvc.allRules().subscribe((data: Rule[]) => {\n      this.rulesList = data;\n      this.msgSvc.success('refresh');\n    });\n  }\n\n  edit() {\n    this.router.navigate(['../edit-rules'], {\n      relativeTo: this.route,\n      queryParams: { 'id': this.selectedRule[0] }\n    })\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n  \n  delete() {\n    this.selectedRule.forEach((id,i) => {\n      this.ruleSvc.deleteOneRuleById(id).subscribe(() => {\n        this.selectedRule.splice(i,1);\n        this.rulesList.forEach((rule: Rule, index) => {\n          if (rule.id === id) {\n            this.rulesList.splice(index, 1);\n            this.msgSvc.success('remove rule ', ` Id: ${id}`);\n            return\n          }\n        });\n      },error =>{\n        if(error.status ==200 && error.statusText ==\"OK\"){\n         this.selectedRule = [];\n         this.rulesList.forEach((rule: Rule, index) => {\n           if (rule.id === id) {\n             this.rulesList.splice(index, 1);\n             return\n           }\n         });\n         this.msgSvc.success('remove rule ', ` Id: ${id}`);\n        }\n       });\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    let self = this;\n    if (checkbox.checked) {\n      this.selectedRule = [];\n      this.rulesList.forEach(function (item) {\n        self.selectedRule.push(item.id);\n        self.isChecked(item.id);\n      });\n      this.isCheckedAll = true;\n      return\n    }\n    this.isCheckedAll = false;\n    this.selectedRule = [];\n    this.rulesList.forEach(function (item) {\n      self.isChecked(item.id);\n    });\n\n  }\n\n  isChecked(id: string): boolean {\n    return this.selectedRule.findIndex(v => v === id) >= 0;\n  }\n\n  selectOne(event: any, id: string) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedRule.push(id);\n      if (this.selectedRule.length === this.rulesList.length) {\n        this.isCheckedAll = true;\n      }\n      return\n    }\n    this.isCheckedAll = false;\n    this.isChecked(id);\n    this.selectedRule.splice(this.selectedRule.indexOf(id), 1)\n\n  }\n\n  start() {\n    this.selectedRule.forEach((id) => {\n      this.ruleSvc.startRule(id).subscribe(() => {\n        this.selectedRule = [];\n        this.rulesList.forEach((rule: Rule, index) => {\n          if (rule.id === id) {\n            this.rulesList.splice(index, 1);\n            this.msgSvc.success('start rule ', ` Name: ${rule.id}`);\n            this.refresh();\n            return\n          }\n        });\n      });\n    });\n  }\n\n  stop() {\n    this.selectedRule.forEach((id) => {\n      this.ruleSvc.stopRule(id).subscribe(() => {\n        this.selectedRule = [];\n        this.rulesList.forEach((rule: Rule, index) => {\n          if (rule.id === id) {\n            this.rulesList.splice(index, 1);\n            this.msgSvc.success('stop rule ', ` Name: ${rule.id}`);\n            this.refresh();\n            return\n          }\n        });\n      });\n    });\n  }\n\n  restart() {\n    this.selectedRule.forEach((id) => {\n      this.ruleSvc.restartRule(id).subscribe(() => {\n        this.selectedRule = [];\n        this.rulesList.forEach((rule: Rule, index) => {\n          if (rule.id === id) {\n            this.rulesList.splice(index, 1);\n            this.msgSvc.success('restart rule ', ` Name: ${rule.id}`);\n            this.refresh();\n            return\n          }\n        });\n      });\n    });\n  }\n\n  ruleDetail(id: string){\n    this.ruleSvc.findRuleById(id).subscribe((data) => {\n      this.ruleTemp = JSON.stringify(data, null, 3);\n      $(\"#ruleDetailDialog\").modal('show');\n      this.ruleModelTitle = 'Rule Details';\n    });\n  }\n\n  statusDetail(id: string){\n    this.ruleSvc.getRuleStatusById(id)\n    .subscribe((data) => {\n      this.ruleTemp = JSON.stringify(data, null, 3);\n      $(\"#ruleDetailDialog\").modal('show');\n      this.ruleModelTitle = 'Status Details';\n    },error =>{\n      this.ruleTemp = error.error.text\n      $(\"#ruleDetailDialog\").modal('show');\n      this.ruleModelTitle = 'Status Details';\n    });\n  }\n\n  topologyStructure(id: string){\n    this.ruleSvc.getRuleTopoById(id).subscribe((data) => {\n      this.ruleTemp = JSON.stringify(data, null, 3);\n      $(\"#ruleDetailDialog\").modal('show');\n      this.ruleModelTitle = 'Topology Structure';\n    });\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\"><i class=\"fa fa-list text-danger\"></i> Rule List</div>\n    <div class=\"card-body p-0 position-relative\">\n        <div class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span><i class=\"fa fa-refresh mr-1\"></i>Refresh</span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-rules\">\n                    <span><i class=\"fa fa-plus mr-1\"></i>Add</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"selectedRule.length !== 1\">\n                    <span><i class=\"fa fa-edit mr-1\"></i>Edit</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"selectedRule.length === 0\">\n                    <span><i class=\"fa fa-trash mr-1\"></i>Delete</span>\n                </button>\n              </div>\n              <div class=\"btn-group btn-group-sm\" role=\"group\" style=\"margin-left: 1%;\">\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"start()\" [disabled]=\"selectedRule.length !== 1\">\n                    <span><i class=\"fa fa-play-circle-o mr-1\"></i>Start</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"stop()\" [disabled]=\"selectedRule.length !== 1\">\n                    <span><i class=\"fa fa-pause-circle-o mr-1\"></i>Stop</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"restart()\" [disabled]=\"selectedRule.length !== 1\">\n                    <span><i class=\"fa fa-history mr-1\"></i>Restart</span>\n                </button>\n              </div>\n        </div>\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\">Id</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Rule Details</th>\n                      <th scope=\"col\">Status Details</th>\n                      <th scope=\"col\">Topology Structure</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let rule of rulesList\" [class.table-active]=\"isChecked(rule.id)\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(rule.id)\" (click)=\"selectOne($event,rule.id)\"></td>\n                        <td class=\"user-select-all\">{{rule.id}}</td>\n                        <td>{{rule.status}}</td>\n                        <td>\n                            <button class=\"btn btn-primary\" (click)=\"ruleDetail(rule.id)\">\n                                <span><i class=\"fa fa-book mr-1\"></i>Detail</span> \n                            </button>\n                        </td>\n                        <td>\n                            <button class=\"btn btn-primary\" (click)=\"statusDetail(rule.id)\">\n                                <span><i class=\"fa fa-book mr-1\"></i>Detail</span> \n                            </button>\n                        </td>\n                        <td>\n                            <button class=\"btn btn-primary\" (click)=\"topologyStructure(rule.id)\">\n                                <span><i class=\"fa fa-book mr-1\"></i>Detail</span> \n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item disabled\">\n                    <a class=\"page-link\" href=\"javascript:void(0)\">Previous</a>\n                </li>\n                <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">1</a></li>\n                <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">2</a></li>\n                <li class=\"page-item\"><a class=\"page-link\" href=\"javascript:void(0)\">3</a></li>\n                <li class=\"page-item\">\n                    <a class=\"page-link\" href=\"javascript:void(0)\">Next</a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning\"></i>\n                    Warning\n                </h5>  \n            </div>\n            <div class=\"modal-body\">\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"ruleDetailDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"ruleDetailDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-primary\" id=\"ruleDetailDialogLabel\">\n                    {{ruleModelTitle}}\n                </h5>\n            </div>\n            <div class=\"modal-body\">\n                <pre class=\"mt-2 bg-secondary p-2 text-light rounded\">{{ruleTemp}}</pre>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { Rule } from 'src/app/contracts/kuiper/rule';\nimport { RuleEngineService } from 'src/app/services/rule-engine.service';\n\nimport { MessageService } from '../../../message/message.service';\nimport { CoreCommand } from '../../../contracts/v2/core-command';\n\n@Component({\n  selector: 'app-edit-rules',\n  templateUrl: './edit-rules.component.html',\n  styleUrls: ['./edit-rules.component.css']\n})\n\nexport class EditRulesComponent implements OnInit {\n  currentStep = 0;\n  ruleName: string = '';\n  ruleSql: string = '';\n  ruleAction: any[] = [];\n  ruleActionTemp: any[] = [];\n\n  restModelList: any[] = [];\n  mqttModelList: any[] = [];\n  edgexModelList: any[] = [];\n  showRestTabs:boolean = false;\n  showMqttTabs:boolean = false;\n  showEdgexTabs:boolean = false;\n  chooseActionLog:boolean = false;\n  targetActionConfigs: any[] = [];\n\n  templateSelected: string = \"custom\";\n\n  selectedClass = \"text-white rounded px-2 bg-success  font-weight-bold\";\n  noSelectedClass = \"text-white rounded px-2 bg-secondary  font-weight-bold\";\n  constructor(private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private el:ElementRef\n  ) { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    this.route.queryParams.subscribe(params => {\n      if (params['id']) {\n        this.ruleName = params['id'];\n        this.toEditRule();\n      }\n    });\n  }\n\n  ngAfterViewInit(){\n    // $timeout(function(){\n    //   $scope.apply();\n    // })\n  }\n\n  toEditRule() {\n    this.ruleSvc.findRuleById(this.ruleName).subscribe((rule: Rule) => {\n      this.ruleSql = rule.sql;\n      if(rule.actions != null && rule.actions.length>0){\n        this.ruleActionTemp = rule.actions;\n      }\n    });\n  }\n\n  renderPopoverComponent() {\n    $('[data-toggle=\"popover\"]').popover({\n      trigger: 'hover'\n    });\n  }\n\n  templateToggle(template: string,index:number) {\n    this.templateSelected = template;\n    switch (this.templateSelected) {\n      case 'coredata':\n        this.restModelList[index].method = 'DELETE';\n        this.restModelList[index].host = 'edgex-core-data';\n        this.restModelList[index].port = 48080;\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300);\n        break;\n      case 'command':\n        this.restModelList[index].method = '';\n        this.restModelList[index].host = 'edgex-core-command';\n        this.restModelList[index].port = 48082;\n        setTimeout(() => {\n          this.renderPopoverComponent();\n        }, 300); \n        break;\n      case 'custom':\n        this.restModelList[index].method = 'GET';\n        this.restModelList[index].retained = false;\n    }\n  }\n\n  onCmdMethodSelected(method: string,index:number) {\n    this.restModelList[index].method = method;\n  }\n\n  onCommandSelected(cmd: CoreCommand,index:number) {\n    this.restModelList[index].path = cmd.path;\n  }\n\n  isPureIntegerType(value: any): boolean {\n    if (!isNaN(value) && (parseFloat(value) === parseInt(value))) {\n      return true\n    }\n    return false\n  }\n\n  stepStateLock(): boolean {\n    switch (this.currentStep) {\n      case 0:\n        return this.ruleName === '' || this.ruleSql === ''\n      case 1:\n        if(this.el.nativeElement.querySelector(\"#restCheckbox\").checked || \n        this.el.nativeElement.querySelector(\"#mqttCheckbox\").checked ||\n        this.el.nativeElement.querySelector(\"#edgexCheckbox\").checked ||\n        this.el.nativeElement.querySelector(\"#logCheckbox\").checked){\n          return false;\n        }else{\n          return true;\n        }\n      default:\n        return false\n    }\n  }\n\n  next() {\n    this.currentStep += 1;\n    this.ruleActionTemp.forEach((event)=>{\n      if(Object.keys(event)[0] == 'rest'){\n        if(!this.showRestTabs){\n          setTimeout(() => {this.el.nativeElement.querySelector(\"#restCheckbox\").click();},10);\n          this.showRestTabs = true;\n        }\n        this.renderRestDataPromise(event);\n      }else if(Object.keys(event)[0] == 'mqtt'){\n        if(!this.showMqttTabs){\n          setTimeout(() => {this.el.nativeElement.querySelector(\"#mqttCheckbox\").click();},10);\n          this.showMqttTabs = true;\n        }\n        this.renderMqttDataPromise(event);\n      }else if(Object.keys(event)[0] == 'edgex'){\n        if(!this.showEdgexTabs){\n          setTimeout(() => {this.el.nativeElement.querySelector(\"#edgexCheckbox\").click();},10);\n          this.showEdgexTabs = true;\n        }\n        this.renderEdgexDataPromise(event);\n      }else if(Object.keys(event)[0] == 'log'){\n        if(!this.chooseActionLog){\n          setTimeout(() => {this.el.nativeElement.querySelector(\"#logCheckbox\").click();},1);\n          this.chooseActionLog = true;\n        }\n      }\n    });\n  }\n\n  renderRestDataPromise(event:any): Promise<any> {\n    return new Promise(resolve => {\n      let rest:any = {\n        retryInterval: '',\n        sendSingle: 'true',\n        method: '',\n        host: '',\n        port: '',\n        path: '',\n        dataTemplate: ''\n      };\n      rest.retryInterval = event.rest['retryInterval'];\n      rest.sendSingle = event.rest['sendSingle'];\n      rest.method = event.rest['method'];\n      rest.host = event.rest['url'].split(\"://\")[1].split(\":\")[0];\n      let port = event.rest['url'].split(\"://\")[1].split(\":\")[1].split(\"/\")[0];\n      let path = event.rest['url'].split(port)[1];\n      rest.port = port;\n      rest.path = path;\n      if(event.rest['dataTemplate'] != undefined ){\n        rest.dataTemplate = event.rest['dataTemplate'].replace(/\\\\/g,\"\");\n      }\n      this.addRestTab(rest);\n   });\n  }\n\n  renderMqttDataPromise(event:any): Promise<any> {\n    return new Promise(resolve => {\n      let mqtt:any = {\n        server: '',\n        topic: '',\n        clientId: '',\n        protocolVersion: '',\n        username: '',\n        password: '',\n        certificationPath: '',\n        privateKeyPath: '',\n        insecureSkipVerify: 'false',\n        retained: 'false',\n        qos: ''\n      };\n      mqtt.server = event.mqtt['server'];\n      mqtt.topic = event.mqtt['topic'];\n      mqtt.clientId = event.mqtt['clientId'];\n      mqtt.protocolVersion = event.mqtt['protocolVersion'];\n      mqtt.username = event.mqtt['username'];\n      mqtt.password = event.mqtt['password'];\n      mqtt.certificationPath = event.mqtt['certificationPath'];\n      mqtt.privateKeyPath = event.mqtt['privateKeyPath'];\n      mqtt.insecureSkipVerify = event.mqtt['insecureSkipVerify'];\n      mqtt.retained = event.mqtt['retained'];\n      mqtt.qos = event.mqtt['qos'];\n      this.addMqttTab(mqtt);\n   });\n  }\n\n  renderEdgexDataPromise(event:any): Promise<any> {\n    return new Promise(resolve => {\n      let edgex:any = {\n        protocol: '',\n        host: '',\n        port: '',\n        topic: '',\n        contentType: '',\n        metadata: '',\n        deviceName: '',\n        type: '',\n        optional: ''\n      };\n      edgex.protocol = event.edgex['protocol'];\n      edgex.host = event.edgex['host'];\n      edgex.port = event.edgex['port'];\n      edgex.topic = event.edgex['topic'];\n      edgex.contentType = event.edgex['contentType'];\n      edgex.metadata = event.edgex['metadata'];\n      edgex.deviceName = event.edgex['deviceName'];\n      edgex.type = event.edgex['type'];\n      edgex.optional = event.edgex['optional'];\n      this.addEdgeXTab(edgex);\n   });\n  }\n\n  previous() {\n    this.currentStep = this.currentStep - 1;\n  }\n\n  changeStep() {\n    this.currentStep += 1;\n  }\n\n  done() {\n\t\t\tif(this.el.nativeElement.querySelector(\"#restCheckbox\").checked){\n        this.restModelList.forEach((event) => {\n          let rest:any = {};\n\t\t\t\t\tif(event.retryInterval != null && event.retryInterval != \"\"){\n\t\t\t\t\t\trest.retryInterval = event.retryInterval;\n\t\t\t\t\t}\n\t\t\t\t\tif(event.sendSingle != null && event.sendSingle != \"\"){\n\t\t\t\t\t\trest.sendSingle = event.sendSingle;\n\t\t\t\t\t}\n\t\t\t\t\tif( event.host != null && event.host != \"\" && event.port != null && event.port != \"\" && event.path != null && event.path != \"\"){\n\t\t\t\t\t\trest.url= \"http://\"+ event.host + \":\" + event.port + event.path;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.msgSvc.errors(\"Url cannot be empty.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(event.method != null && event.method != \"\"){\n\t\t\t\t\t\trest.method = event.method;\n\t\t\t\t\t}\n\t\t\t\t\tif(event.method == \"PUT\"){\n\t\t\t\t\t\tif(event.dataTemplate != null && event.dataTemplate != \"\"){\n\t\t\t\t\t\t\tlet param = event.dataTemplate.replace(/\\\"/g, '\\\\\\\"');\n\t\t\t\t\t\t\trest.dataTemplate = param;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n          this.ruleAction.push({rest})\n        });\n\t\t\t}\n      \n\t\t\tif(this.el.nativeElement.querySelector(\"#mqttCheckbox\").checked){\n\t\t\t\tthis.mqttModelList.forEach((mqtt) => {\n          this.ruleAction.push({mqtt})\n        });\n\t\t\t}\n\n\t\t\tif(this.el.nativeElement.querySelector(\"#edgexCheckbox\").checked){\n\t\t\t\tthis.edgexModelList.forEach((edgex) => {\n          this.ruleAction.push({edgex})\n        });\n\t\t\t}\n\n\t\t\tif(this.el.nativeElement.querySelector(\"#logCheckbox\").checked){\n\t\t\t\tlet log = {log:{}};\n\t\t\t\tthis.ruleAction.push({log})\n\t\t\t}\n    let rule: Rule = {\n      id:this.ruleName,\n      sql:this.ruleSql,\n      actions:this.ruleAction\n    } as Rule\n    this.ruleSvc.updateRule(rule).subscribe(() => {\n      this.msgSvc.success('Update rule success');\n      this.router.navigate(['../rules-list'], { relativeTo: this.route })\n    })\n  }\n\n  chooseRest(check:any){\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    if(check.checked){\n      if(this.restModelList.length == 0){\n        this.addRestTab('');\n      }\n      this.showRestTabs = true;\n    }else{\n      this.showRestTabs = false;\n    }\n  }\n\n  chooseMqtt(check:any){\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    if(check.checked){\n      if(this.mqttModelList.length == 0){\n        this.addMqttTab('');\n      }\n      this.showMqttTabs = true;\n    }else{\n      this.showMqttTabs = false;\n    }\n  }\n\n  chooseEdgex(check:any){\n    setTimeout(() => {\n      this.renderPopoverComponent();\n    }, 10);\n    if(check.checked){\n      if(this.edgexModelList.length == 0){\n        this.addEdgeXTab('');\n      }\n      this.showEdgexTabs = true;\n    }else{\n      this.showEdgexTabs = false;\n    }\n  }\n\n  chooseLog(check:any){\n    if(check.checked){\n      this.chooseActionLog = true;\n    }else{\n      this.chooseActionLog = false;\n    }\n    \n  }\n\n  addRestTab(rest:any) {\n    if(rest == ''){\n      rest = {\n        retryInterval: '',\n        sendSingle: 'true',\n        method: '',\n        host: '',\n        port: '',\n        path: '',\n        dataTemplate: ''\n      };\n    }\n    this.restModelList.push(rest);\n  }\n\n  addMqttTab(mqtt:any) {\n    if(mqtt == ''){\n      mqtt= {\n        server: '',\n        topic: '',\n        clientId: '',\n        protocolVersion: '',\n        username: '',\n        password: '',\n        certificationPath: '',\n        privateKeyPath: '',\n        insecureSkipVerify: 'false',\n        retained: 'false',\n        qos: ''\n      };\n    }\n    this.mqttModelList.push(mqtt);\n  }\n\n  addEdgeXTab(edgex:any) {\n    if(edgex == ''){\n      edgex = {\n        protocol: '',\n        host: '',\n        port: '',\n        topic: '',\n        contentType: '',\n        metadata: '',\n        deviceName: '',\n        type: '',\n        optional: ''\n      };\n    }\n    this.edgexModelList.push(edgex);\n  }\n\n  removeRestTab(index: any) {\n    let arrindex = $.inArray(parseInt(index), this.restModelList);\n    this.restModelList.splice(arrindex, 1);\n  }\n\n  removeMqttTab(index: any) {\n    let arrindex = $.inArray(parseInt(index), this.mqttModelList);\n    this.mqttModelList.splice(arrindex, 1);\n  }\n\n  removeEdgeXTab(index: any) {\n    let arrindex = $.inArray(parseInt(index), this.edgexModelList);\n    this.edgexModelList.splice(arrindex, 1);\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-lightbulb-o fa-lg mr-2 text-danger\"></span>\n            <span class=\"text-secondary\">Add Rule Wizard</span>\n        </span>\n    </div>\n    <div class=\"card-header bg-light\">\n        <nav aria-label=\"breadcrumb\" class=\"mb-0 p-0\">\n            <ol class=\"breadcrumb p-1 mb-0 bg-light\">\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 0? selectedClass:noSelectedClass\">RulePrimary <i\n                            *ngIf=\"currentStep >= 1\" class=\"fa fa-check\"></i></span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 1? selectedClass:noSelectedClass\">CreateRuleActions <i\n                            *ngIf=\"currentStep >= 2\" class=\"fa fa-check\"></i></span>\n                </li>\n            </ol>\n        </nav>\n    </div>\n    <div class=\"card-header\">\n        <button *ngIf=\"currentStep\" class=\"btn btn-info btn-sm\" (click)=\"previous()\"><i\n                class=\"fa fa-long-arrow-left\"></i> Previous</button>\n        <button *ngIf=\"1 > currentStep; else stepDone\" class=\"btn btn-primary btn-sm float-right\" [disabled]=\"stepStateLock()\" (click)=\"next()\">Next\n            <i class=\"fa fa-long-arrow-right\"></i></button>\n        <ng-template #stepDone>\n            <button class=\"btn btn-success btn-sm ml-4 float-right\" [disabled]=\"stepStateLock()\" (click)=\"done()\"><i\n                    class=\"fa fa-save\"></i> Submit</button>\n        </ng-template>\n    </div>\n    <div class=\"card-body p-0\">\n        <div [ngSwitch]=\"currentStep\">\n            <ng-template [ngSwitchCase]=\"0\" #RulePrimary>\n                <form class=\"px-5 py-4\">\n                    <div class=\"form-group row has-validation\">\n                        <label for=\"ruleName\" class=\"col-md-2 col-form-label\">\n                            <span class=\"mr-2\">Name</span> \n                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                            data-content='The identification of the rule. The rule name cannot be duplicated in the same Kuiper instance.'></span>\n                        </label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" class=\"form-control\" id=\"ruleName\" [class.is-invalid]=\"!ruleName\"\n                                [class.is-valid]=\"ruleName\" name=\"ruleName\" [(ngModel)]=\"ruleName\">\n                            <div id=\"ruleName\" class=\"invalid-feedback\">\n                                <small>the rule name can't be empty!</small>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row has-validation\">\n                        <label for=\"ruleSql\" class=\"col-md-2 col-form-label\">\n                            <span class=\"mr-2\">ruleSql</span> \n                            <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                            data-content='The sql query to run for the rule.The Table name must be your stream name.For example \"SELECT EdgexStream.temperature, EdgexStream.temp FROM EdgexStream where EdgexStream.temperature > EdgexStream.temp \".'></span>\n                        </label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" class=\"form-control\" id=\"ruleSql\" [class.is-invalid]=\"!ruleSql\"\n                                [class.is-valid]=\"ruleSql\" name=\"ruleSql\" [(ngModel)]=\"ruleSql\">\n                            <div id=\"ruleSql\" class=\"invalid-feedback\">\n                                <small>the sql can't be empty!</small>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n\n            <ng-template [ngSwitchCase]=\"1\" #CreateRuleActions>\n                <form class=\"form-horizontal\">\n                    <div class=\"card border-0\">\n                        <div class=\"card-body\">\n                            <div class=\"row border border-secondary p-2 rounded-lg mx-1\">\n                                <div class=\"col-md-3 col-lg-3 border-right border-info\">\n                                    <div class=\"form-group\">\n                                        <label>\n                                            <div class=\"font-weight-bold\">\n                                                  Action Type\n                                            </div>\n                                        </label>\n                                        <div class=\"checkbox\">\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"restCheckbox\" name=\"rest\" (click) = \"chooseRest($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to a Rest HTTP server.\n                                            </label>\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"mqttCheckbox\" name=\"mqtt\" (click) = \"chooseMqtt($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to an MQTT broker.\n                                            </label>\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"edgexCheckbox\" name=\"edgex\" (click) = \"chooseEdgex($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to EdgeX message bus.\n                                            </label>\n                                            <label>\n                                                <input style=\"margin-top: 4%;\" type=\"checkbox\" id=\"logCheckbox\" name=\"log\" (click) = \"chooseLog($event.target)\"\n                                                    class=\".checkbox-primary\"> Send the result to log file.\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-9 col-lg-9\">\n                                    <div id=\"rest_action_tab\">\n                                        <div id=\"rest_tabs\" [hidden]=\"!showRestTabs\">\n                                            <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                            <div *ngFor=\"let rest of restModelList, let restindex = index\">\n                                                <div class=\"form-group row\" id=\"rest_{{restindex}}\">\n                                                    <div class=\"col-md-10\">\n                                                        <div class=\"card\">\n                                                            <div class=\"card-header\">\n                                                                Rest {{restindex+1}}\n                                                                <span class=\"badge mr-2 badge-danger\" role=\"button\" (click)=\"removeRestTab(restindex);\"><i\n                                                                    class=\"fa fa-trash-o\"\n                                                                    aria-hidden=\"true\"></i>&nbsp;Delete</span>\n                                                                    <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'command'\" [class.badge-primary]=\"templateSelected === 'command'\" (click)=\"templateToggle('command',restindex)\">CommandServiceTemplate</span>\n                                                                    <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'custom'\" [class.badge-primary]=\"templateSelected === 'custom'\" (click)=\"templateToggle('custom',restindex)\">CustomTemplate</span>\n                                                                    <span class=\"badge mr-2\" role=\"button\" [class.badge-secondary]=\"templateSelected !== 'coredata'\" [class.badge-primary]=\"templateSelected === 'coredata'\" (click)=\"templateToggle('coredata',restindex)\">CoreDataSeviceTemplate</span>\n                                                            </div>\n                                                            <div class=\"card-body\">\n                                                                <div [ngSwitch]=\"templateSelected\">\n                                                                    <ng-template [ngSwitchCase]=\"'custom'\" #customTemplate>\n                                                                        <form>\n                                                                            <div class=\"form-group row\">\n                                                                                <label class=\"col-md-2 col-form-label\">\n                                                                                    <span class=\"mr-2\">RetryInterval</span> \n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                                    data-content='The RetryInterval type is number,like -1'></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <input type=\"text\" class=\"form-control\"\n                                                                                        id=\"retryInterval_{{restindex}}\" name=\"retryInterval_{{restindex}}\"\n                                                                                        [(ngModel)]=\"rest.retryInterval\">\n                                                                                </div>\n                                                                                <label class=\"col-md-2 control-label\">SendSingle</label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <select class=\"form-control\"\n                                                                                        id=\"SendSingle_{{restindex}}\"\n                                                                                        name=\"sendSingle_{{restindex}}\" [(ngModel)]=\"rest.sendSingle\">\n                                                                                        <option value=\"true\">true</option>\n                                                                                        <option value=\"false\" selected=\"\">false</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>HttpMethod</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <select type=\"text\" id=\"restMethod_{{restindex}}\" class=\"form-control\" name=\"httpMethod_{{restindex}}\" [(ngModel)]=\"rest.method\">\n                                                                                        <option value=\"GET\">GET</option>\n                                                                                        <option value=\"POST\">POST</option>\n                                                                                        <option value=\"PUT\">PUT</option>\n                                                                                        <option value=\"DELETE\">DELETE</option>\n                                                                                        <option value=\"PATCH\">PATCH</option>\n                                                                                        <option value=\"HEAD\">HEAD</option>\n                                                                                        <option value=\"TRACE\">TRACE</option>\n                                                                                        <option value=\"CONNECT\">CONNECT</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>Host</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressHost_{{restindex}}\" [class.is-invalid]=\"!rest.host\" [class.is-valid]=\"rest.host\" name=\"addressHost_{{restindex}}\" [(ngModel)]=\"rest.host\" required>\n                                                                                    <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address host can't be empty!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPort_{{restindex}}\" [class.is-invalid]=\"!isPureIntegerType(rest.port)\" [class.is-valid]=\"isPureIntegerType(rest.port)\" name=\"addressPort_{{restindex}}\" [(ngModel)]=\"rest.port\" required>\n                                                                                    <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address port can't be empty and only pure integer is supported!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath_{{restindex}}\" name=\"addressPath_{{restindex}}\" [(ngModel)]=\"rest.path\">\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody_{{restindex}}\" name=\"requestBody_{{restindex}}\" [(ngModel)]=\"rest.dataTemplate\">\n                                                                                </div>\n                                                                            </div>\n                                                                        </form>\n                                                                    </ng-template>\n                                                                    <ng-template [ngSwitchCase]=\"'coredata'\" #coredataTemplate>\n                                                                        <form>\n                                                                            <div class=\"form-group row\">\n                                                                                <label class=\"col-md-2 col-form-label\">\n                                                                                    <span class=\"mr-2\">RetryInterval</span> \n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                                    data-content='The RetryInterval type is number,like -1'></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <input type=\"text\" class=\"form-control\"\n                                                                                        id=\"retryInterval_{{restindex}}\" name=\"retryInterval_{{restindex}}\"\n                                                                                        placeholder=\"-1\" [(ngModel)]=\"rest.retryInterval\">\n                                                                                </div>\n                                                                                <label class=\"col-md-2 control-label\">SendSingle</label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <select class=\"form-control\"\n                                                                                        id=\"SendSingle_{{restindex}}\"\n                                                                                        name=\"sendSingle_{{restindex}}\" [(ngModel)]=\"rest.sendSingle\">\n                                                                                        <option value=\"true\">true</option>\n                                                                                        <option value=\"false\" selected=\"\">false</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>HttpMethod</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <select type=\"text\" id=\"restMethod_{{restindex}}\" class=\"form-control\" name=\"httpMethod_{{restindex}}\" [(ngModel)]=\"rest.method\">\n                                                                                        <option value=\"DELETE\">DELETE</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>\n                                                                                    <span class=\"mr-2\">Host</span>\n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                                                        data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressHost_{{restindex}}\" [class.is-invalid]=\"!rest.host\" [class.is-valid]=\"rest.host\" name=\"addressHost_{{restindex}}\" [(ngModel)]=\"rest.host\" required>\n                                                                                    <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address host can't be empty!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPort_{{restindex}}\" [class.is-invalid]=\"!isPureIntegerType(rest.port)\" [class.is-valid]=\"isPureIntegerType(rest.port)\" name=\"addressPort_{{restindex}}\" [(ngModel)]=\"rest.port\" required>\n                                                                                    <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address port can't be empty and only pure integer is supported!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPath_{{restindex}}\" name=\"addressPath_{{restindex}}\" [(ngModel)]=\"rest.path\">\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody_{{restindex}}\" name=\"requestBody_{{restindex}}\" [(ngModel)]=\"rest.dataTemplate\">\n                                                                                </div>\n                                                                            </div>\n                                                                        </form>\n                                                                    </ng-template>\n                                                                    <ng-template [ngSwitchCase]=\"'command'\" #commandTemplate>\n                                                                        <form>\n                                                                            <div class=\"form-group row\">\n                                                                                <label class=\"col-md-2 col-form-label\">\n                                                                                    <span class=\"mr-2\">RetryInterval</span> \n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                                    data-content='The RetryInterval type is number,like -1'></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <input type=\"text\" class=\"form-control\"\n                                                                                        id=\"retryInterval_{{restindex}}\" name=\"retryInterval_{{restindex}}\"\n                                                                                        placeholder=\"-1\" [(ngModel)]=\"rest.retryInterval\">\n                                                                                </div>\n                                                                                <label class=\"col-md-2 control-label\">SendSingle</label>\n                                                                                <div class=\"col-md-3\">\n                                                                                    <select class=\"form-control\"\n                                                                                        id=\"SendSingle_{{restindex}}\"\n                                                                                        name=\"sendSingle_{{restindex}}\" [(ngModel)]=\"rest.sendSingle\">\n                                                                                        <option value=\"true\">true</option>\n                                                                                        <option value=\"false\" selected=\"\">false</option>\n                                                                                    </select>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"HttpMethod\" class=\"col-md-2 col-form-label\" required>\n                                                                                        <span class=\"mr-2\">HttpMethod</span>\n                                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                                                        data-content=\"httpMethod field will be filled up automatically when the path field is selected! \"></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"httpMethod_{{restindex}}\" name=\"httpMethod_{{restindex}}\" disabled [(ngModel)]=\"rest.method\" required>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressHost\" class=\"col-md-2 col-form-label\" required>\n                                                                                    <span class=\"mr-2\">Host</span>\n                                                                                    <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"false\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"tips\" \n                                                                                        data-content=\"Both Host and Port fields are editable if you have a different host address !\"></span>\n                                                                                </label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressHost\" [class.is-invalid]=\"!rest.host\" [class.is-valid]=\"rest.host\" name=\"addressHost_{{restindex}}\" [(ngModel)]=\"rest.host\" required>\n                                                                                    <div id=\"addressHostFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address host can't be empty!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row has-validation\">\n                                                                                <label for=\"addressPort\" class=\"col-md-2 col-form-label\" required>Port</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"addressPort\" [class.is-invalid]=\"!isPureIntegerType(rest.port)\" [class.is-valid]=\"isPureIntegerType(rest.port)\" name=\"addressPort_{{restindex}}\" [(ngModel)]=\"rest.port\" required>\n                                                                                    <div id=\"addressPortFeedback\" class=\"invalid-feedback\">\n                                                                                        <small>the REST address port can't be empty and only pure integer is supported!</small> \n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"addressPath\" class=\"col-md-2 col-form-label\" required>Path</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <app-device-core-command-combo-list [validate]=\"true\" (cmdMethodEvent)=\"onCmdMethodSelected($event,restindex)\" (commandSelectedEvent)=\"onCommandSelected($event,restindex)\"></app-device-core-command-combo-list>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div class=\"form-group row\">\n                                                                                <label for=\"requestBody\" class=\"col-md-2 col-form-label\" required>RequestBody</label>\n                                                                                <div class=\"col-md-10\">\n                                                                                    <input type=\"text\" class=\"form-control\" id=\"requestBody_{{restindex}}\" name=\"requestBody_{{restindex}}\" [(ngModel)]=\"rest.dataTemplate\">\n                                                                                </div>\n                                                                            </div>\n                                                                        </form>\n                                                                    </ng-template>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <button type=\"button\" class=\"btn btn-success\" (click)=\"addRestTab('')\">\n                                                <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add another Rest HTTP\n                                                Server\n                                            </button>\n                                        </div>\n                                    </div>\n\n                                    <div id=\"mqtt_action_tab\" [hidden]=\"!showMqttTabs\">\n                                        <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                        <div id=\"mqtt_tabs\">\n                                            <div *ngFor=\"let mqtt of mqttModelList, let mqttindex = index\">\n                                                <div id=\"mqtt_{{mqttindex}}\">\n                                                    <div class=\"col-md-10\">\n                                                        <div class=\"card\">\n                                                            <div class=\"card-header\">\n                                                                MQTT broker {{mqttindex+1}}\n                                                                <span class=\"badge mr-2 badge-danger\" role=\"button\" (click)=\"removeMqttTab(mqttindex);\"><i\n                                                                    class=\"fa fa-trash-o\"\n                                                                    aria-hidden=\"true\"></i>&nbsp;Delete</span>\n                                                            </div>\n                                                            <div class=\"card-body\">\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Server</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='The Server is mqtt server address, like tcp://127.0.0.1:1883'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"server_{{mqttindex}}\" name=\"server_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.server\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Topic</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"mqtttopic_{{mqttindex}}\" name=\"mqtt_topic_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.topic\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">ClientId</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"clientId_{{mqttindex}}\" name=\"clientId_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.clientId\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">ProtocoVersion</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='Default value is 3.1.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"protocolVersion_{{mqttindex}}\"\n                                                                            name=\"protocolVersion_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.protocolVersion\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">Username</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"username_{{mqttindex}}\" name=\"username_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.username\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Password</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"password_{{mqttindex}}\" name=\"password_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.password\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Cert Path</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='keys/***.pem'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"certificationPath_{{mqttindex}}\"\n                                                                            name=\"certificationPath_{{mqttindex}}\" [(ngModel)]=\"mqtt.certificationPath\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">privateKeyPath</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='keys/***.pem.key'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"privateKeyPath_{{mqttindex}}\" name=\"privateKeyPath_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.privateKeyPath\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">InsecureSkipVerify</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <select class=\"form-control\"\n                                                                            id=\"insecureSkipVerify_{{mqttindex}}\"\n                                                                            name=\"insecureSkipVerify_{{mqttindex}}\" [(ngModel)]=\"mqtt.insecureSkipVerify\">\n                                                                            <option value=\"true\">true</option>\n                                                                            <option value=\"false\" selected=\"\">false</option>\n                                                                        </select>\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">retained</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <select class=\"form-control\" id=\"retained_{{mqttindex}}\"\n                                                                            name=\"retained_{{mqttindex}}\" [(ngModel)]=\"mqtt.retained\">\n                                                                            <option value=\"true\">true</option>\n                                                                            <option value=\"false\" selected=\"\">false</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Qos</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='QoS for message delivery.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"qos_{{mqttindex}}\" name=\"qos_{{mqttindex}}\"\n                                                                            [(ngModel)]=\"mqtt.qos\">\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <h5 class=\"page-header\"></h5>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button type=\"button\" class=\"btn btn-success\" (click)=\"addMqttTab('')\">\n                                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add another MQTT broker\n                                        </button>\n                                    </div>\n\n                                    <div id=\"edgex_action_tab\" [hidden]=\"!showEdgexTabs\">\n                                        <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                        <div id=\"edgex_tabs\">\n                                            <div *ngFor=\"let edgex of edgexModelList, let edgexindex = index\">\n                                                <div id=\"edgex_{{edgexindex}}\">\n                                                    <div class=\"col-md-10\">\n                                                        <div class=\"card\">\n                                                            <div class=\"card-header\">\n                                                                EdgeX message bus {{edgexindex+1}}\n                                                                <span class=\"badge mr-2 badge-danger\" role=\"button\" (click)=\"removeEdgeXTab(edgexindex);\"><i\n                                                                    class=\"fa fa-trash-o\"\n                                                                    aria-hidden=\"true\"></i>&nbsp;Delete</span>\n                                                            </div>\n                                                            <div class=\"card-body\">\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Protocol</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='Default value tcp.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"protocol_{{edgexindex}}\" name=\"protocol_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.protocol\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Host</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"host_{{edgexindex}}\" name=\"host_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.host\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">Port</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"port_{{edgexindex}}\" name=\"port_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.port\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 control-label\">Topic</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"edgextopic_{{edgexindex}}\" name=\"edgex_topic_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.topic\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 control-label\">Content Type</label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"contentType_{{edgexindex}}\" name=\"contentType_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.contentType\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Metadata</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='A field name that allows user to specify a field name of SQL select clause.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"metadata_{{edgexindex}}\" name=\"metadata_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.metadata\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Device Name</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='To specify the device name in the event structure that are sent from Kuiper.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"deviceName_{{edgexindex}}\" name=\"deviceName_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.deviceName\">\n                                                                    </div>\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Type</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='zero or mqtt, and zero is the default value.'></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-3\">\n                                                                        <input type=\"text\" class=\"form-control\"\n                                                                            id=\"edgextype_{{edgexindex}}\" name=\"edgex_type_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.type\">\n                                                                    </div>\n                                                                </div>\n                                                                <div class=\"form-group row\">\n                                                                    <label class=\"col-md-2 col-form-label\">\n                                                                        <span class=\"mr-2\">Optional</span> \n                                                                        <span class=\"fa fa-question-circle-o fa-lg\" role=\"button\" data-html=\"true\" data-animation=\"true\"  data-trigger=\"focus\" data-toggle=\"popover\" title=\"format tips\" \n                                                                        data-content='If mqtt message bus type is specified, then some optional values can be specified. '></span>\n                                                                    </label>\n                                                                    <div class=\"col-md-8\">\n                                                                        <textarea class=\"form-control\" rows=\"4\"\n                                                                            id=\"edgexParameters_{{edgexindex}}\"\n                                                                            name=\"edgexParameters_{{edgexindex}}\"\n                                                                            [(ngModel)]=\"edgex.optional\"></textarea>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <h5 class=\"page-header\"></h5>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button type=\"button\" class=\"btn btn-success\" (click)=\"addEdgeXTab('')\">\n                                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;Add another EdgeX message\n                                            bus\n                                        </button>\n                                    </div>\n                                    <div id=\"log_actions_tabs\" [hidden]=\"!chooseActionLog\">\n                                        <hr width=\"100%\" color=\"#987cb9\" size=1>\n                                        <h5 class=\"text-info\"> <i class=\"fa fa-info-circle\"></i> this log in action doesn't need to set any parameters. </h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rule-engine',\n  templateUrl: './rule-engine.component.html',\n  styleUrls: ['./rule-engine.component.css']\n})\nexport class RuleEngineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./stream-center\" routerLinkActive=\"active\">Stream</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./rules-center\" routerLinkActive=\"active\">Rules</a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rules-center',\n  templateUrl: './rules-center.component.html',\n  styleUrls: ['./rules-center.component.css']\n})\nexport class RulesCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Stream } from '../../../contracts/kuiper/stream';\nimport { RuleEngineService } from '../../../services/rule-engine.service';\nimport { MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-stream-list',\n  templateUrl: './stream-list.component.html',\n  styleUrls: ['./stream-list.component.css']\n})\nexport class StreamListComponent implements OnInit {\n\n  streamTemp?: Stream;\n  streamTempStr?: string;\n  streamTempShow: boolean = false;\n  streamList: Stream[] = [];\n  selectedStream: string[] = [];\n  isCheckedAll: boolean = false;\n  addStreamSimple: string = '';\n\n  constructor(\n    private ruleSvc: RuleEngineService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n        this.getStreamList()\n    });\n  }\n\n  getStreamList() {\n    this.ruleSvc.allStreams().subscribe((data: Stream[]) => { this.streamList = data; });\n  }\n\n  refresh() {\n    this.ruleSvc.allStreams().subscribe((data: Stream[]) => {\n      this.streamList = data;\n      this.msgSvc.success('refresh');\n    });\n  }\n  \n  toEditStream() {\n    this.router.navigate(['../edit-stream'], {\n      relativeTo: this.route,\n      queryParams: {\n        'streamName': this.streamList[0]\n      }\n    });\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n      this.ruleSvc.deleteOneStreamById(this.streamList[0].toString()).subscribe(() => {\n        this.msgSvc.success('delete success!');\n      },error =>{\n       if(error.status ==200 && error.statusText ==\"OK\"){\n        this.msgSvc.success('delete success!');\n       }\n      });\n      this.streamList = [];\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    let self = this;\n    if (checkbox.checked) {\n      this.selectedStream = [];\n      this.streamList.forEach(function (item) {\n        self.selectedStream.push(item.toString());\n        self.isChecked(item);\n      });\n      this.isCheckedAll = true;\n      return\n    }\n    this.isCheckedAll = false;\n    this.selectedStream = [];\n    this.streamList.forEach(function (item) {\n      self.isChecked(item);\n    });\n\n  }\n\n  isChecked(name: any): boolean {\n    return this.selectedStream.findIndex(v => v === name) >= 0;\n  }\n\n  selectOne(event: any, name: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedStream.push(name);\n      if (this.selectedStream.length === this.streamList.length) {\n        this.isCheckedAll = true;\n      }\n      return\n    }\n    this.isCheckedAll = false;\n    this.isChecked(name);\n    this.selectedStream.splice(this.selectedStream.indexOf(name), 1)\n\n  }\n\n  streamDetail(name: any){\n    this.ruleSvc.findStreamByName(name).subscribe((data: Stream) => {\n      this.streamTempStr = JSON.stringify(data, null, 3);\n      $(\"#streamDetailDialog\").modal('show');\n    });\n  }\n}\n","\n<ul class=\"list-group p-0\">\n    <div *ngIf=\"streamList.length != 0\">\n    </div>\n    <div *ngIf=\"streamList.length == 0\">\n        <li class=\"list-group-item list-group-item-action list-group-item-light\">\n            <div class=\"media\">\n                <div class=\"media-body\">\n                    <div class=\"mt-0 mb-1\" style=\"text-align: center;\">\n                        <h5 class=\"d-inline mr-3 align-middle text-dark\">\n                            <button type=\"button\" class=\"btn btn-info btn-lg\" routerLink=\"../add-stream\">\n                                <i class=\"fa fa-plus mr-1\"></i>\n                                <span>You don't have a stream yet. Please click this button to create a stream for the current edgex.</span> \n                            </button>\n                        </h5>\n                    </div>\n                </div>\n            </div>\n        </li>\n    </div>\n    <li *ngFor=\"let stream of streamList\" class=\"list-group-item list-group-item-action list-group-item-light\">\n        <div class=\"media\">\n            <div class=\"align-self-center mr-3\">\n                <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n            </div>\n            <div class=\"media-body\">\n                <div class=\"mt-0 mb-1\">\n                    <h5 class=\"d-inline mr-3 align-middle text-dark\">{{stream}}</h5>\n                </div>\n                <div>\n                    <span class=\"badge badge-info mr-3\" role=\"button\" (click)=\"streamDetail(stream)\">{{stream}} Details</span>\n\n                    <span class=\"badge badge-secondary float-right\" role=\"button\" (click)=\"deleteConfirm()\"  style=\"margin-left: 1%;\"> <i class=\"fa fa-trash mr-1\"></i> Delete</span>\n                    <span class=\"badge badge-success float-right\" role=\"button\" (click)=\"toEditStream()\"> <i class=\"fa fa-edit mr-1\"></i> Edit</span>\n                </div>\n            </div>\n        </div>\n    </li>\n</ul>\n\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning\"></i>\n                    Warning\n                </h5>  \n            </div>\n            <div class=\"modal-body\">\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"modal fade\" id=\"streamDetailDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"ruleDetailDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-primary\" id=\"ruleDetailDialogLabel\">\n                    Stream Details\n                </h5>\n            </div>\n            <div class=\"modal-body\">\n                <pre class=\"mt-2 bg-secondary p-2 text-light rounded\">{{streamTempStr}}</pre>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { RuleEngineRoutingModule } from './rule-engine-routing.module';\nimport { StreamListComponent } from './stream/stream-list/stream-list.component';\nimport { StreamCenterComponent } from './stream/stream-center/stream-center.component';\nimport { AddStreamComponent } from './stream/add-stream/add-stream.component';\nimport { EditStreamComponent } from './stream/edit-stream/edit-stream.component';\nimport { RuleEngineComponent } from './rule-engine.component';\nimport { RulesListComponent } from './rules/rules-list/rules-list.component';\nimport { RulesCenterComponent } from './rules/rules-center/rules-center.component';\nimport { AddRulesComponent } from './rules/add-rules/add-rules.component';\nimport { EditRulesComponent } from './rules/edit-rules/edit-rules.component';\nimport { CommandModule } from '../command/command.module';\n\n@NgModule({\n  declarations: [RuleEngineComponent, StreamListComponent, StreamCenterComponent, AddStreamComponent, EditStreamComponent, RulesListComponent, RulesCenterComponent, AddRulesComponent, EditRulesComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RuleEngineRoutingModule,\n    CommandModule\n  ]\n})\nexport class RuleEngineModule { }\n"],"sourceRoot":"webpack:///"}