{"version":3,"sources":["./src/app/metadata/metadata.component.ts","./src/app/metadata/metadata.component.html","./src/app/metadata/provision-watcher/provision-watcher-list/provision-watcher-list.component.ts","./src/app/metadata/provision-watcher/provision-watcher-list/provision-watcher-list.component.html","./src/app/metadata/provision-watcher/provision-watcher-center/provision-watcher-center.component.ts","./src/app/metadata/provision-watcher/provision-watcher-center/provision-watcher-center.component.html","./src/app/metadata/device-service/device-service-list/device-service-list.component.ts","./src/app/metadata/device-service/device-service-list/device-service-list.component.html","./src/app/metadata/metadata-routing.module.ts","./src/app/metadata/device-service/device-service-media-list/device-service-media-list.component.ts","./src/app/metadata/device-service/device-service-media-list/device-service-media-list.component.html","./src/app/metadata/device/device-list/device-list.component.ts","./src/app/metadata/device/device-list/device-list.component.html","./src/app/metadata/profile/device-profile-center/device-profile-center.component.ts","./src/app/metadata/profile/device-profile-center/device-profile-center.component.html","./src/app/metadata/provision-watcher/add-provision-watcher/add-provision-watcher.component.ts","./src/app/metadata/provision-watcher/add-provision-watcher/add-provision-watcher.component.html","./src/app/metadata/profile/edit-profile/edit-profile.component.ts","./src/app/metadata/profile/edit-profile/edit-profile.component.html","./src/app/metadata/provision-watcher/edit-provision-watcher/edit-provision-watcher.component.ts","./src/app/metadata/provision-watcher/edit-provision-watcher/edit-provision-watcher.component.html","./src/app/metadata/profile/add-profile/add-profile.component.ts","./src/app/metadata/profile/add-profile/add-profile.component.html","./src/app/metadata/device/add-device/add-device.component.ts","./src/app/metadata/device/add-device/add-device.component.html","./src/app/metadata/device/edit-device/edit-device.component.ts","./src/app/metadata/device/edit-device/edit-device.component.html","./src/app/metadata/metadata.module.ts","./src/app/metadata/device/device-center/device-center.component.ts","./src/app/metadata/device/device-center/device-center.component.html","./src/app/metadata/profile/device-profile-list/device-profile-list.component.ts","./src/app/metadata/profile/device-profile-list/device-profile-list.component.html"],"names":[],"mappings":"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","file":"metadata-metadata-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metadata',\n  templateUrl: './metadata.component.html',\n  styleUrls: ['./metadata.component.css']\n})\nexport class MetadataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-tabs card-header-tabs font-weight-bold\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link \" routerLink=\"./device-service-list\" routerLinkActive=\"active\">Device Service</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./device-center\" routerLinkActive=\"active\">Device</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./device-profile-center\" routerLinkActive=\"active\">Device Profile</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"./provision-watcher-center\" routerLinkActive=\"active\">Provision Watcher</a>\n          </li>\n      </ul>\n    </div>\n    <div class=\"card-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provision-watcher-list',\n  templateUrl: './provision-watcher-list.component.html',\n  styleUrls: ['./provision-watcher-list.component.css']\n})\nexport class ProvisionWatcherListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>provision-watcher-list works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-provision-watcher-center',\n  templateUrl: './provision-watcher-center.component.html',\n  styleUrls: ['./provision-watcher-center.component.css']\n})\nexport class ProvisionWatcherCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>provision-watcher-center works!</p>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { DeviceService } from '../../../contracts/v2/device-service';\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MultiDeviceServiceResponse } from '../../../contracts/v2/responses/device-service-response';\n\n@Component({\n  selector: 'app-device-service-list',\n  templateUrl: './device-service-list.component.html',\n  styleUrls: ['./device-service-list.component.css']\n})\nexport class DeviceServiceListComponent implements OnInit {\n\n  @Output() singleDeviceSvcSelectedEvent = new EventEmitter<DeviceService>();\n  deviceServiceList: DeviceService[] = [];\n  @Input() deviceSvcSelected?: DeviceService;\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(private metaSvc: MetadataService) { }\n\n  ngOnInit(): void {\n    this.findAllDeviceSvcPagination();\n  }\n\n  findAllDeviceSvcPagination() {\n    this.metaSvc\n    .findAllDeviceServicesPagination(this.pageOffset, this.pageLimit)\n    .subscribe((resp: MultiDeviceServiceResponse) => {\n      this.deviceServiceList = resp.services;\n    })\n  }\n\n  onSingleDeviceSvcSelectedEmitter() {\n    this.singleDeviceSvcSelectedEvent.emit(this.deviceSvcSelected);\n  }\n\n  isSvcChecked(name: string): boolean {\n    return this.deviceSvcSelected?.name === name\n  }\n\n  selectOneSvc(event: any, name: string) {\n    const checkbox = event.target;\n    let self = this;\n    if (checkbox.checked) {\n      this.deviceServiceList.forEach(function (svc) {\n        if (svc.name === name) {\n          self.deviceSvcSelected = svc;\n        }\n      });\n    } else {\n      this.deviceSvcSelected = undefined;\n    }\n    this.onSingleDeviceSvcSelectedEmitter();\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findAllDeviceSvcPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.findAllDeviceSvcPagination();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.findAllDeviceSvcPagination();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n <div class=\"card\">\n     <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list mr-2 text-danger\"></i>\n        <span>Device Service List</span>\n     </div>\n     <div class=\"card-body p-0\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Labels</th>\n                        <th scope=\"col\">AdminState</th>\n                        <!-- <th scope=\"col\">OperatingState</th> -->\n                        <th scope=\"col\">Created</th>\n                        <th scope=\"col\">Modified</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let svc of deviceServiceList\" [class.table-active]=\"isSvcChecked(svc.name)\">\n                        <td><input type=\"checkbox\" role=\"button\" [checked]=\"isSvcChecked(svc.name)\" (click)=\"selectOneSvc($event,svc.name)\"></td>\n                        <td>{{svc.id}}</td>\n                        <td>{{svc.name}}</td>\n                        <td>{{svc.description}}</td>\n                        <td>{{svc.labels}}</td>\n                        <td>{{svc.adminState}}</td>\n                        <!-- <td>{{svc.operatingState}}</td> -->\n                        <td>{{svc.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{svc.modified | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n     </div>\n     <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\">items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"form-control\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\"> <i class=\"fa fa-angle-double-left\"></i> Previous</button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceServiceList.length\">Next <i class=\"fa fa-angle-double-right\"></i></button>\n                </li>\n            </ul>\n        </nav>\n     </div>\n </div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MetadataComponent } from './metadata.component';\nimport { DeviceServiceMediaListComponent } from './device-service/device-service-media-list/device-service-media-list.component';\n\nimport { DeviceCenterComponent } from './device/device-center/device-center.component';\nimport { DeviceListComponent } from './device/device-list/device-list.component';\nimport { AddDeviceComponent } from './device/add-device/add-device.component';\nimport { EditDeviceComponent } from './device/edit-device/edit-device.component';\n\nimport { DeviceProfileCenterComponent } from './profile/device-profile-center/device-profile-center.component';\nimport { DeviceProfileListComponent } from './profile/device-profile-list/device-profile-list.component';\nimport { AddProfileComponent } from './profile/add-profile/add-profile.component';\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\n\nimport { ProvisionWatcherCenterComponent } from './provision-watcher/provision-watcher-center/provision-watcher-center.component';\nimport { ProvisionWatcherListComponent } from './provision-watcher/provision-watcher-list/provision-watcher-list.component';\nimport { AddProvisionWatcherComponent } from './provision-watcher/add-provision-watcher/add-provision-watcher.component';\nimport { EditProvisionWatcherComponent } from './provision-watcher/edit-provision-watcher/edit-provision-watcher.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MetadataComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'device-service-list',\n        pathMatch: 'full',\n      },\n      {\n        path: 'device-service-list',\n        component: DeviceServiceMediaListComponent,\n      },\n      {\n        path: 'device-center',\n        component: DeviceCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'device-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'device-list',\n            component: DeviceListComponent,\n          },\n          {\n            path: 'add-device',\n            component: AddDeviceComponent,\n          },\n          {\n            path: 'edit-device',\n            component: EditDeviceComponent,\n          }\n        ]\n      },\n      {\n        path: 'device-profile-center',\n        component: DeviceProfileCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'device-profile-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'device-profile-list',\n            component: DeviceProfileListComponent\n          },\n          {\n            path: 'edit-profile',\n            component: EditProfileComponent\n          },\n          {\n            path: 'add-profile',\n            component: AddProfileComponent\n          }\n        ]\n      },\n      {\n        path: 'provision-watcher-center',\n        component: ProvisionWatcherCenterComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'provision-watcher-list',\n            pathMatch: 'full',\n          },\n          {\n            path: 'provision-watcher-list',\n            component: ProvisionWatcherListComponent\n          },\n          {\n            path: 'edit-provision-watcher',\n            component: EditProvisionWatcherComponent\n          },\n          {\n            path: 'add-provision-watcher',\n            component: AddProvisionWatcherComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MetadataRoutingModule { }\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { MetadataService } from '../../../services/metadata.service';\nimport { DeviceService } from '../../../contracts/v2/device-service';\nimport { MultiDeviceServiceResponse } from '../../../contracts/v2/responses/device-service-response';\nimport { MultiDeviceResponse } from '../../../contracts/v2/responses/device-response';\nimport {  MessageService } from '../../../message/message.service';\n\n@Component({\n  selector: 'app-device-service-media-list',\n  templateUrl: './device-service-media-list.component.html',\n  styleUrls: ['./device-service-media-list.component.css']\n})\nexport class DeviceServiceMediaListComponent implements OnInit {\n\n  deviceServiceList: DeviceService[] = [];\n  deviceSvcSelected?: DeviceService;\n  associatedDevices = new Map<string, string>();\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.metaSvc.allDeviceServices().subscribe((data: MultiDeviceServiceResponse) => {\n      this.deviceServiceList = data.services;\n      this.deviceServiceList.forEach((svc) => {\n        this.metaSvc\n        .findDevicesByServiceName(0, 20, svc.name)\n        .subscribe((data: MultiDeviceResponse) => { \n          this.associatedDevices.set(svc.name, data.devices.length > 20 ? '20+' : String(data.devices.length)) \n        });\n      });\n    })\n  }\n\n  getSvcPort(baseURL: string): string {\n    return (new URL(baseURL)).port\n  }\n\n  edit(svc: DeviceService) {\n    this.deviceSvcSelected = svc;\n  }\n\n  updateSvc() {\n    this.metaSvc\n    .updateDeviceService(this.deviceSvcSelected as DeviceService)\n    .subscribe(() => {\n      this.msgSvc.success(\"update device service\",`name: ${this.deviceSvcSelected?.name}`);\n      this.deviceSvcSelected = undefined;\n    })\n  }\n\n  associatedDevicesSkip(svcName: string) {\n    let navParam: NavigationExtras = {\n      queryParams: { 'svcName': svcName },\n      relativeTo: this.route\n    }\n    this.router.navigate(['../device-center'], navParam)\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<ul class=\"list-group p-0\">\n    <li *ngFor=\"let svc of deviceServiceList\" class=\"list-group-item list-group-item-action list-group-item-light\">\n        <div class=\"media\">\n            <div class=\"align-self-center mr-3\">\n                <i class=\"fa fa-tags fa-2x text-secondary\"></i>  \n            </div>\n            <div class=\"media-body\">\n                <div class=\"mt-0 mb-1\">\n                    <h5 class=\"d-inline mr-3 align-middle text-dark\">{{svc.name}}</h5>\n                    <!-- <span class=\"float-right\">\n                        <i class=\"fa fa-calendar align-baseline text-primary\"></i><span class=\"badge badge-light align-baseline\"> {{svc.created | date:'yyyy-MM-dd hh:mm:ss'}}</span>\n                    </span> -->\n                </div>\n                <p *ngIf=\"svc.description; else nodesc\">{{svc.description}}</p>\n                <ng-template #nodesc> <p class=\"my-1\">no description.</p> </ng-template>\n                <div>\n                    <span class=\"badge badge-info mr-3\">Port {{getSvcPort(svc.baseAddress)}}</span>\n                    <span [ngSwitch]=\"svc.adminState\">\n                        <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success mr-3\">{{svc.adminState}}</span> \n                        <span *ngSwitchDefault class=\"badge badge-danger mr-3\">{{svc.adminState}}</span> \n                    </span>\n                   <!-- <span [ngSwitch]=\"svc.operatingState\">\n                        <span *ngSwitchCase=\"'ENABLED'\" class=\"badge badge-success mr-3\">{{svc.operatingState}}</span>\n                        <span *ngSwitchDefault class=\"badge badge-danger mr-3\">{{svc.operatingState}}</span>\n                   </span> -->\n\n                    <a *ngIf=\"associatedDevices.size\" class=\"badge badge-primary\" role=\"button\" (click)=\"associatedDevicesSkip(svc.name)\"><i class=\"fa fa-sitemap\"></i> Associated Devices &nbsp; {{associatedDevices.get(svc.name)}}</a>\n                    <span class=\"badge badge-secondary float-right\" role=\"button\" (click)=\"edit(svc)\"> <i class=\"fa fa-cog\"></i> Setting</span>\n                </div>\n            </div>\n        </div>\n    </li>\n</ul>\n\n<div *ngIf=\"deviceSvcSelected\" class=\"card mt-3\">\n    <div class=\"card-header\">\n        <i class=\"fa fa-edit mr-1 text-danger\"></i>\n        <span>edit {{ deviceSvcSelected.name }}</span>\n        <button class=\"btn btn-success btn-sm float-right\" (click)=\"updateSvc()\">Save</button>\n    </div>\n    <div class=\"card-body\">\n        <form>\n            <div class=\"form-group row\">\n                <label for=\"deviceDesc\" class=\"col-md-2 col-form-label\">Description</label>\n                <div class=\"col-md-10\">\n                  <input type=\"text\" class=\"form-control\" name=\"deviceSvcDescription\" [(ngModel)]=\"deviceSvcSelected.description\">\n                </div>\n              </div>\n            <div class=\"form-group row\">\n                <label for=\"adminState\" class=\"col-md-2 col-form-label\" >AdminState</label>\n                <div class=\"col-md-10\">\n                    <select class=\"form-control\"  name=\"deviceSvcAdminState\" [(ngModel)]=\"deviceSvcSelected.adminState\">\n                        <option value=\"UNLOCKED\">UNLOCKED</option>\n                        <option value=\"LOCKED\">LOCKED</option>\n                    </select>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { CommandService } from '../../../services/command.service';\nimport { MessageService } from '../../../message/message.service';\nimport { DeviceResponse,MultiDeviceResponse } from '../../../contracts/v2/responses/device-response';\nimport { Device } from '../../../contracts/v2/device';\nimport { CoreCommand } from '../../../contracts/v2/core-command';\nimport { AutoEvent } from '../../../contracts/v2/auto-event';\nimport { DeviceProfile } from '../../../contracts/v2/device-profile';\nimport { DeviceProfileResponse,MultiDeviceProfileResponse } from '../../../contracts/v2/responses/device-profile-response';\nimport { DeviceCoreCommandResponse } from '../../../contracts/v2/responses/device-core-command-response';\nimport { EventResponse } from '../../../contracts/v2/responses/event-response';\nimport { BaseReading } from '../../../contracts/v2/reading';\nimport { CoreCommandParameter } from '../../../contracts/v2/core-command';\nimport { BaseResponse } from '../../../contracts/v2/common/base-response';\n// import * as cbor from 'cbor';\n\n@Component({\n  selector: 'app-device-list',\n  templateUrl: './device-list.component.html',\n  styleUrls: ['./device-list.component.css']\n})\nexport class DeviceListComponent implements OnInit {\n\n  deviceList: Device[] = [];\n  associatedSvcName: string = '';\n  associatedProfileName: string = '';\n\n  selectedDevice: Device[] = [];\n  associateDeviceProfile?: DeviceProfile;\n  isCheckedAll: boolean = false;\n  autoEvents?: AutoEvent[];\n  associatedAutoEventsDeviceName?: string;\n  deviceCoreCommand?: CoreCommand[];\n  associatedCmdDeviceName?: string;\n  associatedCmdDeviceId?: string;\n  selectedCmd: CoreCommand = {} as CoreCommand;\n  selectedCmdSetParams: CoreCommandParameter[] = [];\n  // selectedCmdSetParamsMap = new Map<string, any>();\n\n  cmdBinaryResponse: any;\n  cmdBinaryResponseURL?: string;\n  cmdGetResponse: any;\n  cmdGetResponseRaw: any;\n  cmdSetResponse: any;\n  cmdSetResponseRaw: any;\n\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n\n  constructor(\n    private metaSvc: MetadataService,\n    private cmdSvc: CommandService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      if (params['svcName']) {\n        this.associatedSvcName = params['svcName'];\n        this.getDeviceListByAssociatedSvc(this.associatedSvcName);\n        return\n      } else if (params['profileName']) {\n        this.associatedProfileName = params['profileName'];\n        this.getDeviceListByAssociatedProfile(this.associatedProfileName);\n        return\n      } else {\n        this.associatedSvcName = '';\n        this.associatedProfileName = '';\n        this.getDeviceListPagination();\n      }\n    });\n  }\n\n  renderPopoverComponent() {\n    setTimeout(() => {\n      $('[data-toggle=\"popover\"]').popover({\n        trigger: 'hover'\n      });\n    }, 250);\n  }\n\n  \n  getDeviceList() {\n    if (this.associatedSvcName !== '') {\n      this.getDeviceListByAssociatedSvc(this.associatedSvcName);\n      return\n    }\n    if (this.associatedProfileName !== '') {\n      this.getDeviceListByAssociatedProfile(this.associatedSvcName);\n      return\n    }\n    this.getDeviceListPagination();\n  }\n\n  getDeviceListByAssociatedSvc(svcName: string) {\n    this.metaSvc.findDevicesByServiceName(this.pageOffset, this.pageLimit, svcName).subscribe((data: MultiDeviceResponse) => this.deviceList = data.devices);\n  }\n\n  getDeviceListByAssociatedProfile(profileName: string) {\n    this.metaSvc.findDevicesByProfileName(this.pageOffset, this.pageLimit, profileName).subscribe((data: MultiDeviceResponse) => this.deviceList = data.devices);\n  }\n\n  getDeviceListPagination() {\n    this.metaSvc.allDevicesPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiDeviceResponse) => {\n      this.deviceList = data.devices;\n    });\n  }\n\n  refresh() {\n    this.associatedProfileName = '';\n    this.associatedSvcName = '';\n    this.metaSvc.allDevicesPagination(0, this.pageLimit).subscribe((data: MultiDeviceResponse) => {\n      this.deviceList = data.devices;\n      this.msgSvc.success('refresh');\n      this.resetPagination();\n    });\n  }\n\n  edit() {\n    this.router.navigate(['../edit-device'], {\n      relativeTo: this.route,\n      queryParams: { 'deviceName': this.selectedDevice[0].name }\n    })\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n    this.selectedDevice.forEach((d,i) => {\n      this.metaSvc.deleteOneDeviceByName(d.name).subscribe(() => {\n        this.selectedDevice.splice(i,1);\n        this.deviceList.forEach((device: Device, index) => {\n          if (device.id === d.id) {\n            this.deviceList.splice(index, 1);\n            this.msgSvc.success('remove device ', ` Name: ${device.name}`);\n            return\n          }\n        });\n      });\n      \n    });\n    //reset coreCommand to hide coreCommand card\n    this.associatedCmdDeviceName = undefined;\n    //reset to hide autoEvents card\n    this.associatedAutoEventsDeviceName = undefined;\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  checkAutoEvent(device: Device) {\n    this.associatedAutoEventsDeviceName = device.name;\n    this.autoEvents = device.autoEvents;\n\n    //hide commands list when check auto evnets\n    this.associatedCmdDeviceName = \"\";\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedDevice = [];\n      this.deviceList.forEach(d => {\n        this.selectedDevice.push(d);\n        this.isChecked(d.id);\n      });\n      this.isCheckedAll = true;\n      return\n    }\n    this.isCheckedAll = false;\n    this.selectedDevice = [];\n    this.deviceList.forEach(d => {\n      this.isChecked(d.id);\n    });\n\n  }\n\n  isChecked(id: string): boolean {\n    return this.selectedDevice.findIndex(v => v.id === id) >= 0;\n  }\n\n  selectOne(event: any, d: Device) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.selectedDevice.push(d);\n      if (this.selectedDevice.length === this.deviceList.length) {\n        this.isCheckedAll = true;\n      }\n      return\n    }\n    this.isCheckedAll = false;\n    this.isChecked(d.id);\n    this.selectedDevice.splice(this.selectedDevice.indexOf(d), 1)\n  }\n\n  checkDeviceCommand(device: Device) {\n    this.resetResponse();\n\n    this.metaSvc\n    .findProfileByName(device.profileName)\n    .subscribe((data:DeviceProfileResponse) => this.associateDeviceProfile = data.profile);\n\n    this.cmdSvc.findDeviceAssociatedCommnadsByDeviceName(device.name).subscribe((data: DeviceCoreCommandResponse) => {\n      //hide auto events list when check a new one device command\n      this.associatedAutoEventsDeviceName = \"\";\n\n      this.associatedCmdDeviceName = data.deviceCoreCommand.deviceName;\n      this.associatedCmdDeviceId = device.id;\n      this.deviceCoreCommand = data.deviceCoreCommand.coreCommands;\n      //init selectedCmd for first one\n      this.selectedCmd = this.deviceCoreCommand[0];\n      this.selectedCmdSetParams = this.selectedCmd.parameters;\n    })\n  }\n\n  selectCmd(cmd: CoreCommand) {\n    // this.renderPopoverComponent();\n    this.selectedCmd = cmd;\n    this.selectedCmdSetParams = this.selectedCmd.parameters;\n    this.resetResponse();\n  }\n\n  resetResponse() {\n    this.cmdGetResponse = \"\";\n    this.cmdGetResponseRaw = \"\";\n\n    this.cmdSetResponse = \"\";\n    this.cmdSetResponseRaw = \"\";\n\n    this.cmdBinaryResponse = true;\n    this.cmdBinaryResponseURL = \"\";\n  }\n\n  issueGetCmd() {\n    let isBinary = false;\n\n    // this.associateDeviceProfile?.deviceResources.forEach(resource => {\n    //   if (resource.name === this.selectedCmd?.name) {\n    //     this.associateDeviceProfile?.deviceCommands.forEach(dc => {\n    //       if (command.name === dc.name) {\n    //         this.associateDeviceProfile?.deviceResources.forEach(dr => {\n    //           if (dc.get[0].deviceResource == dr.name) {\n    //             if (dr.properties.value.type === 'Binary') {\n    //               isBinary = true;\n    //               return\n    //             }\n    //           }\n    //           return\n    //         });\n    //       }\n    //       return\n    //     });\n    //   }\n    // });\n\n    if (isBinary) {\n      this.cmdGetResponse = \"no supported preview\";\n      this.cmdGetResponseRaw = \"no supported preview\";\n      // this.cmdSvc.issueGetBinaryCmd(this.associatedCmdDeviceId as string, this.selectedCmd?.id as string)\n      //   .subscribe((data: any) => {\n      //     let result = CBOR.decode(data)\n      //     if (result.mediaType === \"image/jpeg\" ||\n      //       result.mediaType === \"image/jpg\" ||\n      //       result.mediaType === \"image/png\"\n      //     ) {\n      //       this.cmdBinaryResponse = result.binaryValue;\n      //       this.cmdBinaryResponseURL = URL.createObjectURL(this.cmdBinaryResponse);\n      //     } else {\n      //       this.cmdBinaryResponse = false;\n      //     }\n      //   })\n      return\n    }\n\n    // this.cmdSvc\n    //   .issueGetCmd(this.associatedCmdDeviceId as string, this.selectedCmd?.id as string)\n    //   .subscribe((data: any) => {\n    //     this.cmdGetResponseRaw = JSON.stringify(data, null, 3);\n    //     let result: any[] = [];\n    //     data.readings.forEach(function (reading: any) {\n    //       result.push(reading.value);\n    //     });\n    //     this.cmdGetResponse = result.join(',');\n    //   });\n\n    this.cmdSvc\n    .issueGetCmd(this.associatedCmdDeviceName as string, this.selectedCmd?.name as string)\n    .subscribe((resp: EventResponse) => {\n      this.cmdGetResponseRaw = JSON.stringify(resp.event.readings, null, 3);\n      let result: any[] = [];\n      resp.event.readings.forEach((reading: BaseReading) => {\n        result.push(reading.value);\n      });\n      this.cmdGetResponse = result.join(',');\n    })\n  }\n\n  issueSetCmd() {\n    let self = this;\n    let params: any = {};\n    this.selectedCmdSetParams?.forEach(function (p) {\n      params[p.resourceName] = $(`#${p.resourceName}`).val().trim();\n    });\n    this.cmdSvc\n    .issueSetCmd(this.associatedCmdDeviceName as string, this.selectedCmd?.name as string, params)\n    .subscribe((resp: BaseResponse) => {\n      this.cmdSetResponseRaw = JSON.stringify(resp, null, 3);\n      this.cmdSetResponse = resp.message\n    })\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.getDeviceList();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.getDeviceList();\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.getDeviceList();\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list text-danger mr-2\"></i> \n        <span *ngIf=\"associatedSvcName !== ''\"> \n            <span class=\"mr-1\">DeviceService</span>\n            <span class=\"text-danger mr-1\">{{associatedSvcName}}</span> \n            <span>Associated Device List</span>\n        </span>\n        <span *ngIf=\"associatedProfileName !== ''\"> \n            <span class=\"mr-1\">DeviceProfile</span>\n            <span class=\"text-danger mr-1\">{{associatedProfileName}}</span>\n            <span>Associated Device List</span>\n        </span>\n        <span  *ngIf=\"associatedProfileName === '' && associatedSvcName === ''\">Device List</span>\n    </div>\n    <div class=\"card-body p-0 position-relative\">\n        <div class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span><i class=\"fa fa-refresh mr-1\"></i>Refresh</span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-device\">\n                    <span><i class=\"fa fa-plus mr-1\"></i>Add</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\" [disabled]=\"selectedDevice.length !== 1\">\n                    <span><i class=\"fa fa-edit mr-1\"></i>Edit</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"selectedDevice.length === 0\">\n                    <span><i class=\"fa fa-trash mr-1\"></i>Delete</span>\n                </button>\n              </div>\n        </div>\n        <div class=\"table-responsive \">\n            <table class=\"table table-hover text-truncate \">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"><input type=\"checkbox\" role=\"button\" [checked]=\"isCheckedAll\" (click)=\"selectAll($event)\"></th>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Description</th>\n                      <th scope=\"col\">Labels</th>\n                      <th scope=\"col\">AdminState</th>\n                      <th scope=\"col\">OperatingState</th>\n                      <th scope=\"col\">Command</th>\n                      <th scope=\"col\">AutoEvents</th>\n                      <th scope=\"col\">AssociatedProfile</th>\n                      <th scope=\"col\">AssociatedService</th>\n                      \n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let device of deviceList\" [class.table-active]=\"isChecked(device.id) || associatedCmdDeviceName === device.name || associatedAutoEventsDeviceName === device.name\">\n                        <td> <input type=\"checkbox\" role=\"button\"  [checked]=\"isChecked(device.id)\" (click)=\"selectOne($event,device)\"></td>\n                        <td class=\"user-select-all\">{{device.id}}</td>\n                        <td class=\"user-select-all\">{{device.name}}</td>\n                        <td>{{device.description}}</td>\n                        <td>{{device.labels}}</td>\n                        <td>\n                            <span [ngSwitch]=\"device.adminState\">\n                                <span *ngSwitchCase=\"'UNLOCKED'\" class=\"badge badge-success\">{{device.adminState}}</span> \n                                <span *ngSwitchDefault class=\"badge badge-danger\">{{device.adminState}}</span> \n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <span [ngSwitch]=\"device.operatingState\">\n                                <span *ngSwitchCase=\"'UP'\" class=\"badge badge-success\"> {{device.operatingState}}</span> \n                                <span *ngSwitchDefault class=\"badge badge-danger\"> {{device.operatingState}}</span> \n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <span class=\"badge badge-primary text-light\" [class.badge-danger]=\"associatedCmdDeviceName === device.name\"  role=\"button\" (click)=\"checkDeviceCommand(device)\">\n                                <i class=\"fa fa-terminal font-weight-bolder\"></i>\n                            </span>\n                        </td>\n                        <td class=\"text-center\">\n                            <span class=\"badge badge-primary text-light\" [class.badge-danger]=\"associatedAutoEventsDeviceName === device.name\" role=\"button\" (click)=\"checkAutoEvent(device)\">\n                                <i class=\"fa fa-calendar-check-o font-weight-bolder\"></i>\n                            </span>\n                        </td>\n                        <td>\n                            <a routerLink=\"../../device-profile-center\" [queryParams]=\"{'profileName':device.profileName}\">{{device.profileName}}</a>\n                        </td>\n                        <td>\n                            <a routerLink=\"../../device-service-list\">{{device.serviceName}}</a> \n                        </td>\n                       \n                        <!-- <td>{{device.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{device.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\">items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"form-control\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\"> <i class=\"fa fa-angle-double-left\"></i> Previous</button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > deviceList.length\">Next <i class=\"fa fa-angle-double-right\"></i></button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n\n<div *ngIf=\"associatedAutoEventsDeviceName\">\n    <div *ngIf=\"autoEvents; else noAutoEvents\">\n        <div class=\"card mt-3\">\n            <div class=\"card-header\">\n                <span class=\"badge badge-danger text-light\">\n                    <i class=\"fa fa-calendar-check-o font-weight-bolder\"></i>\n                </span>\n                <span class=\"text-primary mx-2 font-weight-bold\"> {{associatedAutoEventsDeviceName}}</span> Associated AutoEvents\n            </div>\n            <div class=\"card-body p-0\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-hover text-truncate\">\n                        <thead class=\"thead-light\">\n                            <th scope=\"col\">Resource</th>\n                            <th scope=\"col\">Interval</th>\n                            <th scope=\"col\">Onchange</th>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let event of autoEvents\">\n                                <td>{{event.sourceName}}</td>\n                                <td><span class=\"badge badge-secondary badge-pill\">{{event.interval}}</span></td>\n                                <td><span class=\"\">{{event.onChange}}</span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #noAutoEvents>\n        <div class=\"card mt-3\">\n            <div class=\"card-header\">\n                <span class=\"badge badge-danger text-light\">\n                    <i class=\"fa fa-calendar-check-o font-weight-bolder\"></i>\n                </span>\n                <span class=\"text-primary mx-2 font-weight-bold\"> {{associatedAutoEventsDeviceName}}</span> Associated AutoEvents\n            </div>\n            <div class=\"card-body text-center\">\n                <h5 class=\"text-warning\"> <i class=\"fa fa-warning\"></i> no associated AutoEvents</h5>\n            </div>\n        </div>\n    </ng-template>\n</div>\n\n<div *ngIf=\"associatedCmdDeviceName\">\n    <div *ngIf=\"deviceCoreCommand; then hasAssociatedCommand else noAssociatedCommand\"></div>\n</div>\n\n<ng-template #hasAssociatedCommand>\n    <div class=\"card mt-3\">\n        <div class=\"card-header\">\n            <span class=\"badge badge-danger text-light\">\n                <i class=\"fa fa-terminal font-weight-bolder\"></i>\n            </span>\n            <span class=\"text-primary ml-2 font-weight-bold\">{{associatedCmdDeviceName}}</span>\n             Associated Commands\n        </div>\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-2 col-lg-2\">\n                    <div class=\"card mb-2\">\n                        <div class=\"card-header font-weight-bold\">\n                            Command Name List\n                        </div>\n                        <div class=\"card-body p-0\">\n                            <ul class=\"list-group list-group-flush\">\n                                <li *ngFor=\"let cmd of deviceCoreCommand\" role=\"button\" class=\"list-group-item list-group-item-action\" [class.list-group-item-info]='selectedCmd?.name === cmd.name' (click)=\"selectCmd(cmd)\">{{cmd.name}}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-10 col-lg-10\">\n                    <div *ngIf=\"selectedCmd\" class=\"card\">\n                        <div class=\"card-header\">\n                            <span class=\"text-primary font-weight-bold mr-2\"><i class=\"fa fa-thumb-tack text-danger mr-1\"></i> {{selectedCmd.name}} method:</span>  \n                            <span>Get and Set</span> \n                        </div>\n                        <div class=\"card-body px-2\">\n                            <div class=\"row\">\n                                <div class=\"col-md-5 col-lg-5\">\n                                    <div class=\"card mb-2\">\n                                        <div class=\"card-header\">\n                                            Get\n                                            <button *ngIf=\"selectedCmd.get\" (click)=\"issueGetCmd()\" class=\"btn btn-primary btn-sm float-right\">try</button>\n                                        </div>\n                                        <div class=\"card-body overflow-auto\">\n                                            <div *ngIf=\"selectedCmd.get; then hasGetMethod else noGetMethod\"></div>\n                                            <ng-template #hasGetMethod>\n                                                <div>\n                                                    <span class=\"badge badge-info\">Response:</span>  \n                                                    <span *ngIf=\"cmdGetResponse\" class=\"ml-2 text-primary\"> {{cmdGetResponse}}</span>\n                                                    <!-- <img *ngIf=\"cmdBinaryResponse; else noSupportedMediaType\" src=\"{{cmdBinaryResponseURL}}\">\n                                                    <ng-template #noSupportedMediaType>\n                                                        <h6 class=\"text-warning\"> <i class=\"fa fa-warning\"></i> the mediaType only supports image/jpeg, image/jpg, image/png</h6>\n                                                    </ng-template> -->\n                                                </div>\n                                                <div class=\"mt-3\">\n                                                    <span class=\"badge badge-info\">ResponseRaw:</span>\n                                                    <pre *ngIf=\"cmdGetResponseRaw\" class=\"mt-2 bg-secondary p-2 text-light rounded\">{{cmdGetResponseRaw}}</pre>\n                                                </div>\n                                            </ng-template>\n                                            <ng-template #noGetMethod>\n                                                <h6 class=\"text-warning\"> <i class=\"fa fa-warning\"></i> no Get method</h6>\n                                            </ng-template>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-7 col-lg-7\">\n                                    <div class=\"card\">\n                                        <div class=\"card-header\">\n                                            Set\n                                            <button *ngIf=\"selectedCmd.set\" (click)=\"issueSetCmd()\" class=\"btn btn-primary btn-sm float-right\">try</button>\n                                        </div>\n                                        <div class=\"card-body\">\n                                            <div *ngIf=\"selectedCmd.set; then hasSetMethod else noSetMethod\"></div>\n\n                                            <ng-template #hasSetMethod>\n                                                <div *ngIf=\"selectedCmdSetParams\" class=\"card mb-2\">\n                                                    <div class=\"card-header\">Set Parameters</div>\n                                                    <div class=\"card-body\">\n                                                        <div *ngIf=\"selectedCmd\" class=\"d-flex flex-column bd-highlight\">\n                                                            <div *ngFor=\"let p of selectedCmdSetParams\" class=\"form p-2 bd-highlight\">\n                                                                <div *ngIf=\"p.valueType == 'Bool'; else valueTypeIsNotBool\">\n                                                                    <label for=\"{{p.resourceName}}\">\n                                                                         {{p.resourceName}}\n                                                                    </label> \n                                                                    <select id=\"{{p.resourceName}}\" name=\"{{p.resourceName}}\" class=\"form-control form-control-sm\">\n                                                                        <option [ngValue]=\"false\">false</option>\n                                                                        <option [ngValue]=\"true\">true</option>\n                                                                    </select>\n                                                                </div>\n                                                                <ng-template #valueTypeIsNotBool>\n                                                                    <label for=\"{{p.resourceName}}\">{{p.resourceName}}</label>\n                                                                    <input id=\"{{p.resourceName}}\" name=\"{{p.resourceName}}\" placeholder=\"valueType: {{p.valueType}}\" class=\"form-control form-control-sm\">\n                                                                </ng-template>\n                                                                \n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                    \n                                                <div>\n                                                    <div>\n                                                        <span class=\"badge badge-info\"> Response:</span>\n                                                        <span *ngIf=\"cmdSetResponse\" class=\"ml-2 text-primary\">{{cmdSetResponse}}</span>\n                                                    </div>\n                                                    <div class=\"mt-3\">\n                                                        <span class=\"badge badge-info\"> ResponseRaw:</span>\n                                                        <pre *ngIf=\"cmdSetResponseRaw\" class=\"mt-2 bg-secondary p-2 text-light rounded\">{{cmdSetResponseRaw}}</pre>\n                                                    </div>\n                                                </div>\n                                            </ng-template>\n\n                                            <ng-template #noSetMethod>\n                                                <h6 class=\"text-warning\"> <i class=\"fa fa-warning\"></i> no Set method</h6>\n                                            </ng-template>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n<ng-template  #noAssociatedCommand>\n    <div class=\"card mt-3\">\n        <div class=\"card-header\">\n            <span class=\"badge badge-danger text-light\">\n                <i class=\"fa fa-terminal font-weight-bolder\"></i>\n            </span>\n            <span class=\"text-primary mx-1 font-weight-bold\">{{associatedCmdDeviceName}}</span>\n             Associated Commands\n        </div>\n        <div class=\"card-body text-center\">\n            <h5 class=\"text-warning\"> <i class=\"fa fa-warning\"></i> no associated commands</h5>\n        </div>\n    </div>\n</ng-template>\n\n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning\"></i>\n                    Warning\n                </h5>  \n            </div>\n            <div class=\"modal-body\">\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-device-profile-center',\n  templateUrl: './device-profile-center.component.html',\n  styleUrls: ['./device-profile-center.component.css']\n})\nexport class DeviceProfileCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-provision-watcher',\n  templateUrl: './add-provision-watcher.component.html',\n  styleUrls: ['./add-provision-watcher.component.css']\n})\nexport class AddProvisionWatcherComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-provision-watcher works!</p>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit,OnDestroy } from '@angular/core';\nimport { ActivatedRoute,Router } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit, OnDestroy {\n\n  profileYamlSource?: any;\n  codeMirrorEditor: any;\n  profileName?: string;\n\n  constructor(private metaSvc: MetadataService, \n    private msgSvc: MessageService,\n    private errSvc: ErrorService, \n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.renderYamlSource();\n    this.route.queryParams.subscribe(params => {\n      if (params['profileName']) {\n        this.profileName = params['profileName'];\n        this.metaSvc.findProfileYamlByNameViaUIBackend(params['profileName']).subscribe((data: any) => {\n          // this.profileYamlSource = data;\n          this.codeMirrorEditor.setValue(data);\n          this.codeMirrorEditor.refresh();\n        });\n      }\n    });\n  }\n\n  update() {\n    this.codeMirrorEditor.refresh();\n    this.metaSvc.updateProfileYamlContentViaUIBackend(this.codeMirrorEditor.getValue()).subscribe(data => {\n      if (this.errSvc.handleErrorForV2API(data)){\n        return\n      }\n      this.msgSvc.success('Update profile', `name: ${this.profileName}`);\n      this.router.navigate(['../device-profile-list'], { relativeTo: this.route });\n    })\n  }\n\n  renderYamlSource() {\n    let myTextarea = document.getElementById('editor-edit');\n    this.codeMirrorEditor = CodeMirror.fromTextArea(myTextarea, {\n      mode: \"yaml\",\n      theme: \"gruvbox-dark\",\n      foldGutter: true,\n      smartIndent: true,\n      showCursorWhenSelecting: true,\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"CodeMirror-lint-markers\"],\n      autofocus: true,\n      matchBrackets: true,\n      autoCloseBrackets: true,\n      styleActiveLine: true,\n      // scrollbarStyle: 'simple',\n\n      // allowDropFileTypes: ['text/plain'],\n      cursorHeight: 0.85,\n      autocorrect: true\n    });\n    this.codeMirrorEditor.setSize('auto', '600px')\n  }\n  \n  ngOnDestroy():void {\n    this.codeMirrorEditor = null;\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <span>\n            <span class=\"text-danger fa fa-edit mr-2\"></span>{{profileName}}\n        </span>\n        <span class=\"float-right\">\n            <button class=\"btn btn-primary btn-sm\" (click)=\"update()\">\n                <span><i class=\"fa fa-save mr-1\"></i>Save</span> \n            </button>\n        </span>\n    </div>\n   \n    <div class=\"card-body p-0\">\n        <textarea id=\"editor-edit\" name=\"editor\"></textarea>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-provision-watcher',\n  templateUrl: './edit-provision-watcher.component.html',\n  styleUrls: ['./edit-provision-watcher.component.css']\n})\nexport class EditProvisionWatcherComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-provision-watcher works!</p>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { ErrorService } from '../../../services/error.service';\n\n@Component({\n  selector: 'app-add-profile',\n  templateUrl: './add-profile.component.html',\n  styleUrls: ['./add-profile.component.css']\n})\nexport class AddProfileComponent implements OnInit {\n\n  profileYamlSource?: any;\n  codeMirrorEditor: any;\n  yamlFile?: File;\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private errSvc: ErrorService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.renderYamlSource()\n  }\n\n  renderYamlSource() {\n    let myTextarea = document.getElementById('editor');\n    this.codeMirrorEditor = CodeMirror.fromTextArea(myTextarea, {\n      mode: \"yaml\",\n      theme: \"gruvbox-dark\",\n      foldGutter: true,\n      smartIndent: true,\n      showCursorWhenSelecting: true,\n      lineNumbers: true,\n      lineWrapping: true,\n      gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\", \"CodeMirror-lint-markers\"],\n      autofocus: true,\n      matchBrackets: true,\n      autoCloseBrackets: true,\n      styleActiveLine: true,\n      // scrollbarStyle: 'simple',\n\n      // allowDropFileTypes: ['text/plain'],\n      cursorHeight: 0.85,\n      autocorrect: true\n\n    });\n    this.codeMirrorEditor.setSize('auto', '600px')\n    this.codeMirrorEditor.on('drop', (instance: any, event: Event) => {\n      // console.log((event as DragEvent).dataTransfer?.files)\n      this.yamlFile = (event as DragEvent).dataTransfer?.files[0];\n    });\n\n    this.codeMirrorEditor.on('paste', (instance: any, event: Event) => {\n      // console.log(event)\n      // console.log((event as DragEvent).dataTransfer?.files)\n      // this.yamlFile = (event as DragEvent).dataTransfer?.files[0];\n    });\n\n  }\n\n  submit() {\n\n    this.profileYamlSource = this.codeMirrorEditor.getValue()\n\n    // let blob = new Blob([this.profileYamlSource]);\n    // console.log(this.profileYamlSource)\n    // let formData = new FormData();\n    // // formData.set('file', this.yamlFile as File, (this.yamlFile as File).name)\n    // formData.set('file', blob, 'ssssss');\n    // this.metaSvc.uploadProfileYamlFile(formData).subscribe(() => {\n    //   this.msgSvc.success('submit');\n    //   this.router.navigate(['../device-profile-list'], { relativeTo: this.route });\n    // });\n\n    this.metaSvc.addProfileYamlByNameViaUIBackend(this.profileYamlSource).subscribe((resp: any) => {\n      if (this.errSvc.handleErrorForV2API(resp) ) {\n        return\n      }\n      this.msgSvc.success('Add profile');\n      this.router.navigate(['../device-profile-list'], { relativeTo: this.route })\n    });\n\n    // this.metaSvc.uploadProfileYamlContent(this.profileYamlSource).subscribe((data: string) => {\n    //   this.msgSvc.success('Add profile');\n    //   this.router.navigate(['../device-profile-list'], { relativeTo: this.route })\n    // });\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <span>\n            <span class=\"text-danger font-weight-bold fa fa-code mr-2\"></span>\n            <span class=\"mr-3 font-weight-bold\">Add Profile</span> \n            <span class=\"fa fa-info-circle text-success font-weight-bold\">&nbsp;drag-and-drop is enabled</span>\n        </span>\n        <span class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"submit()\">\n                <i class=\"fa fa-save mr-1\"></i>\n                <span>Submit</span> \n            </button>\n        </span>\n    </div>\n   \n    <div class=\"card-body p-0\">\n        <textarea id=\"editor\" name=\"editor\"></textarea>\n    </div>\n</div>\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { DeviceService } from '../../../contracts/v2/device-service';\nimport { MultiDeviceServiceResponse } from '../../../contracts/v2/responses/device-service-response';\nimport { Device } from '../../../contracts/v2/device';\nimport { DeviceProfile } from '../../../contracts/v2/device-profile';\n// import { MultiDeviceProfileResponse } from '../../../contracts/v2/responses/device-profile-response';\nimport { AutoEvent } from '../../../contracts/v2/auto-event';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\n\nclass MqttProtocolTemplate {\n  Schema: string = \"\";\n  Host: string = \"\";\n  Port: string = \"\";\n  User: string = \"\";\n  Password: string = \"\";\n  ClientId: string = \"\";\n  Topic: string = \"\";\n}\n\nclass ModusTCPProtocolTemplate {\n  Address: string = \"\";\n  Port: string = \"\";\n  UnitID: string = \"\";\n}\n\nclass ModusRTUProtocolTemplate {\n  Address: string = \"\";\n  UnitID: string = \"\";\n  BaudRate: string = \"\";\n  DataBits: string = \"\";\n  StopBits: string = \"\";\n  Parity: string = \"\"; // Parity: N - None, O - Odd, E - Even\n}\n\nclass AutoEventInternal {\n  interval: string = '';\n  onChange: boolean = false;\n  resource: string = '';\n  unit: string = ''\n}\n\ndeclare type protocol = {\n  [key: string]: any;\n};\n\ndeclare type properties = {\n  [key: string]: any;\n};\n\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.css']\n})\nexport class AddDeviceComponent implements OnInit {\n\n  currentStep = 0;\n  selectedClass = \"text-white rounded px-2 bg-success  font-weight-bold\";\n  noSelectedClass = \"text-white rounded px-2 bg-secondary  font-weight-bold\";\n  selectedSvc?: DeviceService;\n  selectedProfile?: DeviceProfile;\n  newDevice?: Device;\n\n  autoEventsInternal: AutoEventInternal[] = [{\n    interval: '',\n    onChange: false,\n    resource: '',\n    unit: 'ms'\n  }];\n\n  deviceName: string = '';\n  deviceDescription: string = '';\n  deviceLabels?: string;\n  deviceAdminState: string = 'UNLOCKED';\n  deviceOperatingState: string = 'UP';\n\n  protocolTemplateModel: string = \"avaliable\";\n  protocolName: string = '';\n  protocolProperty: properties = {\n    \"key\": null,\n    \"value\": null\n  };\n  protocolPropertyList: properties[] = [{\n    \"key\": null,\n    \"value\": null\n  }];\n\n  selectedAvailTemplate: any;\n  selectedAvailTemplateProperties: string[] = [];\n\n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSingleProfileSelected(profile: DeviceProfile) {\n    this.selectedProfile = profile;\n  }\n\n  onSingleDeviceSvcSelected(svc: DeviceService) {\n    this.selectedSvc = svc;\n  }\n\n  onAvailProtocolSelect() {\n    switch (this.protocolName) {\n      case 'mqtt':\n        this.selectedAvailTemplate = new MqttProtocolTemplate();\n        this.selectedAvailTemplateProperties = Object.keys(this.selectedAvailTemplate)\n        return\n      case 'modbus-tcp':\n        this.selectedAvailTemplate = new ModusTCPProtocolTemplate();\n        this.selectedAvailTemplateProperties = Object.keys(this.selectedAvailTemplate)\n        return\n      case 'modbus-rtu':\n        this.selectedAvailTemplate = new ModusRTUProtocolTemplate();\n        this.selectedAvailTemplateProperties = Object.keys(this.selectedAvailTemplate)\n        return\n      default:\n        this.selectedAvailTemplate = {};\n        this.selectedAvailTemplateProperties = [];\n        return\n    }\n\n  }\n\n  cleanSelectedAvailTemplateProperties() {\n    this.selectedAvailTemplateProperties = [];\n  }\n\n  setAutoEventInternal(events: AutoEvent[]) {\n    let unit: string;\n\n    events.forEach(e => {\n      let index: number = 0;\n      if ((e.interval as string).indexOf('ms')) {\n        index = (e.interval as string).indexOf('ms');\n      } else if ((e.interval as string).indexOf('s')) {\n        index = (e.interval as string).indexOf('s');\n      } else if ((e.interval as string).indexOf('m')) {\n        index = (e.interval as string).indexOf('m');\n      } else if ((e.interval as string).indexOf('h')) {\n        index = (e.interval as string).indexOf('h');\n      }\n      unit = (e.interval as string).substring(index)\n      this.autoEventsInternal.push({\n        interval: (e.interval as string).slice(0, index),\n        onChange: e.onChange as boolean,\n        resource: e.sourceName as string,\n        unit: unit\n      });\n    });\n  }\n\n  eventIntervalNumType(interval: any): boolean {\n    if (!isNaN(interval) && (parseFloat(interval) === parseInt(interval))) {\n      return true\n    }\n    return false\n  }\n\n  setProtocolTemplate(model: string) {\n    this.protocolName = \"\";\n    this.cleanSelectedAvailTemplateProperties();\n    this.cleanCustomProtocolProperty();\n    this.protocolTemplateModel = model;\n  }\n\n  addProtocolProperty() {\n    this.protocolPropertyList.push({\n      \"key\": '',\n      \"value\": ''\n    });\n  }\n\n  removeProtocolProperty(property: any) {\n    this.protocolPropertyList.splice(this.protocolPropertyList.indexOf(property), 1)\n  }\n\n  cleanCustomProtocolProperty() {\n    this.protocolPropertyList = [];\n    this.protocolPropertyList.push({\n      \"key\": '',\n      \"value\": ''\n    });\n  }\n\n  addAutoEvent() {\n    this.autoEventsInternal.push({\n      interval: '',\n      onChange: false,\n      resource: '',\n      unit: 'ms'\n    });\n  }\n\n  removeAutoEvent(event: AutoEventInternal) {\n    this.autoEventsInternal.splice(this.autoEventsInternal.indexOf(event), 1);\n  }\n\n  stepStateLock(): boolean {\n    switch (this.currentStep) {\n      case 0:\n        return this.selectedSvc === undefined\n      case 1:\n        return this.selectedProfile === undefined\n      case 2:\n        return this.deviceName === undefined || this.deviceName === ''\n      case 3:\n        let flag = false;\n        this.autoEventsInternal.forEach((event) => {\n          if (event.resource === '' || !this.eventIntervalNumType(event.interval)) {\n            flag = true;\n            return\n          }\n        });\n        return flag\n      case 4:\n        return false\n      default:\n        return false\n    }\n  }\n\n  skip() {\n    this.autoEventsInternal = [];\n    this.next();\n  }\n\n  next() {\n    this.currentStep += 1;\n  }\n\n  previous() {\n    this.currentStep = this.currentStep - 1;\n  }\n\n  changeStep() {\n    this.currentStep += 1;\n  }\n\n  done() {\n    let protocol: protocol = {};\n    let properties: properties = {};\n\n    if (this.protocolTemplateModel === 'custom') {\n      this.protocolPropertyList.forEach((p) => {\n        properties[p.key] = p.value\n      });\n      protocol[this.protocolName] = properties;\n    } else {\n      protocol[this.protocolName] = Object.assign({}, this.selectedAvailTemplate);\n    }\n\n    let autoEvents: AutoEvent[] = [];\n\n    this.autoEventsInternal.forEach((event) => {\n      autoEvents.push({\n        interval: `${parseInt(event.interval)}${event.unit}`,\n        onChange: event.onChange?true:false,\n        sourceName: event.resource\n      })\n    });\n\n    let device: Device = {\n      name: this.deviceName,\n      description: this.deviceDescription,\n      labels: this.deviceLabels?.split(','),\n      adminState: this.deviceAdminState,\n      operatingState: this.deviceOperatingState,\n      serviceName: this.selectedSvc?.name as string,\n      profileName: this.selectedProfile?.name as string,\n      protocols: protocol,\n      autoEvents: autoEvents\n    } as Device\n\n    this.metaSvc.addDevice(device).subscribe(() => {\n      this.msgSvc.success('Add device');\n      this.router.navigate(['../device-list'], { relativeTo: this.route })\n    })\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"font-weight-bold\">\n            <span class=\"fa fa-lightbulb-o fa-lg mr-2 text-danger\"></span> \n            <span class=\"text-secondary\">Add Device Wizard</span>\n        </span>\n    </div>\n    <div class=\"card-header bg-light\">\n        <nav aria-label=\"breadcrumb\" class=\"mb-0 p-0\">\n            <ol class=\"breadcrumb p-1 mb-0 bg-light\">\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 0? selectedClass:noSelectedClass\">SelectDeviceService <i *ngIf=\"currentStep >= 1\" class=\"fa fa-check\"></i></span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 1? selectedClass:noSelectedClass\">SelectDeviceProfile <i *ngIf=\"currentStep >= 2\" class=\"fa fa-check\"></i></span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 2? selectedClass:noSelectedClass\">DevicePrimary <i *ngIf=\"currentStep >= 3\" class=\"fa fa-check\"></i></span>\n                </li>\n                <li class=\"breadcrumb-item\">\n                    <span [ngClass]=\"currentStep >= 3? selectedClass:noSelectedClass\">CreateAutoEvent <i *ngIf=\"currentStep >= 4\" class=\"fa fa-check\"></i></span>\n                </li>\n                <li class=\"breadcrumb-item active\">\n                    <span [ngClass]=\"currentStep >= 4? selectedClass:noSelectedClass\">CreateDeviceProtocol <i *ngIf=\"currentStep >= 5\" class=\"fa fa-check\"></i></span>\n                </li>\n            </ol>\n        </nav>\n    </div>\n    <div class=\"card-header\">\n        <button *ngIf=\"currentStep\" class=\"btn btn-info btn-sm\"  (click)=\"previous()\"><i class=\"fa fa-long-arrow-left\"></i> Previous</button>\n        <button *ngIf=\"4 > currentStep; else stepDone\" class=\"btn btn-primary btn-sm float-right\" (click)=\"next()\" [disabled]=\"stepStateLock()\">Next <i class=\"fa fa-long-arrow-right\"></i></button>\n        <button *ngIf=\"3 === currentStep\" class=\"btn btn-success btn-sm float-right mr-2\" (click)=\"skip()\">Skip <i class=\"fa fa-share\"></i></button>\n        <ng-template #stepDone>\n            <button class=\"btn btn-success btn-sm ml-4 float-right\" (click)=\"done()\" [disabled]=\"!protocolName\"><i class=\"fa fa-save\"></i> Submit</button>\n        </ng-template>\n    </div>\n    <div class=\"card-body p-0\">\n        <div [ngSwitch]=\"currentStep\">\n            <ng-template [ngSwitchCase]=\"0\" #SelectDeviceService>\n                <div class=\"p-2\">\n                    <app-device-service-list \n                    (singleDeviceSvcSelectedEvent)=\"onSingleDeviceSvcSelected($event)\"\n                    [deviceSvcSelected]=\"selectedSvc\"\n                    ></app-device-service-list>\n                </div>\n            </ng-template>\n            \n            <ng-template [ngSwitchCase]=\"1\" #SelectDeviceProfile>\n                <div class=\"p-2\">\n                    <app-device-profile-list \n                    (singleProfileSelectedEvent)=\"onSingleProfileSelected($event)\" \n                    [singleProfileSelected]=\"selectedProfile\"\n                    [enableSelectAll]=\"false\" \n                    [toolbars]=\"false\" \n                    [associatedDeviceColumn]=\"false\"></app-device-profile-list>\n                </div>\n            </ng-template>\n            \n            <ng-template [ngSwitchCase]=\"2\" #DevicePrimary>\n                <form class=\"px-5 py-4\">\n                    <div class=\"form-group row has-validation\">\n                      <label for=\"deviceName\" class=\"col-md-2 col-form-label\" required>Name</label>\n                      <div class=\"col-md-10\">\n                        <input type=\"text\" class=\"form-control\" id=\"validationDeviceNameFeedback\" [class.is-invalid]=\"!deviceName\" [class.is-valid]=\"deviceName\" name=\"deviceName\" [(ngModel)]=\"deviceName\">\n                        <div id=\"validationDeviceNameFeedback\" class=\"invalid-feedback\">\n                            <small>the device name can't be empty!</small> \n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group row\">\n                      <label for=\"deviceDesc\" class=\"col-md-2 col-form-label\">Description</label>\n                      <div class=\"col-md-10\">\n                        <input type=\"text\" class=\"form-control\" name=\"deviceDescription\" [(ngModel)]=\"deviceDescription\">\n                      </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"deviceLabels\" class=\"col-md-2 col-form-label\">Labels</label>\n                        <div class=\"col-md-10\">\n                          <input type=\"text\" class=\"form-control\" name=\"deviceLabels\" [(ngModel)]=\"deviceLabels\" placeholder=\"Multiple Labels are separated by commas: label1,label2,label3\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"adminState\" class=\"col-md-2 col-form-label\" >AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"form-control\"  name=\"deviceAdminState\" [(ngModel)]=\"deviceAdminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"operatingState\" class=\"col-md-2 col-form-label\" >OperatingState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"form-control\" name=\"deviceOperatingState\" [(ngModel)]=\"deviceOperatingState\">\n                                <option value=\"UP\">UP</option>\n                                <option value=\"DOWN\">DOWN</option>\n                                <option value=\"DOWN\">UNKNOWN</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </ng-template>\n            \n            <ng-template  [ngSwitchCase]=\"3\" #CreateAutoEvent>\n                <div class=\"card border-0\">\n                    <div class=\"card-header\">\n                        <span class=\"fa fa-info-circle text-warning font-weight-bold\"> this step is optional, you can skip it then use scheduler service to create schedule job.</span>\n                    </div>\n                    <div class=\"card-body\">\n                        <p class=\"badge badge-secondary font-weight-bold\">\n                            <span class=\"fa fa-plus-circle mr-2\"></span>\n                            <span class=\"user-select-none\" role=\"button\" (click)=\"addAutoEvent()\">Add More AutoEvent</span>\n                        </p>\n                        <div class=\"card mb-3\" *ngFor=\"let event of autoEventsInternal\">\n                            <div class=\"card-body\">\n                                <form>\n                                    <div class=\"form-group row has-validation\">\n                                        <label class=\"col-md-2 col-form-label\">Interval</label>\n                                        <div class=\"col-md-10\">\n                                            <div class=\"input-group mb-3\"  style=\"width: 250px;\">\n                                                <input type=\"text\" name=\"interval\" [(ngModel)]=\"event.interval\" [class.is-invalid]=\"!eventIntervalNumType(event.interval)\" [class.is-valid]=\"eventIntervalNumType(event.interval)\" class=\"form-control\" required>\n                                                <div class=\"input-group-append\">\n                                                    <select class=\"custom-select\" name=\"eventIntervalUnit\" [(ngModel)]=\"event.unit\" required>\n                                                        <option value=\"ms\">millisecond</option>\n                                                        <option value=\"s\">second</option>\n                                                        <option value=\"m\">minute</option>\n                                                        <option value=\"h\">hour</option>\n                                                    </select>\n                                                </div>\n                                                <div class=\"invalid-feedback\">\n                                                    can only be a pure integer number\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label class=\"col-md-2 col-form-label\">onchange</label>\n                                        <div class=\"col-md-10\">\n                                            <select class=\"custom-select\" name=\"onchange\" [(ngModel)]=\"event.onChange\" style=\"width: 250px;\">\n                                                <option value=\"true\">true</option>\n                                                <option value=\"false\">false</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row\">\n                                        <label class=\"col-md-2 col-form-label\">resource</label>\n                                        <div class=\"col-md-10\">\n                                            <select class=\"custom-select\" name=\"resource\" [(ngModel)]=\"event.resource\" [class.is-invalid]=\"!event.resource\" [class.is-valid]=\"event.resource\"  style=\"width: 250px;\" required>\n                                                <option *ngFor=\"let r of selectedProfile?.deviceResources\" value=\"{{r.name}}\">{{r.name}}</option>\n                                            </select>\n                                            <div class=\"invalid-feedback\">\n                                                resource can't be empty\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <button class=\"btn btn-danger btn-sm\" (click)=\"removeAutoEvent(event)\"><i class=\"fa fa-trash\"></i> Remove</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n            \n            <ng-template [ngSwitchCase]=\"4\" #CreateDeviceProtocol>\n                <div class=\"card border-0\">\n                    <div class=\"card-body\">\n\n                        <p class=\"badge font-weight-bold mr-3\" [class.badge-primary]=\"protocolTemplateModel === 'avaliable'\" [class.badge-secondary]=\"protocolTemplateModel !== 'avaliable'\">\n                            <span class=\"fa fa-plus-circle mr-2\"></span>\n                            <span class=\"user-select-none\" role=\"button\" (click)=\"setProtocolTemplate('avaliable')\">Avaliable Protocol Templates</span>\n                        </p> \n\n                        <p class=\"badge font-weight-bold\" [class.badge-primary]=\"protocolTemplateModel === 'custom'\" [class.badge-secondary]=\"protocolTemplateModel !== 'custom'\">\n                            <span class=\"fa fa-plus-circle mr-2\"></span>\n                            <span class=\"user-select-none\" role=\"button\" (click)=\"setProtocolTemplate('custom')\">Custom Protocol Templates</span>\n                        </p> \n\n                        <div *ngIf=\"protocolTemplateModel === 'custom'; then customProtocolTemplate else avaliProtocolTemplate\"> \n                        </div>\n\n                        <ng-template  #avaliProtocolTemplate>\n                            <div class=\"row border border-secondary p-2 rounded-lg mx-1\">\n                                <div class=\"col-md-2 border-right border-info\">\n                                    <div class=\"form-group\">\n                                        <label>Protocol Name</label>\n                                        <select type=\"text\" class=\"custom-select\"  name=\"protocolName\" [class.is-invalid]=\"!protocolName\" [class.is-valid]=\"protocolName\" [(ngModel)]=\"protocolName\" (ngModelChange)=\"onAvailProtocolSelect()\" required>\n                                            <option value=\"mqtt\">device-mqtt</option>\n                                            <option value=\"other\">device-rest</option>\n                                            <option value=\"other\">device-virtual</option>\n                                            <option value=\"modbus-tcp\">device-modbus-tcp</option>\n                                            <option value=\"modbus-rtu\">device-modbus-rtu</option>\n                                        </select>\n                                        <div class=\"invalid-feedback\">\n                                            <small>the protocol name can't be empty!</small> \n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-10\">\n                                    <div *ngIf=\"selectedAvailTemplateProperties.length !== 0; else noAvailProperty\">\n                                        <div *ngFor=\"let property of selectedAvailTemplateProperties\">\n                                            <form class=\"form-inline mb-1\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                      <span class=\"input-group-text\">PropertyKey</span>\n                                                    </div>\n                                                    <input type=\"text\" class=\"form-control\"  disabled [value]=\"property\" style=\"width: 300px;\">\n                                                </div>\n                                                <div class=\"form-group mx-2\">\n                                                    <i class=\"fa fa-long-arrow-right\"></i> \n                                                </div>\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                      <span class=\"input-group-text\">PropertyVaule</span>\n                                                    </div>\n                                                    <input type=\"text\" class=\"form-control\" name=\"{{selectedAvailTemplate[property]}}\" [(ngModel)]=\"selectedAvailTemplate[property]\"  [ngModelOptions]=\"{standalone: true}\" style=\"width: 300px;\" >\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                    <ng-template #noAvailProperty>\n                                        <div>\n                                            <span class=\"fa fa-info-circle fa-lg text-success font-weight-bold mr-1\">\n                                            </span>\n                                            <span class=\"text-muted\">\n                                                all avaliable protocol templates refer to the device service released by edgex, such as device-virtual, device-rest, device-mqtt, device-modbus\n                                            </span>\n                                        </div>\n                                        <h5 *ngIf=\"protocolName\" class=\"text-warning\"> <i class=\"fa fa-warning\"></i> this device service doesn't need to set protocol properties. </h5>\n                                    </ng-template>\n                                </div>\n                            </div>\n                        </ng-template>\n\n                        <ng-template #customProtocolTemplate>\n                            <div class=\"row border border-secondary p-2 rounded-lg mx-1\">\n                                <div class=\"col-md-2 col-lg-2 border-right border-info\">\n                                    <div class=\"form-group\">\n                                        <label>Protocol Name</label>\n                                        <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!protocolName\" [class.is-valid]=\"protocolName\" name=\"protocolName\" [(ngModel)]=\"protocolName\">\n                                        <div class=\"invalid-feedback\">\n                                            <small>the protocol name can't be empty!</small> \n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-10 col-lg-10\">\n                                    <div class=\"\">\n                                        <div>\n                                            <p class=\"badge badge-secondary font-weight-bold\">\n                                                <span class=\"fa fa-plus-circle mr-2\"></span>\n                                                <span class=\"user-select-none\" role=\"button\" (click)=\"addProtocolProperty()\">Add Protocol Property</span>\n                                            </p>\n                                        </div>\n    \n                                        <div *ngFor=\"let property of protocolPropertyList\">\n                                            <form class=\"form-inline mb-1\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                      <span class=\"input-group-text\">PropertyKey</span>\n                                                    </div>\n                                                    <input type=\"text\" class=\"form-control\" name=\"propertyKey\" [(ngModel)]=\"property.key\" style=\"width: 300px;\">\n                                                </div>\n                                                <div class=\"form-group mx-2\">\n                                                    <i class=\"fa fa-long-arrow-right\"></i> \n                                                </div>\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                      <span class=\"input-group-text\">PropertyValue</span>\n                                                    </div>\n                                                    <input type=\"text\" class=\"form-control\" name=\"PropertyValue\" [(ngModel)]=\"property.value\" style=\"width: 300px;\">\n                                                </div>\n                                                <div class=\"input-group ml-2\">\n                                                    <button class=\"btn btn-danger btn-sm\" (click)=\"removeProtocolProperty(property)\"> <i class=\"fa fa-trash\"></i> </button>\n                                                </div>\n                                            </form>\n                                        </div>\n    \n                                    </div>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </div>\n                </div>\n            </ng-template>\n\n        </div>\n    </div>\n</div>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { Device } from '../../../contracts/v2/device';\nimport { DeviceResponse } from '../../../contracts/v2/responses/device-response';\nimport { DeviceService } from '../../../contracts/v2/device-service';\nimport { DeviceServiceResponse } from '../../../contracts/v2/responses/device-service-response';\nimport { DeviceProfile } from '../../../contracts/v2/device-profile';\nimport { DeviceProfileResponse } from '../../../contracts/v2/responses/device-profile-response';\nimport { AutoEvent } from '../../../contracts/v2/auto-event';\n\ndeclare type protocol = {\n  [key: string]: any;\n};\n\ndeclare type properties = {\n  [key: string]: any;\n};\n\nclass AutoEventInternal {\n  interval: string = '';\n  onChange: boolean = false;\n  resource: string = '';\n  unit: string = ''\n}\n\n@Component({\n  selector: 'app-edit-device',\n  templateUrl: './edit-device.component.html',\n  styleUrls: ['./edit-device.component.css']\n})\nexport class EditDeviceComponent implements OnInit {\n\n  device?: Device;\n  deviceLabels?: string;\n  selectedSvc?: DeviceService;\n  selectedProfile?: DeviceProfile;\n\n  autoEventsInternal: AutoEventInternal[] = [];\n\n  protocolName?: string;\n  protocolProperty: properties = {\n    'key': '',\n    'value': ''\n  };\n  protocolPropertyList: properties[] = [];\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private metaSvc: MetadataService,\n    private msgSvc: MessageService) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      let deviceName = params['deviceName'];\n      this.metaSvc.findDeviceByName(deviceName).subscribe((data: DeviceResponse) => {\n        this.device = data.device;\n\n        this.deviceLabels = this.device.labels?.join(',');\n        this.setAutoEventInternal(this.device.autoEvents)\n\n        this.protocolName = Object.keys(this.device.protocols)[0];\n        for (const [key, value] of Object.entries(this.device.protocols[this.protocolName])) {\n          this.protocolPropertyList.push({ 'key': key, 'value': value })\n        }\n\n        this.setDefaultDeviceSvcSelected(this.device.serviceName);\n        this.setDefaultDeviceProfileSelected(this.device.profileName);\n      });\n    });\n  }\n\n  onSingleProfileSelected(profile: DeviceProfile) {\n    this.selectedProfile = profile;\n    this.resetAutoEventsInternal();\n  }\n\n  onSingleDeviceSvcSelected(svc: DeviceService) {\n    this.selectedSvc = svc;\n  }\n\n  setDefaultDeviceSvcSelected(svcName: string) {\n    this.metaSvc\n    .findDevcieServiceByName(svcName)\n    .subscribe((resp: DeviceServiceResponse) => {\n      this.selectedSvc = resp.service;\n    });\n  }\n\n  setDefaultDeviceProfileSelected(profileName: string) {\n    this.metaSvc\n    .findProfileByName(profileName)\n    .subscribe((resp: DeviceProfileResponse) => {\n      this.selectedProfile = resp.profile;\n    });\n  }\n\n  resetAutoEventsInternal () {\n    this.autoEventsInternal = [];\n  }\n\n  setAutoEventInternal(events?: AutoEvent[]) {\n    let unit: string;\n    events?.forEach(e => {\n      let index: number = 0;\n\n      if (e.interval.indexOf('ms') !== -1) {\n        index = e.interval.indexOf('ms');\n      } else if (e.interval.indexOf('s') !== -1) {\n        index = e.interval.indexOf('s');\n      } else if (e.interval.indexOf('m') !== -1) {\n        index = e.interval.indexOf('m');\n      } else if (e.interval.indexOf('h') !== -1) {\n        index = e.interval.indexOf('h');\n      }\n\n      unit = e.interval.substring(index)\n      this.autoEventsInternal.push({\n        interval: e.interval.slice(0, index),\n        onChange: e.onChange as boolean ? true : false,\n        resource: e.sourceName,\n        unit: unit\n      });\n    });\n  }\n\n  eventIntervalNumType(interval: any): boolean {\n    if (!isNaN(interval) && (parseFloat(interval) === parseInt(interval))) {\n      return true\n    }\n    return false\n  }\n\n  addProtocolProperty() {\n    this.protocolPropertyList.push({ 'key': '', 'value': '' })\n  }\n\n  removeProtocolProperty(property: any) {\n    this.protocolPropertyList.splice(this.protocolPropertyList.indexOf(property), 1)\n  }\n\n  addAutoEvent() {\n    this.autoEventsInternal.push({\n      interval: '',\n      onChange: false,\n      resource: '',\n      unit: 'ms'\n    });\n  }\n\n  removeAutoEvent(event: AutoEventInternal) {\n    this.autoEventsInternal.splice(this.autoEventsInternal.indexOf(event), 1);\n  }\n\n  validateBeforeSave(): boolean {\n    if (this.device?.name && this.protocolName) {\n      let f: boolean = false;\n      this.autoEventsInternal.forEach(e => {\n        if (!this.eventIntervalNumType(e.interval) || e.resource === '') {\n          f = true;\n          return\n        }\n      });\n      return f\n    }\n    return true\n  }\n\n  save() {\n    let d: Device = this.device as Device\n    let protocol: protocol = {};\n    let properties: properties = {};\n\n    d.labels  = this.deviceLabels?.split(\",\") as string[];\n\n    d.serviceName = this.selectedSvc?.name as string;\n    d.profileName = this.selectedProfile?.name as string;\n\n    this.protocolPropertyList.forEach(p => {\n      properties[p.key] = p.value;\n    })\n    protocol[this.protocolName as string] = properties;\n    d.protocols = protocol;\n\n    d.autoEvents = [];\n\n    this.autoEventsInternal.forEach(e => {\n      d.autoEvents.push({\n        interval: `${parseInt(e.interval)}${e.unit}`,\n        onChange: e.onChange?true:false,\n        sourceName: e.resource\n      })\n    });\n\n    this.metaSvc.updateDevice(d).subscribe(() => {\n      this.msgSvc.success('update device', `name: ${this.device?.name}`);\n      this.router.navigate(['../device-list'], { relativeTo: this.route });\n    });\n  }\n\n  showTips() {\n    $('.a-question-circle-o').tooltip('toggle')\n  }\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div *ngIf=\"device\" class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-edit text-danger fa-lg\"></i> \n        <span class=\"mx-2\">Edit Device</span>\n        <span class=\"text-primary\">{{device.name}}</span> \n    </div>\n    <div class=\"card-header py-1\">\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"save()\"  [disabled]=\"validateBeforeSave()\">\n            <span><i class=\"fa fa-save mr-1\"></i>Save</span>\n        </button>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"card mb-3\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-tags fa-lg text-danger\"></i> Device Primary\n            </div>\n            <div class=\"card-body\">\n                <form>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\">DeviceName</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"name\" [(ngModel)]=\"device.name\" [class.is-invalid]=\"device.name === ''\" class=\"form-control\" required>\n                            <div class=\"invalid-feedback\">\n                               device name can't not be empty!\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\">Description</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"description\" [(ngModel)]=\"device.description\" class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label class=\"col-md-2 col-form-label\">Labels</label>\n                        <div class=\"col-md-10\">\n                            <input type=\"text\" name=\"labels\" [(ngModel)]=\"deviceLabels\"  class=\"form-control\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"adminState\" class=\"col-md-2 col-form-label\" >AdminState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"form-control\"  name=\"adminState\" [(ngModel)]=\"device.adminState\">\n                                <option value=\"UNLOCKED\">UNLOCKED</option>\n                                <option value=\"LOCKED\">LOCKED</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"operatingState\" class=\"col-md-2 col-form-label\" >OperatingState</label>\n                        <div class=\"col-md-10\">\n                            <select class=\"form-control\" name=\"operatingState\" [(ngModel)]=\"device.operatingState\">\n                                <option value=\"UP\">UP</option>\n                                <option value=\"DOWN\">DOWN</option>\n                                <option value=\"DOWN\">UNKNOWN</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class=\"mb-3\">\n            <app-device-service-list \n            (singleDeviceSvcSelectedEvent)=\"onSingleDeviceSvcSelected($event)\" \n            [deviceSvcSelected]=\"selectedSvc\"></app-device-service-list>\n        </div>\n\n        <div class=\"mb-3\">\n            <app-device-profile-list  \n            (singleProfileSelectedEvent)=\"onSingleProfileSelected($event)\" \n            [enableSelectAll]=\"false\" [toolbars]=\"false\" \n            [singleProfileSelected]=\"selectedProfile\"\n            [associatedDeviceColumn]=\"false\"></app-device-profile-list>\n        </div>\n\n        <div class=\"card mb-3\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-tags fa-lg text-danger\"></i> Device Protocol\n            </div>\n            <div class=\"card-body\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"row \">\n                            <div class=\"col-md-2 col-lg-2 border-right border-secondary\">\n                                <div class=\"form-group\">\n                                    <label>Protocol Name</label>\n                                    <input type=\"text\" class=\"form-control\" [class.is-invalid]=\"!protocolName\" [class.is-valid]=\"protocolName\" name=\"protocolName\" [(ngModel)]=\"protocolName\">\n                                    <div class=\"invalid-feedback\">\n                                        <small>the protocol name can't be empty!</small> \n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-10 col-lg-10\">\n                                <div>\n                                    <p class=\"badge badge-secondary font-weight-bold\">\n                                        <span class=\"fa fa-plus-circle mr-2\"></span>\n                                        <span class=\"user-select-none\" role=\"button\" (click)=\"addProtocolProperty()\">Add Protocol Property</span>\n                                        \n                                    </p>\n                                </div>\n    \n                                <div *ngFor=\"let property of protocolPropertyList\">\n                                    <form class=\"form-inline mb-1\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\">PropertyKey</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\" name=\"propertyKey\" [(ngModel)]=\"property.key\" style=\"width: 300px;\">\n                                        </div>\n                                        <div class=\"form-group mx-2\">\n                                            <i class=\"fa fa-long-arrow-right\"></i> \n                                        </div>\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\">PropertyValue</span>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control\" name=\"PropertyValue\" [(ngModel)]=\"property.value\" style=\"width: 300px;\">\n                                        </div>\n                                        <div class=\"input-group ml-2\">\n                                            <button class=\"btn btn-danger btn-sm\" (click)=\"removeProtocolProperty(property)\"> <i class=\"fa fa-trash\"></i> </button>\n                                        </div>\n                                    </form>\n                                </div>\n    \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card mb-3\">\n            <div class=\"card-header font-weight-bold\">\n                <i class=\"fa fa-tags fa-lg text-danger\"></i>  AutoEvents\n            </div>\n            <div class=\"card-body\">\n                <p class=\"badge badge-secondary font-weight-bold\">\n                    <span class=\"fa fa-plus-circle mr-2\"></span>\n                    <span class=\"user-select-none\" role=\"button\" (click)=\"addAutoEvent()\">Add More AutoEvent</span>\n                </p>\n                <div class=\"card mb-3\" *ngFor=\"let event of autoEventsInternal\">\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"form-group row has-validation\">\n                                <label class=\"col-md-2 col-form-label\">Interval</label>\n                                <div class=\"col-md-10\">\n                                    <div class=\"input-group mb-3\"  style=\"width: 250px;\">\n                                        <input type=\"text\" name=\"interval\" [(ngModel)]=\"event.interval\" [class.is-invalid]=\"!eventIntervalNumType(event.interval)\" [class.is-valid]=\"eventIntervalNumType(event.interval)\" class=\"form-control\" required>\n                                        <div class=\"input-group-append\">\n                                            <select class=\"custom-select\" name=\"eventIntervalUnit\" [(ngModel)]=\"event.unit\" required>\n                                                <option value=\"ms\">millisecond</option>\n                                                <option value=\"s\">second</option>\n                                                <option value=\"m\">minute</option>\n                                                <option value=\"h\">hour</option>\n                                            </select>\n                                        </div>\n                                        <div class=\"invalid-feedback\">\n                                            can only be a pure integer number\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label class=\"col-md-2 col-form-label\">onchange</label>\n                                <div class=\"col-md-10\">\n                                    <select class=\"custom-select\" name=\"onchange\" [(ngModel)]=\"event.onChange\" style=\"width: 250px;\">\n                                        <option value=\"true\">true</option>\n                                        <option value=\"false\">false</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"form-group row\">\n                                <label class=\"col-md-2 col-form-label\">resource</label>\n                                <div class=\"col-md-10\">\n                                    <select class=\"custom-select\" name=\"resource\" [(ngModel)]=\"event.resource\" [class.is-invalid]=\"event.resource === ''\" [class.is-valid]=\"event.resource !==''\"  style=\"width: 250px;\" required>\n                                        <option *ngFor=\"let r of selectedProfile?.deviceResources\" value=\"{{r.name}}\">{{r.name}}</option>\n                                    </select>\n                                    <div class=\"invalid-feedback\">\n                                        resource can't be empty\n                                    </div>\n                                </div>\n                            </div>\n                            <button class=\"btn btn-danger btn-sm\" (click)=\"removeAutoEvent(event)\"><i class=\"fa fa-trash\"></i> Remove</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MetadataRoutingModule } from './metadata-routing.module';\nimport { MetadataComponent } from './metadata.component';\nimport { DeviceServiceMediaListComponent } from './device-service/device-service-media-list/device-service-media-list.component';\nimport { DeviceServiceListComponent } from './device-service/device-service-list/device-service-list.component';\nimport { DeviceListComponent } from './device/device-list/device-list.component';\nimport { EditDeviceComponent } from './device/edit-device/edit-device.component';\nimport { AddDeviceComponent } from './device/add-device/add-device.component';\nimport { DeviceProfileListComponent } from './profile/device-profile-list/device-profile-list.component';\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\nimport { AddProfileComponent } from './profile/add-profile/add-profile.component';\nimport { DeviceCenterComponent } from './device/device-center/device-center.component';\nimport { DeviceProfileCenterComponent } from './profile/device-profile-center/device-profile-center.component';\nimport { ProvisionWatcherCenterComponent } from './provision-watcher/provision-watcher-center/provision-watcher-center.component';\nimport { ProvisionWatcherListComponent } from './provision-watcher/provision-watcher-list/provision-watcher-list.component';\nimport { EditProvisionWatcherComponent } from './provision-watcher/edit-provision-watcher/edit-provision-watcher.component';\nimport { AddProvisionWatcherComponent } from './provision-watcher/add-provision-watcher/add-provision-watcher.component';\n\n@NgModule({\n  declarations: [MetadataComponent, DeviceServiceMediaListComponent, DeviceServiceListComponent, DeviceListComponent, EditDeviceComponent, AddDeviceComponent, DeviceProfileListComponent, EditProfileComponent, AddProfileComponent, DeviceCenterComponent, DeviceProfileCenterComponent, ProvisionWatcherCenterComponent, ProvisionWatcherListComponent, EditProvisionWatcherComponent, AddProvisionWatcherComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MetadataRoutingModule,\n  ]\n})\nexport class MetadataModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-device-center',\n  templateUrl: './device-center.component.html',\n  styleUrls: ['./device-center.component.css']\n})\nexport class DeviceCenterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { MetadataService } from '../../../services/metadata.service';\nimport { MessageService } from '../../../message/message.service';\nimport { MultiDeviceProfileResponse, DeviceProfileResponse} from '../../../contracts/v2/responses/device-profile-response';\nimport { DeviceProfile } from '../../../contracts/v2/device-profile';\n\n@Component({\n  selector: 'app-device-profile-list',\n  templateUrl: './device-profile-list.component.html',\n  styleUrls: ['./device-profile-list.component.css']\n})\nexport class DeviceProfileListComponent implements OnInit {\n  \n  @Input() associatedDeviceColumn: boolean = true;\n  @Input() toolbars: boolean = true;\n  @Input() enableSelectAll: boolean = true;\n  @Output() singleProfileSelectedEvent = new EventEmitter<DeviceProfile>();\n  profileList: DeviceProfile[] = [];\n  multiProfilesSelected: string[] = [];\n  @Input() singleProfileSelected?: DeviceProfile;\n  isCheckedAll: boolean = false;\n  pagination: number = 1;\n  pageLimit: number = 5;\n  pageOffset: number = (this.pagination - 1) * this.pageLimit;\n  \n  constructor(private metaSvc: MetadataService,\n    private msgSvc: MessageService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      if (params['profileName']) {\n        this.metaSvc.findProfileByName(params['profileName']).subscribe((data: DeviceProfileResponse) => {\n          this.profileList = [];\n          this.profileList.push(data.profile);\n        });\n      } else {\n        this.findAllDeviceProfilesPagination();\n      }\n    });\n  }\n\n  findAllDeviceProfilesPagination() {\n    this.metaSvc.allDeviceProfolesPagination(this.pageOffset, this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n    });\n  }\n\n  onSingleProfileSelectedEmitter() {\n    this.singleProfileSelectedEvent.emit(this.singleProfileSelected);\n  }\n\n  refresh() {\n    this.metaSvc.allDeviceProfolesPagination(0,this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n      this.msgSvc.success('refresh');\n      this.pagination = 1;\n      this.resetCheckbox();\n    });\n  }\n\n  onPageSelected() {\n    this.resetPagination();\n    this.setPagination();\n    this.findAllDeviceProfilesPagination();\n  }\n\n  prePage() {\n    this.setPagination(-1);\n    this.metaSvc.allDeviceProfolesPagination(this.pageOffset,this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n      \n    });\n  }\n\n  nextPage() {\n    this.setPagination(1);\n    this.metaSvc.allDeviceProfolesPagination(this.pageOffset,this.pageLimit).subscribe((data: MultiDeviceProfileResponse) => {\n      this.profileList = data.profiles;\n    });\n  }\n\n  setPageLimit(n: number) {\n    this.pageLimit = n;\n  }\n\n  setPagination(n?: number) {\n    if (n === 1) {\n      this.pagination += 1;\n    } else if (n === -1) {\n      this.pagination -= 1;\n    }\n    this.pageOffset = (this.pagination - 1) * this.pageLimit;\n\n    this.resetCheckbox();\n  }\n\n  resetPagination() {\n    this.pagination = 1;\n    this.resetCheckbox();\n  }\n\n  resetCheckbox() {\n    this.isCheckedAll = false; //reset checkbox all\n    this.multiProfilesSelected = [];\n  }\n\n  edit() {\n    this.router.navigate(['../edit-profile'], {\n      relativeTo: this.route,\n      queryParams: {\n        'profileName': this.multiProfilesSelected[0]\n      }\n    });\n  }\n\n  deleteConfirm() {\n    $(\"#deleteConfirmDialog\").modal('show');\n  }\n\n  delete() {\n    this.multiProfilesSelected.forEach((profileName) => {\n      this.metaSvc.deleteProfileByName(profileName).subscribe(() => {\n        this.multiProfilesSelected = [];\n        this.profileList.forEach((profile, index) => {\n          if (profile.name == profileName) {\n            this.profileList.splice(index, 1);\n            this.msgSvc.success('delete', `  Name: ${profile.name}`);\n          }\n        });\n      });\n    });\n    $(\"#deleteConfirmDialog\").modal('hide');\n  }\n\n  isSingleProfileChecked(name: string): boolean {\n    return this.singleProfileSelected?.name === name\n  }\n\n  selectSingleProfile(event: any, name: string) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.profileList.forEach((profile) => {\n        if (profile.name === name) {\n          this.singleProfileSelected = profile;\n        }\n      });\n    } else {\n      this.singleProfileSelected = undefined;\n    }\n    this.onSingleProfileSelectedEmitter();\n  }\n\n  selectAll(event: any) {\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.multiProfilesSelected = [];\n      this.profileList.forEach(profile => {\n        this.multiProfilesSelected.push(profile.name);\n        this.isChecked(profile.name);\n      });\n      this.isCheckedAll = true;\n      return\n    }\n    this.isCheckedAll = false;\n    this.multiProfilesSelected = [];\n    this.profileList.forEach(profile => {\n      this.isChecked(profile.name);\n    });\n  }\n\n  isChecked(name: string): boolean {\n    if (!this.enableSelectAll) {\n      return this.isSingleProfileChecked(name)\n    }\n    return this.multiProfilesSelected.findIndex(v => v === name) >= 0;\n  }\n\n  selectOne(event: any, name: string) {\n    if (!this.enableSelectAll) {\n      this.selectSingleProfile(event, name);\n      return\n    }\n    const checkbox = event.target;\n    if (checkbox.checked) {\n      this.multiProfilesSelected.push(name);\n      if (this.multiProfilesSelected.length === this.profileList.length) {\n        this.isCheckedAll = true;\n      }\n      return\n    }\n    this.isCheckedAll = false;\n    this.isChecked(name);\n    this.multiProfilesSelected.splice(this.multiProfilesSelected.indexOf(name), 1)\n  }\n\n}\n","<!--\n*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n *\n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************\n -->\n\n<div class=\"card\">\n    <div class=\"card-header font-weight-bold\">\n        <i class=\"fa fa-list text-danger mr-2\"></i> \n        <span>Device Profile List</span> \n    </div>\n    <div class=\"card-body p-0\">\n        <div *ngIf=\"toolbars\" class=\"bg-light px-2 py-2\">\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button class=\"btn btn-primary\" (click)=\"refresh()\">\n                    <span><i class=\"fa fa-refresh mr-1\"></i>Refresh</span> \n                </button>\n                <button type=\"button\" class=\"btn btn-info\"  routerLink=\"../add-profile\">\n                    <span><i class=\"fa fa-plus mr-1\"></i>Add</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"edit()\"  data-toggle=\"tooltip\" data-placement=\"top\" title=\"only one should be selected\" [disabled]=\"multiProfilesSelected.length !== 1\">\n                    <span><i class=\"fa fa-edit mr-1\"></i>Edit</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteConfirm()\" [disabled]=\"multiProfilesSelected.length === 0\">\n                    <span><i class=\"fa fa-trash mr-1\"></i>Delete</span>\n                </button>\n              </div>\n              <!-- <button class=\"btn btn-secondary btn-sm text-light ml-3\">upload yaml file</button> -->\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover text-truncate\">\n                <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">\n                          <input *ngIf=\"enableSelectAll\" type=\"checkbox\" [checked]=\"isCheckedAll\" (click)=\"selectAll($event)\">\n                      </th>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Description</th>\n                      <th *ngIf=\"associatedDeviceColumn\" scope=\"col\">AssociatedDevice</th>\n                      <th scope=\"col\">Labels</th>\n                      <th scope=\"col\">Manufacturer</th>\n                      <th scope=\"col\">Model</th>\n                      <!-- <th scope=\"col\">Created</th>\n                      <th scope=\"col\">Modified</th> -->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let profile of profileList\" [class.table-active]=\"isChecked(profile.name)\">\n                        <td> <input type=\"checkbox\" value=\"{{profile.name}}\" [checked]=\"isChecked(profile.name)\" (click)=\"selectOne($event,profile.name)\"></td>\n                        <td class=\"user-select-all\">{{profile.id}}</td>\n                        <td class=\"user-select-all\">{{profile.name}}</td>\n                        <td>{{profile.description}}</td>\n                        <td *ngIf=\"associatedDeviceColumn\" class=\"text-center\">\n                            <a routerLink=\"../../device-center\" class=\"badge badge-pill badge-primary\" [queryParams]=\"{'profileName':profile.name}\"><i class=\"fa fa-sitemap\"></i></a>\n                        </td>\n                        <td>{{profile.labels}}</td>\n                        <td>{{profile.manufacturer}}</td>\n                        <td>{{profile.model}}</td>\n                        <!-- <td>{{profile.created | date:'yyyy-MM-dd hh:mm:ss'}}</td>\n                        <td>{{profile.modified | date:'yyyy-MM-dd hh:mm:ss' }}</td> -->\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"card-footer text-muted p-1\">\n        <nav aria-label=\"navigation\">\n            <ul class=\"pagination justify-content-end m-0\">\n                <li class=\"page-item mr-2 mt-1\">\n                    <span class=\"align-middle\">items per page</span>\n                </li>\n                <li class=\"page-item mr-2 \">\n                    <select class=\"form-control\" name=\"pageLimit\" id=\"pageLimit\" [(ngModel)]=\"pageLimit\" (ngModelChange)=\"onPageSelected()\">\n                        <option value=\"5\">5</option>\n                        <option value=\"10\">10</option>\n                        <option value=\"20\">20</option>\n                    </select>\n                </li>\n                <li class=\"page-item mr-1\">\n                    <button class=\"page-link btn\" (click)=\"prePage()\" [disabled]=\"pagination === 1\"> <i class=\"fa fa-angle-double-left\"></i> Previous</button>\n                </li>\n                <li class=\"page-item\" >\n                    <button class=\"page-link btn\" (click)=\"nextPage()\" [disabled]=\"this.pageLimit > profileList.length\">Next <i class=\"fa fa-angle-double-right\"></i></button>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>\n  \n<div class=\"modal fade\" id=\"deleteConfirmDialog\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"deleteConfirmDialogLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title text-danger\" id=\"deleteConfirmDialogLabel\">\n                    <i class=\"fa fa-warning\"></i>\n                    Warning\n                </h5>  \n            </div>\n            <div class=\"modal-body\">\n                The data will be permanently erased!!! Are you sure to execute delete operation？\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete()\">Confirm</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n"],"sourceRoot":"webpack:///"}