{"version":3,"sources":["./src/app/services/command.service.ts","./src/app/services/error.service.ts","./src/app/services/metadata.service.ts"],"names":[],"mappings":"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","file":"default~dashboard-dashboard-module~metadata-metadata-module~system-agent-system-agent-module.js","sourcesContent":["/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\nimport { DeviceCoreCommandResponse, MultiDeviceCoreCommandsResponse } from '../contracts/v2/responses/device-core-command-response';\nimport { EventResponse } from '../contracts/v2/responses/event-response';\nimport { BaseResponse } from '../contracts/v2/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandService {\n\n  endpoint: string = \"/command\";\n  version: string = \"/api/v2\";\n  urlPrefix: string = `${this.endpoint}${this.version}`;\n\n  endpointHealthUrl: string = \"/ping\";\n  versionUrl: string = \"/version\";\n\n  configUrl: string = \"/config\";\n\n  deviceCoreCommandListUrl: string = `${this.urlPrefix}/device/all`;\n  commandsByDeviceIdUrl: string = `${this.urlPrefix}/device/`; //deprecated\n  commandsByDeviceNameUrl: string = `${this.urlPrefix}/device/name/`; //deprecated\n  issueCmdByDeviceNameAndCmdNameUrl: string = `${this.urlPrefix}/device/name/`;\n\n  httpPostOrPutJSONOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json',\n      'Authorization': ''\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  getConfig(): Observable<any> {\n    let url = `${this.urlPrefix}${this.configUrl}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findCommnadsByDeviceId(deviceId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDeviceCoreCommandsPagination(offset: number, limit: number): Observable<MultiDeviceCoreCommandsResponse> {\n    let url = `${this.deviceCoreCommandListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceCoreCommandsResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDeviceAssociatedCommnadsByDeviceName(name: string): Observable<DeviceCoreCommandResponse> {\n    let url = `${this.commandsByDeviceNameUrl}${name}`;\n    return this.http.get<DeviceCoreCommandResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findAllDeviceCommnads(): Observable<any> {\n    let url = `${this.urlPrefix}/device`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetBinaryCmd(deviceId: string, commandId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n    return this.http.request('GET', url, {\n      responseType: 'arraybuffer'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetCmd(deviceName: string, commandName: string): Observable<EventResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.get<EventResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  // issueGetCmd(deviceId: string, commandId: string): Observable<any> {\n  //   let url = `${this.urlPrefix}${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n  //   return this.http.get(url).pipe(\n  //     catchError(error => this.errorSvc.handleError(error))\n  //   )\n  // }\n\n  issueSetCmd(deviceName: string, commandName: string, params?: any): Observable<BaseResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.put<BaseResponse>(url, JSON.stringify(params),this.httpPostOrPutJSONOptions).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  // issueSetCmd(deviceId: string, commandId: string, params?: any): Observable<any> {\n  //   let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n  //   return this.http.request('PUT', url, {\n  //     body: JSON.stringify(params),\n  //     responseType: 'text'\n  //   }).pipe(\n  //     catchError(error => this.errorSvc.handleError(error))\n  //   )\n  // }\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\nimport { MessageService } from '../message/message.service';\nimport { BaseWithIdResponse, BaseResponse } from '../contracts/v2/common/base-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor(private msgSvc: MessageService) { }\n\n  handleErrorForV2API(data: any): boolean {\n    let t = Object.prototype.toString.call(data);\n    if (t === '[object Array]') {\n      if (!(data as any)[0].statusCode.toString().startsWith('20')){\n        this.msgSvc.errors(`code: ${(data as any)[0].statusCode}, message: ${(data as any)[0].message}`);\n        return true\n      }\n    } else if (t === '[object Object]') {\n      if (!(data as any).statusCode.toString().startsWith('20')){\n        this.msgSvc.errors(`code: ${(data as any).statusCode}, message: ${(data as any).message}`);\n        return true\n      }\n    }\n    return false\n  }\n\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      this.msgSvc.errors(`'An error occurred:', ${error.error.message}`);\n    } else {\n      if (Object.prototype.toString.call(error.error) === '[object Object]') {\n        this.msgSvc.errors(`code: ${(error.error as any).statusCode} , message: ${(error.error as any).message}`);\n      } else {\n        this.msgSvc.errors(`code: ${error.status} , message: ${error.message}`);\n      }\n    }\n    return throwError(\n      `Backend returned code ${(error.error as any).statusCode}, ` +\n      `body was: ${(error.error as any).message}`);\n  }\n}\n","/*******************************************************************************\n * Copyright © 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { DeviceResponse,MultiDeviceResponse } from '../contracts/v2/responses/device-response';\nimport { BaseWithIdResponse,BaseResponse } from '../contracts/v2/common/base-response';\nimport { Device } from '../contracts/v2/device';\nimport { DeviceRequest } from '../contracts/v2/requests/device-request';\nimport { MultiDeviceProfileResponse,DeviceProfileResponse } from '../contracts/v2/responses/device-profile-response';\nimport { DeviceProfile } from '../contracts/v2/device-profile';\nimport { DeviceService } from '../contracts/v2/device-service';\nimport { DeviceServiceRequest } from '../contracts/v2/requests/device-service-request';\nimport { DeviceServiceResponse,MultiDeviceServiceResponse } from '../contracts/v2/responses/device-service-response';\n\nimport { ErrorService } from './error.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetadataService {\n\n  endpoint: string = \"/metadata\";\n  version: string = \"/api/v2\";\n  urlPrefix: string = `${this.endpoint}${this.version}`;\n\n  configUrl: string = \"/config\";\n\n  devicesListUrl: string = `${this.urlPrefix}/device/all`;\n  addOneDeviceUrl: string = `${this.urlPrefix}/device`;\n  updateOneDeviceUrl: string = `${this.urlPrefix}/device`;\n  deleteOneDeviceByIdUrl: string = `${this.urlPrefix}/device/Id/`;\n  deleteOneDeviceByNameUrl: string = `${this.urlPrefix}/device/name/`;\n  findDeviceByNameUrl: string = `${this.urlPrefix}/device/name/`;\n  findDeviceByIdUrl: string = `${this.urlPrefix}/device/id/`;\n  findDevicesByServiceIdUrl: string = `${this.urlPrefix}/device/service/id/`;\n  findDevicesByServiceNameUrl: string = `${this.urlPrefix}/device/service/name/`;\n  findDevicesByProfileIdUrl: string = `${this.urlPrefix}/device/profile/id/`;\n  findDevicesByProfileNameUrl: string = `${this.urlPrefix}/device/profile/name/`;\n\n  deviceServicesListUrl: string = `${this.urlPrefix}/deviceservice/all`;\n  updateDeviceServiceUrl: string = `${this.urlPrefix}/deviceservice`;\n  findDeviceServiceByIdUrl: string = `${this.urlPrefix}/deviceservice/id/`;\n  findDeviceServiceByNameUrl: string = `${this.urlPrefix}/deviceservice/name/`;\n\n  deviceProfilesListUrl: string = `${this.urlPrefix}/deviceprofile/all`;\n  findProfilesByIdUrl: string = `${this.urlPrefix}/deviceprofile`;\n  findProfilesByNameUrl: string = `${this.urlPrefix}/deviceprofile/name/`;\n  updateDeviceProfileUrl: string = `${this.urlPrefix}/deviceprofile`;\n  uploadProfileYamlFileUrl: string = `${this.urlPrefix}/deviceprofile/uploadfile`;\n  uploadProfileYamlContentUrl: string = `${this.urlPrefix}/deviceprofile/upload`;\n  deviceProfileYamlUrl: string = `${this.urlPrefix}/deviceprofile/yaml/`;\n  deleteProfileByIdUrl: string = `${this.urlPrefix}/deviceprofile/id/`;\n  deleteProfileByNamedUrl: string = `${this.urlPrefix}/deviceprofile/name/`;\n\n  httpPostOrPutJSONOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json',\n      'Authorization': ''\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  getConfig(): Observable<any> {\n    let url = `${this.urlPrefix}${this.configUrl}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //Device resources\n  allDevices(): Observable<MultiDeviceResponse> {\n    let url = `${this.devicesListUrl}`;\n    return this.http.get<MultiDeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDevicesPagination(offset: number, limit: number): Observable<MultiDeviceResponse> {\n    let url = `${this.devicesListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  addDevice(device: Device): Observable<BaseWithIdResponse> {\n    let url = `${this.addOneDeviceUrl}`;\n    device.apiVersion = 'v2';\n    let data: DeviceRequest[]  = [{\n      apiVersion: \"v2\",\n      device: device\n    }]\n    return this.http.post<BaseWithIdResponse>(url,JSON.stringify(data), this.httpPostOrPutJSONOptions)\n    .pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  deleteOneDeviceByName(name: string): Observable<BaseResponse> {\n    let url = `${this.deleteOneDeviceByNameUrl}${name}`;\n    return this.http.delete<BaseResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  deleteOneDeviceById(id: string): Observable<BaseResponse> {\n    let url = `${this.deleteOneDeviceByIdUrl}${id}`;\n    return this.http.delete<BaseResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  updateDevice(device: Device): Observable<BaseResponse> {\n    let url = `${this.updateOneDeviceUrl}`;\n    let data: DeviceRequest[]  = [{\n      apiVersion: \"v2\",\n      device: device\n    }]\n    return this.http.patch<BaseResponse>(url, JSON.stringify(data),{\n      headers: new HttpHeaders({\n        'Content-type': 'application/json'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n    // return this.http.patch<BaseResponse>(url, {\n    //   body: JSON.stringify(data),\n    //   responseType: 'json',\n    //   headers: new HttpHeaders({\n    //     'Content-type': 'application/json'\n    //   })\n    // }).pipe(\n    //   catchError(error => this.errorSvc.handleError(error))\n    // )\n  }\n\n  findDeviceByName(name: string): Observable<DeviceResponse> {\n    let url = `${this.findDeviceByNameUrl}/${name}`;\n    return this.http.get<DeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findDeviceById(id: string): Observable<DeviceResponse> {\n    let url = `${this.findDeviceByIdUrl}/${id}`;\n    return this.http.get<DeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findDevicesByServiceId(serviceId: string): Observable<MultiDeviceResponse> {\n    let url = `${this.findDevicesByServiceIdUrl}${serviceId}`;\n    return this.http.get<MultiDeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDevicesByServiceName(offset: number, limit: number, serviceName: string): Observable<MultiDeviceResponse> {\n    let url = `${this.findDevicesByServiceNameUrl}${serviceName}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findDevicesByProfileId(profileId: string): Observable<MultiDeviceResponse> {\n    let url = `${this.findDevicesByProfileIdUrl}/${profileId}`;\n    return this.http.get<MultiDeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDevicesByProfileName(offset: number, limit: number, profileName: string): Observable<MultiDeviceResponse> {\n    let url = `${this.findDevicesByProfileNameUrl}${profileName}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //Device Service resources\n\n  allDeviceServices(): Observable<MultiDeviceServiceResponse> {\n    let url = `${this.deviceServicesListUrl}?offset=${0}&limit=${-1}`;\n    return this.http.get<MultiDeviceServiceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findAllDeviceServicesPagination(offset: number, limit: number): Observable<MultiDeviceServiceResponse> {\n    let url = `${this.deviceServicesListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceServiceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  updateDeviceService(deviceService: DeviceService): Observable<BaseResponse> {\n    let url = `${this.updateDeviceServiceUrl}`;\n    let data: DeviceServiceRequest[]  = [{\n      apiVersion: \"v2\",\n      service: deviceService\n    }]\n    return this.http.patch<BaseResponse>(url, JSON.stringify(data), this.httpPostOrPutJSONOptions).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findDevcieServiceById(id: string): Observable<DeviceServiceResponse> {\n    let url = `${this.findDeviceServiceByIdUrl}${id}`;\n    return this.http.get<DeviceServiceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDevcieServiceByName(name: string): Observable<DeviceServiceResponse> {\n    let url = `${this.findDeviceServiceByNameUrl}${name}`;\n    return this.http.get<DeviceServiceResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //Device Profile resources\n\n  allDeviceProfoles(): Observable<MultiDeviceProfileResponse> {\n    let url = `${this.deviceProfilesListUrl}?offset=${0}&limit=${-1}`;\n    return this.http.get<MultiDeviceProfileResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDeviceProfolesPagination(offset: number, limit: number): Observable<MultiDeviceProfileResponse> {\n    let url = `${this.deviceProfilesListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceProfileResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  addProfileYamlByNameViaUIBackend(data: any): Observable<any> {\n    let url = \"/api/v1/profile/yaml\";\n    return this.http.request('POST', url, {\n      body: data,\n      responseType: 'text'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findProfileById(id: string): Observable<DeviceProfileResponse> {\n    let url = `${this.findProfilesByIdUrl}/${id}`;\n    return this.http.get<DeviceProfileResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findProfileByName(name: string): Observable<DeviceProfileResponse> {\n    let url = `${this.findProfilesByNameUrl}/${name}`;\n    return this.http.get<DeviceProfileResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findProfileYamlByNameViaUIBackend(name: string): Observable<any> {\n    let url = \"/api/v1/profile/yaml/name/\" + name;\n    return this.http.request('GET', url, {\n      responseType: 'text'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  uploadProfileYamlFile(data: any): Observable<any> {\n    let url = `${this.uploadProfileYamlFileUrl}`;\n    return this.http.request('POST', url, {\n      body: data,\n      responseType: 'text',\n      // headers: new HttpHeaders({\n      //   'Content-Type': 'multipart/form-data; charset=utf-8'\n      // })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  updateDeviceProfile(profile: DeviceProfile): Observable<any> {\n    let url = `${this.updateDeviceProfileUrl}`;\n    return this.http.put(url, profile, this.httpPostOrPutJSONOptions).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  updateProfileYamlContentViaUIBackend(data: any):Observable<any> {\n    let url = \"/api/v1/profile/yaml\";\n    return this.http.put(url,data,{\n      headers: new HttpHeaders({\n        'Content-Type': 'text/plain; charset=utf-8'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n    // return this.http.request('PUT', url, {\n    //   body: data,\n    //   responseType: 'json',\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'text/plain; charset=utf-8'\n    //   })\n    // }).pipe(\n    //   catchError(error => this.errorSvc.handleError(error))\n    // )\n  }\n\n  //deprecated\n  uploadProfileYamlContent(data: any): Observable<string> {\n    let url = `${this.uploadProfileYamlContentUrl}`;\n    return this.http.request('POST', url, {\n      body: data,\n      responseType: 'text',\n      headers: new HttpHeaders({\n        'Content-Type': 'text/plain; charset=utf-8'\n      })\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findProfileYamlById(id: string): Observable<any> {\n    let url = `${this.deviceProfileYamlUrl}${id}`;\n    return this.http.request('GET', url, { responseType: 'text' })\n  }\n\n  //deprecated\n  deleteProfileById(id: string): Observable<any> {\n    let url = `${this.deleteProfileByIdUrl}${id}`;\n    return this.http.delete(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  deleteProfileByName(name: string): Observable<any> {\n    let url = `${this.deleteProfileByNamedUrl}${name}`;\n    return this.http.delete(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n}\n"],"sourceRoot":"webpack:///"}