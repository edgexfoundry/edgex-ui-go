{"version":3,"sources":["./src/app/services/command.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["/*******************************************************************************\n * Copyright Â© 2021-2022 VMware, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n * \n * @author: Huaqiao Zhang, <huaqiaoz@vmware.com>\n *******************************************************************************/\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { ErrorService } from './error.service';\n\nimport { DeviceCoreCommandResponse, MultiDeviceCoreCommandsResponse } from '../contracts/v2/responses/device-core-command-response';\nimport { EventResponse } from '../contracts/v2/responses/event-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandService {\n\n  endpoint: string = \"/command\";\n  version: string = \"/api/v2\";\n  urlPrefix: string = `${this.endpoint}${this.version}`;\n\n  endpointHealthUrl: string = \"/ping\";\n  versionUrl: string = \"/version\";\n\n  deviceCoreCommandListUrl: string = `${this.urlPrefix}/device/all`;\n  commandsByDeviceIdUrl: string = `${this.urlPrefix}/device/`; //deprecated\n  commandsByDeviceNameUrl: string = `${this.urlPrefix}/device/name/`;\n  issueCmdByDeviceNameAndCmdNameUrl: string = `${this.urlPrefix}/device/name/`;\n\n  httpPostOrPutOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json',\n      'Authorization': ''\n    })\n  };\n\n  constructor(private http: HttpClient, private errorSvc: ErrorService) { }\n\n  //deprecated\n  findCommnadsByDeviceId(deviceId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  allDeviceCoreCommandsPagination(offset: number, limit: number): Observable<MultiDeviceCoreCommandsResponse> {\n    let url = `${this.deviceCoreCommandListUrl}?offset=${offset}&limit=${limit}`;\n    return this.http.get<MultiDeviceCoreCommandsResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  findDeviceAssociatedCommnadsByDeviceName(name: string): Observable<DeviceCoreCommandResponse> {\n    let url = `${this.commandsByDeviceNameUrl}${name}`;\n    return this.http.get<DeviceCoreCommandResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  findAllDeviceCommnads(): Observable<any> {\n    let url = `${this.urlPrefix}/device`;\n    return this.http.get(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetBinaryCmd(deviceId: string, commandId: string): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n    return this.http.request('GET', url, {\n      responseType: 'arraybuffer'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  issueGetCmd(deviceName: string, commandName: string): Observable<EventResponse> {\n    let url = `${this.issueCmdByDeviceNameAndCmdNameUrl}${deviceName}/${commandName}`;\n    return this.http.get<EventResponse>(url).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n\n  //deprecated\n  // issueGetCmd(deviceId: string, commandId: string): Observable<any> {\n  //   let url = `${this.urlPrefix}${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n  //   return this.http.get(url).pipe(\n  //     catchError(error => this.errorSvc.handleError(error))\n  //   )\n  // }\n\n  issueSetCmd(deviceId: string, commandId: string, params?: any): Observable<any> {\n    let url = `${this.commandsByDeviceIdUrl}${deviceId}/command/${commandId}`;\n    return this.http.request('PUT', url, {\n      body: JSON.stringify(params),\n      responseType: 'text'\n    }).pipe(\n      catchError(error => this.errorSvc.handleError(error))\n    )\n  }\n}\n"],"sourceRoot":"webpack:///"}